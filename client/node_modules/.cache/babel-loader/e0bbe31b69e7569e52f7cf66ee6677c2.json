{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ForgotPassword/ForgotPassword.js\";\nimport React from \"react\";\nimport Warnings from \"../Warnings/Warnings\";\nimport VALIDATE from '../../utils/validation';\nimport API from \"../../utils/API\";\nimport { store } from 'react-notifications-component';\nimport { Container, Image, Form, Button, Dimmer, Loader, Divider } from 'semantic-ui-react';\nconst DEFAULT_STATE = {\n  email: \"\",\n  password: \"\",\n  warnings: [],\n  loading: false,\n  w_email: \"\",\n  w_password: \"\",\n  s_mailsent: ''\n};\nconst DEFAULT_ERRORS = {\n  w_email: \"\",\n  w_password: \"\"\n};\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.send = async () => {\n      // Clear warnings\n      this.warnings = _objectSpread({}, DEFAULT_ERRORS);\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password; // Check Validity\n\n      if (this._mounted) this.setState({\n        loading: true\n      });\n      await VALIDATE.sleepLoader(300).then(async () => {\n        if (!VALIDATE.validateEmail(email)) this.warnings.w_email = \"Please enter a valid email\";\n        if (this.params && this.params.token) if (!VALIDATE.validatePassword(password)) this.warnings.w_password = \"Please enter a valid password\";\n\n        if (!VALIDATE.checkWarnings(this.warnings)) {\n          await API.userforgot(email).then(response => {\n            if (response.status === 200) store.addNotification({\n              title: 'Forgot Password',\n              message: \"A reset link as been sent\",\n              type: \"warning\",\n              insert: \"top\",\n              container: \"top-right\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: {\n                duration: 10000,\n                onScreen: true\n              }\n            });\n          }).catch(error => {\n            if (error.response.status === 400) {\n              this.setState({\n                w_email: error.response.data.warnings\n              });\n            }\n          });\n        } else if (this._mounted) this.setState(_objectSpread({}, this.warnings));\n      });\n      if (this._mounted) this.setState({\n        loading: false\n      });\n    };\n\n    this.handleChange = event => {\n      const _this$state2 = this.state,\n            w_email = _this$state2.w_email,\n            w_password = _this$state2.w_password;\n      if (event.target.id === \"email\" && w_email && w_email.length > 0) this.setState({\n        w_email: \"\"\n      });\n      if (event.target.id === \"password\" && w_password && w_password.length > 0) this.setState({\n        w_password: \"\"\n      });\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this.warnings = _objectSpread({}, DEFAULT_ERRORS);\n    this._mounted = false;\n    this.params = null;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this.params = this.props.match.params;\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          loading = _this$state3.loading,\n          w_email = _this$state3.w_email,\n          w_password = _this$state3.w_password;\n\n    const ResetActive = () => {\n      if (this.params && this.params.token) return React.createElement(Form.Field, {\n        className: \"inputPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        error: w_password && w_password.length > 0 ? {\n          content: w_password,\n          pointing: 'below'\n        } : null,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        id: \"password\",\n        onChange: this.handleChange,\n        type: \"password\",\n        size: \"huge\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n      return null;\n    };\n\n    return React.createElement(Container, {\n      className: \"loginModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Request...\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Image, {\n      className: \"img-fluid\",\n      src: \"/img/MatchApp-Logo.png\",\n      alt: \"Responsive image\",\n      size: \"medium\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"loginWarnings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Warnings, {\n      data: this.state.warnings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"shape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"loginh1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Forgot Password\"), React.createElement(Form, {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      error: w_email && w_email.length > 0 ? {\n        content: w_email,\n        pointing: 'below'\n      } : null,\n      id: \"email\",\n      icon: \"users\",\n      iconPosition: \"left\",\n      autoFocus: true,\n      onChange: this.handleChange,\n      size: \"huge\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(ResetActive, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"loginButton\",\n      loading: loading,\n      size: \"huge\",\n      type: \"submit\",\n      onClick: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Send reset link\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ForgotPassword/ForgotPassword.js"],"names":["React","Warnings","VALIDATE","API","store","Container","Image","Form","Button","Dimmer","Loader","Divider","DEFAULT_STATE","email","password","warnings","loading","w_email","w_password","s_mailsent","DEFAULT_ERRORS","ForgotPassword","Component","constructor","props","send","state","_mounted","setState","sleepLoader","then","validateEmail","params","token","validatePassword","checkWarnings","userforgot","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","catch","error","data","handleChange","event","target","id","length","value","componentWillUnmount","componentDidMount","match","render","ResetActive","content","pointing"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,SAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,MAAhD,EAAwDC,OAAxD,QAAsE,mBAAtE;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,QAAQ,EAAE,EAHQ;AAIlBC,EAAAA,OAAO,EAAE,KAJS;AAKlBC,EAAAA,OAAO,EAAE,EALS;AAMlBC,EAAAA,UAAU,EAAE,EANM;AAOlBC,EAAAA,UAAU,EAAE;AAPM,CAAtB;AAUA,MAAMC,cAAc,GAAG;AACnBH,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAAvB;;AAKA,MAAMG,cAAN,SAA6BrB,KAAK,CAACsB,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAkBpBC,IAlBoB,GAkBb,YAAW;AACd;AACA,WAAKV,QAAL,qBAAoBK,cAApB;AAFc,0BAGY,KAAKM,KAHjB;AAAA,YAGPb,KAHO,eAGPA,KAHO;AAAA,YAGAC,QAHA,eAGAA,QAHA,EAId;;AACA,UAAI,KAAKa,QAAT,EACI,KAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAE;AAAV,OAAd;AACJ,YAAMd,QAAQ,CAAC2B,WAAT,CAAqB,GAArB,EACDC,IADC,CACI,YAAY;AACd,YAAI,CAAC5B,QAAQ,CAAC6B,aAAT,CAAuBlB,KAAvB,CAAL,EACI,KAAKE,QAAL,CAAcE,OAAd,GAAwB,4BAAxB;AACJ,YAAI,KAAKe,MAAL,IAAe,KAAKA,MAAL,CAAYC,KAA/B,EACI,IAAI,CAAC/B,QAAQ,CAACgC,gBAAT,CAA0BpB,QAA1B,CAAL,EACI,KAAKC,QAAL,CAAcG,UAAd,GAA2B,+BAA3B;;AACR,YAAI,CAAChB,QAAQ,CAACiC,aAAT,CAAuB,KAAKpB,QAA5B,CAAL,EAA4C;AACxC,gBAAMZ,GAAG,CAACiC,UAAJ,CAAevB,KAAf,EACDiB,IADC,CACIO,QAAQ,IAAI;AACd,gBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EACIlC,KAAK,CAACmC,eAAN,CAAsB;AAClBC,cAAAA,KAAK,EAAE,iBADW;AAElBC,cAAAA,OAAO,EAAE,2BAFS;AAGlBC,cAAAA,IAAI,EAAE,SAHY;AAIlBC,cAAAA,MAAM,EAAE,KAJU;AAKlBC,cAAAA,SAAS,EAAE,WALO;AAMlBC,cAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CANK;AAOlBC,cAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CAPI;AAQlBC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,QAAQ,EAAE,KADL;AAELC,gBAAAA,QAAQ,EAAE;AAFL;AARS,aAAtB;AAaP,WAhBC,EAiBDC,KAjBC,CAiBKC,KAAK,IAAI;AACZ,gBAAIA,KAAK,CAACd,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAkC;AAC9B,mBAAKV,QAAL,CAAc;AAACX,gBAAAA,OAAO,EAAEkC,KAAK,CAACd,QAAN,CAAee,IAAf,CAAoBrC;AAA9B,eAAd;AACH;AACJ,WArBC,CAAN;AAsBH,SAvBD,MAuBO,IAAI,KAAKY,QAAT,EACH,KAAKC,QAAL,mBAAkB,KAAKb,QAAvB;AACP,OAhCC,CAAN;AAiCA,UAAI,KAAKY,QAAT,EACI,KAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAE;AAAV,OAAd;AACP,KA5DmB;;AAAA,SA8DpBqC,YA9DoB,GA8DJC,KAAD,IAAW;AAAA,2BACQ,KAAK5B,KADb;AAAA,YACfT,OADe,gBACfA,OADe;AAAA,YACNC,UADM,gBACNA,UADM;AAEtB,UAAIoC,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,OAApB,IAA+BvC,OAA/B,IAA0CA,OAAO,CAACwC,MAAR,GAAiB,CAA/D,EACI,KAAK7B,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACJ,UAAIqC,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,UAApB,IAAkCtC,UAAlC,IAAgDA,UAAU,CAACuC,MAAX,GAAoB,CAAxE,EACI,KAAK7B,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAE;AAAb,OAAd;AACJ,WAAKU,QAAL,CAAc;AAAC,SAAC0B,KAAK,CAACC,MAAN,CAAaC,EAAd,GAAmBF,KAAK,CAACC,MAAN,CAAaG;AAAjC,OAAd;AACH,KArEmB;;AAEhB,SAAKhC,KAAL,qBAAiBd,aAAjB;AACA,SAAKG,QAAL,qBAAoBK,cAApB;AACA,SAAKO,QAAL,GAAgB,KAAhB;AACA,SAAKK,MAAL,GAAc,IAAd;AACH;;AAED2B,EAAAA,oBAAoB,GAAG;AACnB,SAAKhC,QAAL,GAAgB,KAAhB;AACH;;AAEDiC,EAAAA,iBAAiB,GAAG;AAChB,SAAKjC,QAAL,GAAgB,IAAhB;AACD,SAAKK,MAAL,GAAc,KAAKR,KAAL,CAAWqC,KAAX,CAAiB7B,MAA/B;AAEF;;AAwDD8B,EAAAA,MAAM,GAAG;AAAA,yBACkC,KAAKpC,KADvC;AAAA,UACEV,OADF,gBACEA,OADF;AAAA,UACWC,OADX,gBACWA,OADX;AAAA,UACoBC,UADpB,gBACoBA,UADpB;;AAEL,UAAM6C,WAAW,GAAG,MAAM;AACtB,UAAI,KAAK/B,MAAL,IAAe,KAAKA,MAAL,CAAYC,KAA/B,EACI,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,KAAK,EAAEf,UAAU,IAAIA,UAAU,CAACuC,MAAX,GAAoB,CAAlC,GAAsC;AACzCO,UAAAA,OAAO,EAAE9C,UADgC;AAEzC+C,UAAAA,QAAQ,EAAE;AAF+B,SAAtC,GAGH,IAJR;AAKI,QAAA,IAAI,EAAC,MALT;AAMI,QAAA,YAAY,EAAC,MANjB;AAOI,QAAA,EAAE,EAAC,UAPP;AAQI,QAAA,QAAQ,EAAE,KAAKZ,YARnB;AASI,QAAA,IAAI,EAAC,UATT;AAUI,QAAA,IAAI,EAAC,MAVT;AAWI,QAAA,WAAW,EAAC,UAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAgBJ,aAAO,IAAP;AACH,KAnBD;;AAqBA,WACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAErC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,WAAjB;AACO,MAAA,GAAG,EAAC,wBADX;AAEO,MAAA,GAAG,EAAC,kBAFX;AAGO,MAAA,IAAI,EAAC,QAHZ;AAIO,MAAA,QAAQ,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAUI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKU,KAAL,CAAWX,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAaI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAcI,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAeI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAfJ,EAgBI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,KAAK,EAAEE,OAAO,IAAIA,OAAO,CAACwC,MAAR,GAAiB,CAA5B,GAAgC;AAACO,QAAAA,OAAO,EAAE/C,OAAV;AAAmBgD,QAAAA,QAAQ,EAAE;AAA7B,OAAhC,GAAwE,IADnF;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,YAAY,EAAC,MAJjB;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,QAAQ,EAAE,KAAKZ,YANnB;AAOI,MAAA,IAAI,EAAC,MAPT;AAQI,MAAA,WAAW,EAAC,OARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAYG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZH,EAaI,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAcI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AACQ,MAAA,OAAO,EAAErC,OADjB;AAC0B,MAAA,IAAI,EAAC,MAD/B;AAEQ,MAAA,IAAI,EAAC,QAFb;AAGQ,MAAA,OAAO,EAAE,KAAKS,IAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAdJ,CAhBJ,EAqCI,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCJ,EAsCI,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCJ,CADJ;AA0CH;;AA3IwC;;AA8I7C,eAAeJ,cAAf","sourcesContent":["import React from \"react\";\nimport Warnings from \"../Warnings/Warnings\";\nimport VALIDATE from '../../utils/validation';\nimport API from \"../../utils/API\";\nimport { store } from 'react-notifications-component';\nimport {Container, Image, Form, Button, Dimmer, Loader, Divider} from 'semantic-ui-react';\n\nconst DEFAULT_STATE = {\n    email: \"\",\n    password: \"\",\n    warnings: [],\n    loading: false,\n    w_email: \"\",\n    w_password: \"\",\n    s_mailsent: ''\n};\n\nconst DEFAULT_ERRORS = {\n    w_email: \"\",\n    w_password: \"\",\n};\n\nclass ForgotPassword extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.warnings = {...DEFAULT_ERRORS};\n        this._mounted = false;\n        this.params = null;\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n       this.params = this.props.match.params;\n       \n    }\n\n    send = async() => {\n        // Clear warnings\n        this.warnings = {...DEFAULT_ERRORS};\n        const {email, password} = this.state;\n        // Check Validity\n        if (this._mounted)\n            this.setState({loading: true});\n        await VALIDATE.sleepLoader(300)\n            .then(async () => {\n                if (!VALIDATE.validateEmail(email))\n                    this.warnings.w_email = \"Please enter a valid email\";\n                if (this.params && this.params.token)\n                    if (!VALIDATE.validatePassword(password))\n                        this.warnings.w_password = \"Please enter a valid password\";\n                if (!VALIDATE.checkWarnings(this.warnings)) {\n                    await API.userforgot(email)\n                        .then(response => {\n                            if (response.status === 200)\n                                store.addNotification({\n                                    title: 'Forgot Password',\n                                    message: \"A reset link as been sent\",\n                                    type: \"warning\",\n                                    insert: \"top\",\n                                    container: \"top-right\",\n                                    animationIn: [\"animated\", \"fadeIn\"],\n                                    animationOut: [\"animated\", \"fadeOut\"],\n                                    dismiss: {\n                                        duration: 10000,\n                                        onScreen: true\n                                    }\n                                });\n                        })\n                        .catch(error => {\n                            if (error.response.status === 400){\n                                this.setState({w_email: error.response.data.warnings});\n                            }\n                        })\n                } else if (this._mounted)\n                    this.setState({...this.warnings});\n            });\n        if (this._mounted)\n            this.setState({loading: false});\n    };\n\n    handleChange = (event) => {\n        const {w_email, w_password} = this.state;\n        if (event.target.id === \"email\" && w_email && w_email.length > 0)\n            this.setState({w_email: \"\"});\n        if (event.target.id === \"password\" && w_password && w_password.length > 0)\n            this.setState({w_password: \"\"});\n        this.setState({[event.target.id]: event.target.value});\n    }\n\n\n    render() {\n        const {loading, w_email, w_password} = this.state;\n        const ResetActive = () => {\n            if (this.params && this.params.token)\n                return (\n                    <Form.Field className=\"inputPassword\">\n                        <Form.Input\n                            error={w_password && w_password.length > 0 ? {\n                                content: w_password,\n                                pointing: 'below'\n                            } : null}\n                            icon='lock'\n                            iconPosition='left'\n                            id=\"password\"\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            size=\"huge\"\n                            placeholder=\"Password\"/>\n                    </Form.Field>\n                );\n            return null\n        };\n\n        return (\n            <Container className=\"loginModal\">\n                <Dimmer active={loading}>\n                    <Loader size='big'>Request...</Loader>\n                </Dimmer>\n                <Divider hidden />\n                <Image className=\"img-fluid\"\n                       src=\"/img/MatchApp-Logo.png\"\n                       alt=\"Responsive image\"\n                       size=\"medium\"\n                       centered />\n                <div className=\"loginWarnings\">\n                    <Warnings data={this.state.warnings}/>\n                </div>\n                <div className=\"shape\"></div>\n                <Divider hidden />\n                <h1 className=\"loginh1\">Forgot Password</h1>\n                <Form className=\"loginForm\">\n                    <Form.Field>\n                        <Form.Input\n                            error={w_email && w_email.length > 0 ? {content: w_email, pointing: 'below'} : null}\n                            id=\"email\"\n                            icon='users'\n                            iconPosition='left'\n                            autoFocus\n                            onChange={this.handleChange}\n                            size=\"huge\"\n                            placeholder=\"Email\" />\n                    </Form.Field>\n                   <ResetActive />\n                    <Divider hidden />\n                    <Button className=\"loginButton\"\n                            loading={loading} size='huge'\n                            type=\"submit\"\n                            onClick={this.send}>\n                        Send reset link\n                    </Button>\n                </Form>\n                <Divider hidden />\n                <Divider hidden />\n            </Container>\n        );\n    }\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}