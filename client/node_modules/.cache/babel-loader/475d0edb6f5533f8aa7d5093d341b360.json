{"ast":null,"code":"var _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/client/src/components/Notifications/ModalUserLike/ModalUserLike.js\";\nimport React from 'react';\nimport API from './../../../utils/API';\nimport { Divider, Grid, Image, Label, Modal, Segment } from \"semantic-ui-react\";\n\nclass ModalUserLike extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userID: null,\n      showModal: false,\n      user: null\n    };\n\n    this.componentDidMount = async () => {\n      await API.getUserIdProfile(this.props.userID).then(res => {\n        if (res.status === 200) this.setState({\n          user: res.data.user\n        });\n      });\n    };\n\n    this.handleClose = () => this.setState({\n      userID: null,\n      showModal: false,\n      user: null\n    });\n\n    this.state = props;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.userID !== prevState.userID) API.getUserIdProfile(nextProps.userID).then(res => {\n      if (res.status === 200) return {\n        user: res.data.user,\n        showModal: true,\n        userID: nextProps.userID\n      };\n    });\n    return null;\n  }\n\n  render() {\n    const _this$state = this.state,\n          userID = _this$state.userID,\n          showModal = _this$state.showModal,\n          user = _this$state.user;\n    console.log(this.state);\n    if (user) return React.createElement(Modal, {\n      dimmer: \"blurring\",\n      size: 'tiny',\n      open: showModal,\n      onClose: this.handleClose,\n      className: \"ModalUserLike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"CardHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CardHeaderTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" \", user.firstname, \" \", user.lastname, \", \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, user.age))), React.createElement(Modal.Content, {\n      className: \"ModalProfilView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      className: \"RowImages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"medium\",\n      src: user.imgs[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      className: \"RowImages\",\n      centered: true,\n      columns: user.imgs.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, user.imgs.map((img, i) => {\n      if (i > 0) return React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Image, {\n        rounded: true,\n        size: \"small\",\n        src: user.imgs[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    })))));\n    return null;\n  }\n\n}\n\nexport default ModalUserLike;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/client/src/components/Notifications/ModalUserLike/ModalUserLike.js"],"names":["React","API","Divider","Grid","Image","Label","Modal","Segment","ModalUserLike","Component","constructor","props","state","userID","showModal","user","componentDidMount","getUserIdProfile","then","res","status","setState","data","handleClose","getDerivedStateFromProps","nextProps","prevState","render","console","log","firstname","lastname","age","imgs","length","map","img","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from './../../../utils/API';\nimport {Divider, Grid, Image, Label, Modal, Segment} from \"semantic-ui-react\";\n\nclass ModalUserLike extends React.Component {\n\n    state = {\n        userID: null,\n        showModal: false,\n        user: null,\n\n    };\n\n    constructor(props){\n        super(props);\n        this.state = props;\n    }\n\n    componentDidMount = async() => {\n        await API.getUserIdProfile(this.props.userID)\n            .then(res => {\n                if (res.status === 200)\n                    this.setState({ user: res.data.user });\n            })\n    }\n    handleClose = () => this.setState({ userID: null, showModal: false, user: null});\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if (nextProps.userID !== prevState.userID)\n            API.getUserIdProfile(nextProps.userID)\n                .then(res => {\n                    if (res.status === 200)\n                        return { user: res.data.user, showModal: true, userID: nextProps.userID };\n                });\n        return null;\n    }\n\n    render(){\n        const { userID, showModal , user} = this.state;\n        console.log(this.state);\n        if (user)\n            return (\n                <Modal\n                    dimmer={\"blurring\"}\n                    size={'tiny'}\n                    open={showModal}\n                    onClose={this.handleClose}\n                    className=\"ModalUserLike\">\n                    <Modal.Header className=\"CardHeader\"><h1\n                        className=\"CardHeaderTile\"> {user.firstname} {user.lastname}, <strong>{user.age}</strong></h1>\n                    </Modal.Header>\n                    <Modal.Content className=\"ModalProfilView\">\n                        <Modal.Header></Modal.Header>\n                        <Divider hidden/>\n                        <Grid centered columns={2}>\n                            <Grid.Column className=\"RowImages\">\n                                <Image rounded size='medium' src={user.imgs[0]}/>\n                            </Grid.Column>\n                            <Grid.Row className=\"RowImages\" centered columns={user.imgs.length}>\n                                {user.imgs.map((img, i) => {\n                                    if (i > 0)\n                                        return (\n                                            <Grid.Column>\n                                                <Image rounded size='small' src={user.imgs[i]}/>\n                                            </Grid.Column>\n                                        )\n                                })}\n                            </Grid.Row>\n                        </Grid>\n                    </Modal.Content>\n                </Modal>\n            )\n        return null;\n    }\n}\n\nexport default ModalUserLike;"]},"metadata":{},"sourceType":"module"}