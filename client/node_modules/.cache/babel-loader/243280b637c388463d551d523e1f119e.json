{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/AddPhotos/AddPhotos.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Grid, Progress, Image, Divider, Icon, Container, Dimmer, Loader } from 'semantic-ui-react';\nimport classnames from 'classnames';\nimport DividerC from \"../../Divider/Divider\";\nimport FileUpload from \"../../fileUpload/fileUpload\";\nimport Warnings from '../../../components/Warnings/Warnings';\nimport UploadPreview from '../../../components/EditProfil/AddPhotos/Preview/loadPreview/loadPreview';\nimport ProfileImgPreview from '../../../components/EditProfil/AddPhotos/Preview/loadCurrentPictures/loadPreviewImages';\nimport API from \"../../../utils/API\";\nconst DEFAULT_STATE = {\n  profileImg: [],\n  coverImage: \"\",\n  previewTab: [],\n  warnings: []\n};\n\nclass AddPhotos extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setWarnings = data => this.setState({\n      warnings: data\n    });\n\n    this.showPreview = previewTab => this.setState({\n      previewTab: previewTab\n    });\n\n    this.updateImages = () => this.setState({\n      coverImage: \"http://localhost:3000/\" + this.state.profileImg[0].img_link\n    });\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this.state.coverImage = \"https://react.semantic-ui.com/images/wireframe/white-image.png\";\n    this.handleImageUpload = this.handleImageUpload.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      const _ref = await API.getPhotos(),\n            data = _ref.data;\n\n      if (data.profileImg.length > 0) this.setState({\n        profileImg: data.profileImg\n      }, () => {\n        this.updateImages();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  } // Warnings for errors during upload or file\n\n\n  async handleImageUpload() {\n    try {\n      const _ref2 = await API.getPhotos(),\n            data = _ref2.data;\n\n      if (data.profileImg.length > 0) this.setState({\n        profileImg: data.profileImg\n      }, () => {\n        this.updateImages();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const ProgressBar = () => React.createElement(Progress, {\n      percent: this.props.complete,\n      className: \"ProgressBarProfile\",\n      indicating: true,\n      progress: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames(\"ui middle\", \"AddPhotos\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Connecting to MatchApp...\")), React.createElement(Grid, {\n      columns: 2,\n      doubling: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CompleteTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Add photos\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ProgressBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(DividerC, {\n      vertically: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      columns: 2,\n      doubling: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"ShadowImage\",\n      src: this.state.coverImage,\n      size: \"medium\",\n      centered: true,\n      rounded: true,\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FileUpload, {\n      handleSaveFinished: this.handleSaveFinished,\n      savePhotos: this.state.savePhotos,\n      showPreview: this.showPreview,\n      setWarnings: this.setWarnings,\n      handleImageUpload: this.handleImageUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Container, {\n      fluid: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginWarnings WarningsUpload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Warnings, {\n      data: this.state.warnings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(ProfileImgPreview, {\n      data: this.state.profileImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(UploadPreview, {\n      data: this.state.previewTab,\n      imgNb: this.state.ImgUploadingNb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow alternate circle left outline\",\n      size: \"huge\",\n      onClick: this.props.prevSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow alternate circle right outline\",\n      size: \"huge\",\n      onClick: this.props.nextSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default AddPhotos;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/AddPhotos/AddPhotos.js"],"names":["React","Grid","Progress","Image","Divider","Icon","Container","Dimmer","Loader","classnames","DividerC","FileUpload","Warnings","UploadPreview","ProfileImgPreview","API","DEFAULT_STATE","profileImg","coverImage","previewTab","warnings","AddPhotos","Component","constructor","props","setWarnings","data","setState","showPreview","updateImages","state","img_link","handleImageUpload","bind","componentDidMount","getPhotos","length","error","console","log","render","ProgressBar","complete","handleSaveFinished","savePhotos","ImgUploadingNb","prevSection","nextSection"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,KAAxB,EAA+BC,OAA/B,EAAwCC,IAAxC,EAA8CC,SAA9C,EAAyDC,MAAzD,EAAiEC,MAAjE,QAA8E,mBAA9E;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,aAAP,MAA0B,0EAA1B;AACA,OAAOC,iBAAP,MAA8B,wFAA9B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,EADM;AAElBC,EAAAA,UAAU,EAAE,EAFM;AAGlBC,EAAAA,UAAU,EAAE,EAHM;AAIlBC,EAAAA,QAAQ,EAAE;AAJQ,CAAtB;;AAQA,MAAMC,SAAN,SAAwBrB,KAAK,CAACsB,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,WAlBmB,GAkBJC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAEM;AAAX,KAAd,CAlBL;;AAAA,SAoBnBE,WApBmB,GAoBJT,UAAD,IAAgB,KAAKQ,QAAL,CAAc;AAACR,MAAAA,UAAU,EAAEA;AAAb,KAAd,CApBX;;AAAA,SAsBnBU,YAtBmB,GAsBJ,MAAM,KAAKF,QAAL,CAAc;AAACT,MAAAA,UAAU,EAAE,2BAA2B,KAAKY,KAAL,CAAWb,UAAX,CAAsB,CAAtB,EAAyBc;AAAjE,KAAd,CAtBF;;AAEf,SAAKD,KAAL,qBAAkBd,aAAlB;AACA,SAAKc,KAAL,CAAWZ,UAAX,GAAwB,gEAAxB;AACA,SAAKc,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AACD,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AAAA,mBACiB,MAAMnB,GAAG,CAACoB,SAAJ,EADvB;AAAA,YACQT,IADR,QACQA,IADR;;AAEA,UAAIA,IAAI,CAACT,UAAL,CAAgBmB,MAAhB,GAAyB,CAA7B,EACI,KAAKT,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAES,IAAI,CAACT;AAAlB,OAAd,EAA6C,MAAM;AAC/C,aAAKY,YAAL;AACH,OAFD;AAGP,KAND,CAME,OAAMQ,KAAN,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAjBmC,CAkBpC;;;AAMA,QAAML,iBAAN,GAA2B;AACvB,QAAI;AAAA,oBACiB,MAAMjB,GAAG,CAACoB,SAAJ,EADvB;AAAA,YACQT,IADR,SACQA,IADR;;AAEA,UAAIA,IAAI,CAACT,UAAL,CAAgBmB,MAAhB,GAAyB,CAA7B,EACI,KAAKT,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAES,IAAI,CAACT;AAAlB,OAAd,EAA6C,MAAM;AAC/C,aAAKY,YAAL;AACH,OAFD;AAGP,KAND,CAME,OAAMQ,KAAN,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,MAChB,oBAAC,QAAD;AACI,MAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWkB,QADxB;AAEI,MAAA,SAAS,EAAC,oBAFd;AAGI,MAAA,UAAU,MAHd;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,IAAI,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;;AAQA,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEjC,UAAU,CAAC,WAAD,EAAc,WAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,QAAQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAJJ,EAYI,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAaI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,QAAQ,MAA1B;AAA2B,MAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,aAAjB;AACO,MAAA,GAAG,EAAE,KAAKqB,KAAL,CAAWZ,UADvB;AAEO,MAAA,IAAI,EAAC,QAFZ;AAGO,MAAA,QAAQ,MAHf;AAIO,MAAA,OAAO,MAJd;AAIe,MAAA,QAAQ,MAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAQI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,QAAQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AACI,MAAA,kBAAkB,EAAE,KAAKyB,kBAD7B;AAEI,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWc,UAF3B;AAGI,MAAA,WAAW,EAAE,KAAKhB,WAHtB;AAII,MAAA,WAAW,EAAE,KAAKH,WAJtB;AAKI,MAAA,iBAAiB,EAAE,KAAKO,iBAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,EASQ,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWV,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CATR,EAcI,oBAAC,iBAAD;AAAoB,MAAA,IAAI,EAAE,KAAKU,KAAL,CAAWb,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CARJ,CAbJ,EAsCQ,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,KAAKa,KAAL,CAAWX,UADrB;AAEI,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWe,cAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCR,EA0CQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEA,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AACM,MAAA,IAAI,EAAC,qCADX;AAEM,MAAA,IAAI,EAAC,MAFX;AAGM,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWsB,WAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AACM,MAAA,IAAI,EAAC,sCADX;AAEM,MAAA,IAAI,EAAC,MAFX;AAGM,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,WAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFA,CA1CR,CADJ,CADJ;AA4DH;;AAxGmC;;AA0GxC,eAAe1B,SAAf","sourcesContent":["import React from 'react';\nimport {Grid, Progress, Image, Divider, Icon, Container, Dimmer, Loader} from 'semantic-ui-react';\nimport classnames from 'classnames';\nimport DividerC from \"../../Divider/Divider\";\nimport FileUpload from \"../../fileUpload/fileUpload\";\nimport Warnings from '../../../components/Warnings/Warnings';\nimport UploadPreview from '../../../components/EditProfil/AddPhotos/Preview/loadPreview/loadPreview';\nimport ProfileImgPreview from '../../../components/EditProfil/AddPhotos/Preview/loadCurrentPictures/loadPreviewImages';\nimport API from \"../../../utils/API\";\n\nconst DEFAULT_STATE = {\n    profileImg: [],\n    coverImage: \"\",\n    previewTab: [],\n    warnings: [],\n};\n\n\nclass AddPhotos extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ({...DEFAULT_STATE});\n        this.state.coverImage = \"https://react.semantic-ui.com/images/wireframe/white-image.png\";\n        this.handleImageUpload = this.handleImageUpload.bind(this);\n    }\n    async componentDidMount() {\n        try {\n            const { data } = await API.getPhotos();\n            if (data.profileImg.length > 0)\n                this.setState({profileImg: data.profileImg}, () => {\n                    this.updateImages();\n                });\n        } catch(error){\n            console.log(error);\n        }\n    }\n    // Warnings for errors during upload or file\n    setWarnings = (data) => this.setState({warnings: data});\n    // Load preview tab for loadPreview Component\n    showPreview = (previewTab) => this.setState({previewTab: previewTab});\n    // Update Top image preview\n    updateImages = () => this.setState({coverImage: \"http://localhost:3000/\" + this.state.profileImg[0].img_link});\n    async handleImageUpload () {\n        try {\n            const { data } = await API.getPhotos();\n            if (data.profileImg.length > 0)\n                this.setState({profileImg: data.profileImg}, () => {\n                    this.updateImages();\n                });\n        } catch(error){\n            console.log(error);\n        }\n    };\n    render() {\n        const ProgressBar = () => (\n            <Progress\n                percent={this.props.complete}\n                className=\"ProgressBarProfile\"\n                indicating\n                progress\n                size=\"large\"/>\n        );\n        return (\n            <div className=\"container-fluid\">\n                <div className={classnames(\"ui middle\", \"AddPhotos\")}>\n                    <Dimmer active>\n                        <Loader size='big'>Connecting to MatchApp...</Loader>\n                    </Dimmer>\n                    <Grid columns={2} doubling>\n                        <Grid.Column>\n                            <h1 className=\"CompleteTitle\">Add photos</h1>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <ProgressBar />\n                        </Grid.Column>\n                    </Grid>\n                    <DividerC vertically={false}/>\n                    <Grid columns={2} doubling textAlign=\"center\">\n                        <Grid.Column>\n                            <Image className=\"ShadowImage\"\n                                   src={this.state.coverImage}\n                                   size='medium'\n                                   centered\n                                   rounded bordered />\n                        </Grid.Column>\n                        <Grid.Column centered>\n                            <Grid.Row centered>\n                            <FileUpload\n                                handleSaveFinished={this.handleSaveFinished}\n                                savePhotos={this.state.savePhotos}\n                                showPreview={this.showPreview}\n                                setWarnings={this.setWarnings}\n                                handleImageUpload={this.handleImageUpload} />\n                            </Grid.Row>\n                                <Container fluid textAlign=\"center\">\n                                    <div className=\"loginWarnings WarningsUpload\">\n                                        <Warnings data={this.state.warnings}/>\n                                    </div>\n                                </Container>\n                            <ProfileImgPreview  data={this.state.profileImg}/>\n                        </Grid.Column>\n                    </Grid>\n                        <UploadPreview\n                            data={this.state.previewTab}\n                            imgNb={this.state.ImgUploadingNb}\n                        />\n                        <Grid>\n                            <Divider hidden />\n                        <Grid.Row centered>\n                            <Icon className=\"EditProfilArrow\"\n                                  name='arrow alternate circle left outline'\n                                  size=\"huge\"\n                                  onClick={this.props.prevSection}/>\n                            <Icon className=\"EditProfilArrow\"\n                                  name='arrow alternate circle right outline'\n                                  size=\"huge\"\n                                  onClick={this.props.nextSection}/>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AddPhotos;"]},"metadata":{},"sourceType":"module"}