{"ast":null,"code":"import React from'react';import{Grid,Image}from\"semantic-ui-react\";var LoadImages=function LoadImages(props){var deleteImage=function deleteImage(event){props.deleteImage(event);};if(Array.isArray(props.data)&&props.data.length>0){return props.data.map(function(item,key){return React.createElement(Grid.Column,{key:key,mobile:8,tablet:6,computer:6},React.createElement(Image,{className:\"ImagePreview\",src:item.img_link,rounded:true,fluid:true,label:{as:'a',corner:'right',icon:'close',onClick:function onClick(){return deleteImage(item.img_id,key);}}}));});}else{return null;}};export default LoadImages;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/EditProfil/AddPhotos/Preview/loadCurrentPictures/loadImages/loadImages.js"],"names":["React","Grid","Image","LoadImages","props","deleteImage","event","Array","isArray","data","length","map","item","key","img_link","as","corner","icon","onClick","img_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,CAAcC,KAAd,KAA0B,mBAA1B,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3BF,KAAK,CAACC,WAAN,CAAkBC,KAAlB,EACH,CAFD,CAGA,GAAIC,KAAK,CAACC,OAAN,CAAcJ,KAAK,CAACK,IAApB,GAA6BL,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAoB,CAArD,CAAwD,CACpD,MAAON,CAAAA,KAAK,CAACK,IAAN,CAAWE,GAAX,CAAe,SAACC,IAAD,CAAOC,GAAP,CAAe,CACjC,MACI,qBAAC,IAAD,CAAM,MAAN,EAAa,GAAG,CAAEA,GAAlB,CAAuB,MAAM,CAAE,CAA/B,CAAkC,MAAM,CAAE,CAA1C,CAA6C,QAAQ,CAAE,CAAvD,EACQ,oBAAC,KAAD,EACI,SAAS,CAAC,cADd,CAEI,GAAG,CAAED,IAAI,CAACE,QAFd,CAGI,OAAO,KAHX,CAII,KAAK,KAJT,CAKI,KAAK,CAAE,CAAEC,EAAE,CAAE,GAAN,CAAWC,MAAM,CAAE,OAAnB,CAA4BC,IAAI,CAAE,OAAlC,CAA4CC,OAAO,CAAE,yBAAMb,CAAAA,WAAW,CAACO,IAAI,CAACO,MAAN,CAAcN,GAAd,CAAjB,EAArD,CALX,EADR,CADJ,CAWH,CAZM,CAAP,CAaH,CAdD,IAeK,CACD,MAAO,KAAP,CACH,CACJ,CAtBD,CAwBA,cAAeV,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport {Grid, Image} from \"semantic-ui-react\";\n\n\nconst LoadImages = (props) => {\n    const deleteImage = (event) => {\n        props.deleteImage(event);\n    }\n    if (Array.isArray(props.data) && props.data.length > 0) {\n        return props.data.map((item, key) => {\n            return (\n                <Grid.Column key={key} mobile={8} tablet={6} computer={6}>\n                        <Image\n                            className=\"ImagePreview\"\n                            src={item.img_link}\n                            rounded\n                            fluid\n                            label={{ as: 'a', corner: 'right', icon: 'close' , onClick: () => deleteImage(item.img_id, key) }}\n                        />\n                </Grid.Column>\n            )\n        });\n    }\n    else {\n        return null\n    }\n};\n\nexport default LoadImages;"]},"metadata":{},"sourceType":"module"}