{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _without2 = _interopRequireDefault(require(\"lodash/without\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n/**\n * A rail is used to show accompanying content outside the boundaries of the main view of a site.\n */\n\n\nfunction Rail(props) {\n  var attached = props.attached,\n      children = props.children,\n      className = props.className,\n      close = props.close,\n      content = props.content,\n      dividing = props.dividing,\n      internal = props.internal,\n      position = props.position,\n      size = props.size;\n  var classes = (0, _classnames[\"default\"])('ui', position, size, (0, _lib.useKeyOnly)(attached, 'attached'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useKeyOnly)(internal, 'internal'), (0, _lib.useKeyOrValueAndKey)(close, 'close'), 'rail', className);\n  var rest = (0, _lib.getUnhandledProps)(Rail, props);\n  var ElementType = (0, _lib.getElementType)(Rail, props);\n  return _react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({}, rest, {\n    className: classes\n  }), _lib.childrenUtils.isNil(children) ? content : children);\n}\n\nRail.handledProps = [\"as\", \"attached\", \"children\", \"className\", \"close\", \"content\", \"dividing\", \"internal\", \"position\", \"size\"];\nRail.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _propTypes[\"default\"].elementType,\n\n  /** A rail can appear attached to the main viewport. */\n  attached: _propTypes[\"default\"].bool,\n\n  /** Primary content. */\n  children: _propTypes[\"default\"].node,\n\n  /** Additional classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** A rail can appear closer to the main viewport. */\n  close: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].oneOf(['very'])]),\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A rail can create a division between itself and a container. */\n  dividing: _propTypes[\"default\"].bool,\n\n  /** A rail can attach itself to the inside of a container. */\n  internal: _propTypes[\"default\"].bool,\n\n  /** A rail can be presented on the left or right side of a container. */\n  position: _propTypes[\"default\"].oneOf(_lib.SUI.FLOATS).isRequired,\n\n  /** A rail can have different sizes. */\n  size: _propTypes[\"default\"].oneOf((0, _without2[\"default\"])(_lib.SUI.SIZES, 'medium'))\n} : {};\nvar _default = Rail;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}