{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js\";\nimport { Divider, Grid, Image, Label, Modal, Segment, Icon } from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\nimport classnames from 'classnames';\nimport openSocket from 'socket.io-client';\nimport ModalUserActions from \"./ModalUserActions\";\nconst socket = openSocket('http://localhost:3002');\nconst DEFAULT_STATE = {\n  openHide: false,\n  openReport: false,\n  openFake: false\n};\n\nclass ModalUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.userLike = async () => {\n      socket.emit(\"like\", this.props.user.user_id);\n    };\n\n    this.closeReport = () => {\n      this._mounted && this.setState({\n        openReport: false\n      });\n    };\n\n    this.openReport = () => {\n      this._mounted && this.setState({\n        openReport: true\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  } // Socket\n\n\n  render() {\n    const _this$props = this.props,\n          user = _this$props.user,\n          userInterests = _this$props.userInterests;\n    return React.createElement(Modal, {\n      dimmer: \"blurring\",\n      size: 'tiny',\n      open: this.props.showModal,\n      onClose: this.props.handleClose,\n      className: \"ModalCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"CardHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CardHeaderTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", user.firstname, \" \", user.lastname, \", \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, user.age))), React.createElement(Modal.Content, {\n      className: \"ModalProfilView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      className: \"RowImages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"medium\",\n      src: user.imgs[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      className: \"RowImages\",\n      centered: true,\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, user.imgs.map((img, i) => {\n      if (i > 0) return React.createElement(Grid.Column, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Image, {\n        rounded: true,\n        size: \"small\",\n        src: user.imgs[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n      return null;\n    }))), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"BioSegment\",\n      textAlign: \"center\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, user.bio)), React.createElement(Segment, {\n      basic: true,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ModalUserActions, {\n      openReport: this.state.openReport,\n      closeReport: this.closeReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      id: \"like\",\n      onClick: this.userLike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"Like\"), React.createElement(Button, {\n      size: \"small\",\n      id: \"hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \"Hide\"), React.createElement(Button, {\n      size: \"small\",\n      id: \"fake\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user secret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Fake\"), React.createElement(Button, {\n      size: \"small\",\n      id: \"blockuser\",\n      onClick: this.openReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \"Signal\"))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Label.Group, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), user.interests.map((data, i) => {\n      return React.createElement(Label, {\n        className: userInterests.find(interest => interest === data) ? classnames(\"interestLabel\", \"sameInterest\") : \"interestLabel\",\n        id: i,\n        key: i,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"#\"), data);\n    })))));\n  }\n\n}\n\nexport default ModalUser;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js"],"names":["Divider","Grid","Image","Label","Modal","Segment","Icon","Button","React","classnames","openSocket","ModalUserActions","socket","DEFAULT_STATE","openHide","openReport","openFake","ModalUser","Component","constructor","props","userLike","emit","user","user_id","closeReport","_mounted","setState","state","componentDidMount","componentWillUnmount","render","userInterests","showModal","handleClose","firstname","lastname","age","imgs","map","img","i","bio","interests","data","find","interest"],"mappings":"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","sourcesContent":["import {Divider, Grid, Image, Label, Modal, Segment, Icon} from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\nimport classnames from 'classnames';\nimport openSocket from 'socket.io-client';\nimport ModalUserActions from \"./ModalUserActions\";\nconst  socket = openSocket('http://localhost:3002');\n\nconst DEFAULT_STATE = {\n    openHide: false,\n    openReport: false,\n    openFake: false\n}\n\nclass ModalUser extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    // Socket\n    userLike = async() => {socket.emit(\"like\", this.props.user.user_id);};\n    // Modal user actions\n    closeReport = () => { this._mounted && this.setState({openReport: false})};\n    openReport = () => {this._mounted && this.setState({openReport: true})};\n    render() {\n        const {user, userInterests } = this.props;\n        return (\n            <Modal\n                dimmer={\"blurring\"}\n                size={'tiny'}\n                open={this.props.showModal}\n                onClose={this.props.handleClose}\n                className=\"ModalCard\">\n                <Modal.Header className=\"CardHeader\"><h1\n                    className=\"CardHeaderTile\"> {user.firstname} {user.lastname}, <strong>{user.age}</strong></h1>\n                </Modal.Header>\n                <Modal.Content className=\"ModalProfilView\">\n                    <Modal.Header></Modal.Header>\n                    <Divider hidden/>\n                    <Grid centered columns={2}>\n                        <Grid.Column className=\"RowImages\">\n                            <Image rounded size='medium' src={user.imgs[0]}/>\n                        </Grid.Column>\n                        <Grid.Row className=\"RowImages\" centered columns={4}>\n                            {user.imgs.map((img, i) => {\n                                if (i > 0)\n                                    return (\n                                        <Grid.Column key={i}>\n                                            <Image rounded size='small' src={user.imgs[i]}/>\n                                        </Grid.Column>\n                                    )\n                                return null;\n                            })}\n                        </Grid.Row>\n                    </Grid>\n                    <Modal.Description>\n                        <Segment className=\"BioSegment\" textAlign=\"center\" inverted>\n                            <p>{user.bio}</p>\n                        </Segment>\n                        <Segment basic textAlign={'center'}>\n                            <ModalUserActions\n                                openReport={this.state.openReport}\n                                closeReport={this.closeReport}\n                            />\n                            <Button.Group>\n                                <Button\n                                    size='small'\n                                    id='like'\n                                    onClick={this.userLike}>\n                                <Icon name='heart'/>\n                                    Like\n                                </Button>\n                                <Button\n                                    size='small'\n                                    id='hide'>\n                                    <Icon name='user x'/>\n                                    Hide\n                                </Button>\n                                <Button size='small' id='fake'><Icon name='user secret'/>Fake</Button>\n                                <Button\n                                    size='small'\n                                    id='blockuser'\n                                    onClick={this.openReport}>\n                                    <Icon name='warning'/>\n                                    Signal\n                                </Button>\n                            </Button.Group>\n                        </Segment>\n                        <Divider hidden/>\n                        <Label.Group size='small'>\n                            <p/>\n                            {user.interests.map((data, i) => {\n                                return (\n                                    <Label\n                                        className={userInterests.find(interest => interest === data) ? classnames(\"interestLabel\",\"sameInterest\") : \"interestLabel\"}\n                                        id={i}\n                                        key={i}\n                                        data={data}>\n                                        <strong>#</strong>{data}</Label>\n                                )\n                            })}\n                        </Label.Group>\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nexport default ModalUser;"]},"metadata":{},"sourceType":"module"}