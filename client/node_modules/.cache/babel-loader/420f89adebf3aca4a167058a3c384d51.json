{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/EditProfil/ChangeMyMail/ChangeMyMail.js\";\nimport React from \"react\";\nimport VALIDATE from '../../../utils/validation';\nimport API from \"../../../utils/API\";\nimport { store } from 'react-notifications-component';\nimport { Container, Image, Form, Button, Dimmer, Loader, Divider, Grid } from 'semantic-ui-react';\nconst DEFAULT_STATE = {\n  email: \"\",\n  emailconfirm: \"\",\n  warnings: [],\n  loading: false,\n  w_email: \"\",\n  w_emailconfirm: \"\"\n};\nconst DEFAULT_ERRORS = {\n  w_email: \"\",\n  w_emailconfirm: \"\"\n};\n\nclass ChangeMyEmail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.send = async () => {\n      // Clear warnings\n      this.warnings = _objectSpread({}, DEFAULT_ERRORS);\n      const _this$state = this.state,\n            email = _this$state.email,\n            emailconfirm = _this$state.emailconfirm; // Check Validity\n\n      if (this._mounted) this.setState({\n        loading: true\n      });\n      await VALIDATE.sleepLoader(300).then(async () => {\n        if (!VALIDATE.validateEmail(email)) this.warnings.w_email = \"Please enter a valid email\";\n        if (!VALIDATE.validateEmail(emailconfirm)) this.warnings.w_emailconfirm = \"Please enter a valid email\";\n        if (email !== emailconfirm) this.warnings.w_emailconfirm = \"Emails are not the same\";\n\n        if (!VALIDATE.checkWarnings(this.warnings)) {\n          await API.changemyemail(email, emailconfirm).then(response => {\n            if (response.status === 200) {\n              store.addNotification({\n                title: 'Your email was successfully updated',\n                message: \"Please log in\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                  duration: 10000,\n                  onScreen: true\n                }\n              });\n              this.props.history.push(\"/login\");\n            }\n          }).catch(error => {\n            if (error.response.status === 400) {\n              this.setState({\n                w_email: error.response.data.warnings\n              });\n            }\n          });\n        } else if (this._mounted) this.setState(_objectSpread({}, this.warnings));\n      });\n      if (this._mounted) this.setState({\n        loading: false\n      });\n    };\n\n    this.handleChange = event => {\n      const _this$state2 = this.state,\n            w_email = _this$state2.w_email,\n            w_emailconfirm = _this$state2.w_emailconfirm;\n      if (event.target.id === \"email\" && w_email && w_email.length > 0) this.setState({\n        w_email: \"\"\n      });\n      if (event.target.id === \"emailconfirm\" && w_emailconfirm && w_emailconfirm.length > 0) this.setState({\n        w_emailconfirm: \"\"\n      });\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this.warnings = _objectSpread({}, DEFAULT_ERRORS);\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          loading = _this$state3.loading,\n          w_email = _this$state3.w_email,\n          w_emailconfirm = _this$state3.w_emailconfirm;\n    return React.createElement(Container, {\n      className: \"loginModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Request...\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Image, {\n      className: \"img-fluid\",\n      src: \"/img/MatchApp-Logo.png\",\n      alt: \"Responsive image\",\n      size: \"medium\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"loginh1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Change my email\"), React.createElement(Form, {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      className: \"inputPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      error: w_email && w_email.length > 0 ? {\n        content: w_email,\n        pointing: 'below'\n      } : null,\n      icon: \"mail\",\n      iconPosition: \"left\",\n      id: \"email\",\n      onChange: this.handleChange,\n      type: \"email\",\n      size: \"huge\",\n      placeholder: \"New Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      className: \"inputPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      error: w_emailconfirm && w_emailconfirm.length > 0 ? {\n        content: w_emailconfirm,\n        pointing: 'below'\n      } : null,\n      icon: \"mail\",\n      iconPosition: \"left\",\n      id: \"emailconfirm\",\n      onChange: this.handleChange,\n      type: \"email\",\n      size: \"huge\",\n      placeholder: \"Confirm Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"loginButton\",\n      loading: loading,\n      size: \"huge\",\n      type: \"submit\",\n      onClick: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Change my email\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChangeMyEmail;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/EditProfil/ChangeMyMail/ChangeMyMail.js"],"names":["React","VALIDATE","API","store","Container","Image","Form","Button","Dimmer","Loader","Divider","Grid","DEFAULT_STATE","email","emailconfirm","warnings","loading","w_email","w_emailconfirm","DEFAULT_ERRORS","ChangeMyEmail","Component","constructor","props","send","state","_mounted","setState","sleepLoader","then","validateEmail","checkWarnings","changemyemail","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","history","push","catch","error","data","handleChange","event","target","id","length","value","componentWillUnmount","componentDidMount","render","content","pointing"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport VALIDATE from '../../../utils/validation';\nimport API from \"../../../utils/API\";\nimport { store } from 'react-notifications-component';\nimport {Container, Image, Form, Button, Dimmer, Loader, Divider, Grid} from 'semantic-ui-react';\n\nconst DEFAULT_STATE = {\n    email: \"\",\n    emailconfirm: \"\",\n    warnings: [],\n    loading: false,\n    w_email: \"\",\n    w_emailconfirm: \"\",\n};\n\nconst DEFAULT_ERRORS = {\n    w_email: \"\",\n    w_emailconfirm: \"\",\n};\n\nclass ChangeMyEmail extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.warnings = {...DEFAULT_ERRORS};\n        this._mounted = false;\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    send = async() => {\n        // Clear warnings\n        this.warnings = {...DEFAULT_ERRORS};\n        const {email, emailconfirm} = this.state;\n        // Check Validity\n        if (this._mounted)\n            this.setState({loading: true});\n        await VALIDATE.sleepLoader(300)\n            .then(async () => {\n                if (!VALIDATE.validateEmail(email))\n                    this.warnings.w_email = \"Please enter a valid email\";\n                if (!VALIDATE.validateEmail(emailconfirm))\n                    this.warnings.w_emailconfirm = \"Please enter a valid email\";\n                if  (email !== emailconfirm)\n                    this.warnings.w_emailconfirm = \"Emails are not the same\";\n                if (!VALIDATE.checkWarnings(this.warnings)) {\n                    await API.changemyemail(email, emailconfirm)\n                        .then(response => {\n                            if (response.status === 200) {\n                                store.addNotification({\n                                    title: 'Your email was successfully updated',\n                                    message: \"Please log in\",\n                                    type: \"success\",\n                                    insert: \"top\",\n                                    container: \"top-right\",\n                                    animationIn: [\"animated\", \"fadeIn\"],\n                                    animationOut: [\"animated\", \"fadeOut\"],\n                                    dismiss: {\n                                        duration: 10000,\n                                        onScreen: true\n                                    }\n                                });\n                                this.props.history.push(\"/login\");\n                            }\n                        })\n                        .catch(error => {\n                            if (error.response.status === 400){\n                                this.setState({w_email: error.response.data.warnings});\n                            }\n                        })\n                } else if (this._mounted)\n                    this.setState({...this.warnings});\n            });\n        if (this._mounted)\n            this.setState({loading: false});\n    };\n\n    handleChange = (event) => {\n        const {w_email, w_emailconfirm} = this.state;\n        if (event.target.id === \"email\" && w_email && w_email.length > 0)\n            this.setState({w_email: \"\"});\n        if (event.target.id === \"emailconfirm\" && w_emailconfirm && w_emailconfirm.length > 0)\n            this.setState({w_emailconfirm: \"\"});\n        this.setState({[event.target.id]: event.target.value});\n    }\n\n\n    render() {\n        const {loading, w_email, w_emailconfirm} = this.state;\n        return (\n            <Container className=\"loginModal\">\n                <Dimmer active={loading}>\n                    <Loader size='big'>Request...</Loader>\n                </Dimmer>\n                <Divider hidden />\n                <Image className=\"img-fluid\"\n                       src=\"/img/MatchApp-Logo.png\"\n                       alt=\"Responsive image\"\n                       size=\"medium\"\n                       centered />\n                <div className=\"shape\"></div>\n                <Divider hidden />\n                <h1 className=\"loginh1\">Change my email</h1>\n                <Form className=\"loginForm\">\n                    <Form.Field className=\"inputPassword\">\n                        <Form.Input\n                            error={w_email && w_email.length > 0 ? {content: w_email, pointing: 'below'} : null}\n                            icon='mail'\n                            iconPosition='left'\n                            id=\"email\"\n                            onChange={this.handleChange}\n                            type=\"email\"\n                            size=\"huge\"\n                            placeholder=\"New Email\"/>\n                    </Form.Field>\n                    <Form.Field className=\"inputPassword\">\n                        <Form.Input\n                            error={w_emailconfirm && w_emailconfirm.length > 0 ? {content: w_emailconfirm, pointing: 'below'} : null}\n                            icon='mail'\n                            iconPosition='left'\n                            id=\"emailconfirm\"\n                            onChange={this.handleChange}\n                            type=\"email\"\n                            size=\"huge\"\n                            placeholder=\"Confirm Email\"/>\n                    </Form.Field>\n                    <Divider hidden />\n                    <Button className=\"loginButton\"\n                            loading={loading} size='huge'\n                            type=\"submit\"\n                            onClick={this.send}>\n                        Change my email\n                    </Button>\n                </Form>\n                <Divider hidden />\n                <Divider hidden />\n            </Container>\n        );\n    }\n}\n\nexport default ChangeMyEmail;"]},"metadata":{},"sourceType":"module"}