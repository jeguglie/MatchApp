{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/Location/Map/Map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Grid, Icon } from \"semantic-ui-react\";\nimport equal from 'fast-deep-equal';\n\nconst AnyReactComponent = ({\n  text\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    loading: true,\n    name: \"heart\",\n    size: \"big\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nconst DEFAULT_POSITION = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11,\n  innerRef: null\n};\n\nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = DEFAULT_POSITIONl;\n\n    this.updatePosition = () => {\n      if (this.props.innerRef.coords) {\n        this.setState({\n          lat: this.props.innerRef.coords.latitude,\n          lng: this.props.innerRef.coords.longitude\n        });\n      }\n    };\n\n    this.updatePosition = this.updatePosition.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread({}, DEFAULT_POSITION));\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"Prev -> \" + prevProps.innerRef);\n    console.log(\"New -> \" + this.props.innerRef);\n    if (!equal(this.props.innerRef, prevProps.innerRef)) this.updatePosition();\n  }\n\n  render() {\n    const _this$state = this.state,\n          center = _this$state.center,\n          zoom = _this$state.zoom,\n          lat = _this$state.lat,\n          lng = _this$state.lng;\n    return React.createElement(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyB9cGdWgQvt4wublLDt_ytEGF9TYb128UA'\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(AnyReactComponent, {\n      lat: lat,\n      lng: lng,\n      text: \"Your location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SimpleMap;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/Location/Map/Map.js"],"names":["React","Component","GoogleMapReact","Grid","Icon","equal","AnyReactComponent","text","DEFAULT_POSITION","center","lat","lng","zoom","innerRef","SimpleMap","constructor","props","state","DEFAULT_POSITIONl","updatePosition","coords","setState","latitude","longitude","bind","componentDidMount","componentDidUpdate","prevProps","console","log","render","height","width","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACpC,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAKH,CAND;;AAQA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAE,KADD;AAEJC,IAAAA,GAAG,EAAE;AAFD,GADa;AAKrBC,EAAAA,IAAI,EAAE,EALe;AAMrBC,EAAAA,QAAQ,EAAE;AANW,CAAzB;;AAQA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAG9Bc,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SADlBC,KACkB,GADVC,iBACU;;AAAA,SAelBC,cAfkB,GAeD,MAAM;AACnB,UAAI,KAAKH,KAAL,CAAWH,QAAX,CAAoBO,MAAxB,EAA+B;AAC3B,aAAKC,QAAL,CAAc;AACVX,UAAAA,GAAG,EAAE,KAAKM,KAAL,CAAWH,QAAX,CAAoBO,MAApB,CAA2BE,QADtB;AAEVX,UAAAA,GAAG,EAAE,KAAKK,KAAL,CAAWH,QAAX,CAAoBO,MAApB,CAA2BG;AAFtB,SAAd;AAIH;AACJ,KAtBiB;;AAEd,SAAKJ,cAAL,GAAsB,KAAKA,cAAL,CAAoBK,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,QAAL,mBAAkBb,gBAAlB;AACH;;AAEDkB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,SAAS,CAACd,QAAnC;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKb,KAAL,CAAWH,QAAnC;AACD,QAAG,CAACR,KAAK,CAAC,KAAKW,KAAL,CAAWH,QAAZ,EAAsBc,SAAS,CAACd,QAAhC,CAAT,EACI,KAAKM,cAAL;AACN;;AAUDW,EAAAA,MAAM,GAAG;AAAA,wBAC4B,KAAKb,KADjC;AAAA,UACER,MADF,eACEA,MADF;AAAA,UACUG,IADV,eACUA,IADV;AAAA,UACgBF,GADhB,eACgBA,GADhB;AAAA,UACqBC,GADrB,eACqBA,GADrB;AAEL,WACI;AAAK,MAAA,KAAK,EAAE;AAAEoB,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AACI,MAAA,gBAAgB,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OADtB;AAEI,MAAA,aAAa,EAAExB,MAFnB;AAGI,MAAA,WAAW,EAAEG,IAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,iBAAD;AACI,MAAA,GAAG,EAAEF,GADT;AAEI,MAAA,GAAG,EAAEC,GAFT;AAGI,MAAA,IAAI,EAAC,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ;AAcH;;AA1C6B;;AA6ClC,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Grid, Icon} from \"semantic-ui-react\";\nimport equal from 'fast-deep-equal';\n\nconst AnyReactComponent = ({ text }) => {\n    return(\n    <div>\n        <Icon loading name='heart' size=\"big\"/>\n    </div>\n)\n}\n\nconst DEFAULT_POSITION = {\n    center: {\n        lat: 59.95,\n        lng: 30.33\n    },\n    zoom: 11,\n    innerRef: null,\n}\nclass SimpleMap extends Component {\n\n    state = DEFAULT_POSITIONl\n    constructor(props){\n        super(props);\n        this.updatePosition = this.updatePosition.bind(this);\n    }\n    componentDidMount() {\n        this.setState({...DEFAULT_POSITION});\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log(\"Prev -> \" + prevProps.innerRef);\n        console.log(\"New -> \" + this.props.innerRef);\n       if(!equal(this.props.innerRef, prevProps.innerRef))\n           this.updatePosition();\n    }\n\n    updatePosition = () => {\n        if (this.props.innerRef.coords){\n            this.setState({\n                lat: this.props.innerRef.coords.latitude,\n                lng: this.props.innerRef.coords.longitude,\n            })\n        }\n    }\n    render() {\n        const {center, zoom, lat, lng} = this.state;\n        return (\n            <div style={{ height: '100%', width: '100%' }}>\n                <GoogleMapReact\n                    bootstrapURLKeys={{ key: 'AIzaSyB9cGdWgQvt4wublLDt_ytEGF9TYb128UA' }}\n                    defaultCenter={center}\n                    defaultZoom={zoom} >\n                    <AnyReactComponent\n                        lat={lat}\n                        lng={lng}\n                        text=\"Your location\"\n                    />\n                </GoogleMapReact>\n            </div>\n        );\n    }\n}\n\nexport default SimpleMap;"]},"metadata":{},"sourceType":"module"}