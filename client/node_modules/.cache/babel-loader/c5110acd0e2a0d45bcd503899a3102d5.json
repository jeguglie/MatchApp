{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/SearchBox/index.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  * {\\n    box-sizing: border-box;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Fuse from 'fuse.js';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport InputBox from './components/input-box/index';\nimport DropDown from './components/drop-down/index';\nconst GlobalStyle = createGlobalStyle(_templateObject());\nconst StyledContainer = styled.div(_templateObject2());\nexport default class ReactSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value ? this.props.value : '',\n      matchedRecords: [],\n      cursor: 0,\n      keyEnterClick: false\n    };\n\n    this.handleInputChange = e => {\n      const onChange = this.props.onChange;\n      const value = e.target.value;\n      const matchedRecords = this.fuse.search(value);\n      this.setState({\n        value,\n        matchedRecords,\n        showDropdown: true,\n        cursor: 0\n      });\n      !!onChange && onChange(value);\n    };\n\n    this.handleKeyDown = e => {\n      const _this$state = this.state,\n            cursor = _this$state.cursor,\n            matchedRecords = _this$state.matchedRecords,\n            keyEnterClick = _this$state.keyEnterClick; // arrow up/down button should select next/previous list element\n\n      if (e.key === 'Enter') {\n        this.setState({\n          keyEnterClick: true\n        });\n      }\n\n      if (e.keyCode === 38 && cursor > 0) {\n        this.setState(prevState => ({\n          cursor: prevState.cursor - 1\n        }));\n      } else if (e.keyCode === 40 && cursor < matchedRecords.length - 1) {\n        this.setState(prevState => ({\n          cursor: prevState.cursor + 1\n        }));\n      }\n    };\n\n    this.handleClear = () => {\n      console.log(\"handlClear\");\n      this.setState({\n        value: ''\n      });\n      this.props.resetClear();\n    };\n\n    this.inputNode = () => {\n      const _this$props = this.props,\n            placeholder = _this$props.placeholder,\n            onFocus = _this$props.onFocus,\n            autoFocus = _this$props.autoFocus,\n            inputBoxFontColor = _this$props.inputBoxFontColor,\n            inputBoxBorderColor = _this$props.inputBoxBorderColor,\n            inputBoxFontSize = _this$props.inputBoxFontSize,\n            inputBoxHeight = _this$props.inputBoxHeight,\n            clear = _this$props.clear;\n      const value = this.state.value;\n      if (clear === true) this.handleClear();\n      return React.createElement(InputBox, {\n        type: \"text\",\n        placeholder: placeholder,\n        value: value,\n        onChange: this.handleInputChange,\n        autoFocus: autoFocus ? autoFocus : undefined,\n        onFocus: onFocus ? onFocus : undefined,\n        inputBoxFontColor: inputBoxFontColor,\n        inputBoxBorderColor: inputBoxBorderColor,\n        inputBoxFontSize: inputBoxFontSize,\n        inputBoxHeight: inputBoxHeight,\n        onKeyDown: this.handleKeyDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n    };\n\n    this.handleDropdownItemClick = record => {\n      const value = record.value;\n      const _this$props2 = this.props,\n            onSelect = _this$props2.onSelect,\n            onChange = _this$props2.onChange,\n            addData = _this$props2.addData;\n      this.setState({\n        keyEnterClick: false,\n        value,\n        // Hide the dropdown once any dropdown item is clicked.\n        showDropdown: false\n      }); // Trigger the 'onSelect' prop once everything is done if it's passed.\n\n      !!onSelect && onSelect(record); // Trigger the 'onChange' prop since the value of the input box also changes.\n\n      !!onChange && onChange(value);\n      addData(record);\n    };\n\n    this.dropdownNode = () => {\n      const _this$state2 = this.state,\n            matchedRecords = _this$state2.matchedRecords,\n            showDropdown = _this$state2.showDropdown;\n      const _this$props3 = this.props,\n            dropDownHoverColor = _this$props3.dropDownHoverColor,\n            dropDownBorderColor = _this$props3.dropDownBorderColor;\n      if (!showDropdown) return false;\n      return React.createElement(DropDown, {\n        matchedRecords: matchedRecords,\n        onClick: this.handleDropdownItemClick,\n        keyEnterClick: this.state.keyEnterClick,\n        EnterPress: this.handleDropdownItemClick,\n        dropDownHoverColor: dropDownHoverColor,\n        dropDownBorderColor: dropDownBorderColor,\n        cursor: this.state.cursor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      });\n    };\n\n    const data = props.data,\n          fuseConfigs = props.fuseConfigs;\n    this.defaultFuseConfigs = {\n      threshold: 0.05,\n      location: 0,\n      distance: 100,\n      minMatchCharLength: 1,\n      keys: ['value']\n    };\n    const configs = Object.assign({}, this.defaultFuseConfigs, fuseConfigs);\n    this.fuse = new Fuse(data, configs);\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props4 = this.props,\n          data = _this$props4.data,\n          fuseConfigs = _this$props4.fuseConfigs;\n\n    if (prevProps.data !== data) {\n      const configs = Object.assign({}, this.defaultFuseConfigs, fuseConfigs);\n      this.fuse = new Fuse(data, configs);\n    }\n  }\n\n  render() {\n    return React.createElement(StyledContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), this.inputNode(), this.dropdownNode());\n  }\n\n}\nReactSearchBox.propTypes = {\n  placeholder: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  fuseConfigs: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  onSelect: PropTypes.func,\n  onFocus: PropTypes.func,\n  onChange: PropTypes.func,\n  inputBoxFontColor: PropTypes.string,\n  inputBoxBorderColor: PropTypes.string,\n  inputBoxFontSize: PropTypes.string,\n  inputBoxHeight: PropTypes.string,\n  dropDownHoverColor: PropTypes.string,\n  dropDownBorderColor: PropTypes.string\n};\nReactSearchBox.defaultProps = {\n  data: [],\n  autoFocus: false,\n  placeholder: '',\n  inputBoxFontColor: '#000',\n  inputBoxBorderColor: '#cacaca96',\n  inputBoxFontSize: '14px',\n  inputBoxHeight: '40px',\n  dropDownHoverColor: '#ccc',\n  dropDownBorderColor: '#cacaca96'\n};","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/SearchBox/index.js"],"names":["React","Component","PropTypes","Fuse","styled","createGlobalStyle","InputBox","DropDown","GlobalStyle","StyledContainer","div","ReactSearchBox","constructor","props","state","value","matchedRecords","cursor","keyEnterClick","handleInputChange","e","onChange","target","fuse","search","setState","showDropdown","handleKeyDown","key","keyCode","prevState","length","handleClear","console","log","resetClear","inputNode","placeholder","onFocus","autoFocus","inputBoxFontColor","inputBoxBorderColor","inputBoxFontSize","inputBoxHeight","clear","undefined","handleDropdownItemClick","record","onSelect","addData","dropdownNode","dropDownHoverColor","dropDownBorderColor","data","fuseConfigs","defaultFuseConfigs","threshold","location","distance","minMatchCharLength","keys","configs","Object","assign","componentDidUpdate","prevProps","render","propTypes","string","array","isRequired","object","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Fuse from 'fuse.js'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport InputBox from './components/input-box/index';\nimport DropDown from './components/drop-down/index';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default class ReactSearchBox extends Component {\n    static propTypes = {\n        placeholder: PropTypes.string,\n        data: PropTypes.array.isRequired,\n        fuseConfigs: PropTypes.object,\n        autoFocus: PropTypes.bool,\n        onSelect: PropTypes.func,\n        onFocus: PropTypes.func,\n        onChange: PropTypes.func,\n        inputBoxFontColor: PropTypes.string,\n        inputBoxBorderColor: PropTypes.string,\n        inputBoxFontSize: PropTypes.string,\n        inputBoxHeight: PropTypes.string,\n        dropDownHoverColor: PropTypes.string,\n        dropDownBorderColor: PropTypes.string,\n    };\n\n    static defaultProps = {\n        data: [],\n        autoFocus: false,\n        placeholder: '',\n        inputBoxFontColor: '#000',\n        inputBoxBorderColor: '#cacaca96',\n        inputBoxFontSize: '14px',\n        inputBoxHeight: '40px',\n        dropDownHoverColor: '#ccc',\n        dropDownBorderColor: '#cacaca96',\n    };\n\n    state = {\n        value: this.props.value ? this.props.value : '',\n        matchedRecords: [],\n        cursor: 0,\n        keyEnterClick: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        const { data, fuseConfigs } = props;\n\n        this.defaultFuseConfigs = {\n            threshold: 0.05,\n            location: 0,\n            distance: 100,\n            minMatchCharLength: 1,\n            keys: ['value'],\n        };\n        const configs = Object.assign({}, this.defaultFuseConfigs, fuseConfigs);\n\n        this.fuse = new Fuse(data, configs);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { data, fuseConfigs } = this.props;\n\n        if (prevProps.data !== data) {\n            const configs = Object.assign({}, this.defaultFuseConfigs, fuseConfigs);\n            this.fuse = new Fuse(data, configs)\n        }\n    }\n\n    handleInputChange = e => {\n        const { onChange } = this.props;\n        const { value } = e.target;\n        const matchedRecords = this.fuse.search(value);\n        this.setState({\n            value,\n            matchedRecords,\n            showDropdown: true,\n            cursor: 0\n        });\n        !!onChange && onChange(value)\n    };\n\n    handleKeyDown = (e) => {\n        const { cursor, matchedRecords, keyEnterClick } = this.state;\n        // arrow up/down button should select next/previous list element\n        if (e.key === 'Enter') {\n            this.setState({keyEnterClick: true});\n        }\n        if (e.keyCode === 38 && cursor > 0) {\n            this.setState( prevState => ({\n                cursor: prevState.cursor - 1\n            }))\n        } else if (e.keyCode === 40 && cursor < matchedRecords.length - 1) {\n            this.setState( prevState => ({\n                cursor: prevState.cursor + 1\n            }))\n        }\n    }\n\n    handleClear = () => {\n        console.log(\"handlClear\");\n        this.setState({value: ''});\n        this.props.resetClear();\n    };\n\n    inputNode = () => {\n        const {\n            placeholder,\n            onFocus,\n            autoFocus,\n            inputBoxFontColor,\n            inputBoxBorderColor,\n            inputBoxFontSize,\n            inputBoxHeight,\n            clear,\n        } = this.props;\n        const { value } = this.state;\n        if (clear === true)\n            this.handleClear();\n        return (\n            <InputBox\n                type=\"text\"\n                placeholder={placeholder}\n                value={value}\n                onChange={this.handleInputChange}\n                autoFocus={autoFocus ? autoFocus : undefined}\n                onFocus={onFocus ? onFocus : undefined}\n                inputBoxFontColor={inputBoxFontColor}\n                inputBoxBorderColor={inputBoxBorderColor}\n                inputBoxFontSize={inputBoxFontSize}\n                inputBoxHeight={inputBoxHeight}\n                onKeyDown={ this.handleKeyDown }\n            />\n        )\n    }\n\n    handleDropdownItemClick = record => {\n        const { value } = record;\n        const { onSelect, onChange, addData } = this.props;\n\n        this.setState({\n            keyEnterClick: false,\n            value,\n            // Hide the dropdown once any dropdown item is clicked.\n            showDropdown: false,\n        });\n        // Trigger the 'onSelect' prop once everything is done if it's passed.\n        !!onSelect && onSelect(record);\n        // Trigger the 'onChange' prop since the value of the input box also changes.\n        !!onChange && onChange(value);\n        addData(record);\n\n    };\n\n    dropdownNode = () => {\n        const { matchedRecords, showDropdown } = this.state;\n        const { dropDownHoverColor, dropDownBorderColor } = this.props;\n\n        if (!showDropdown) return false;\n\n        return (\n            <DropDown\n                matchedRecords={matchedRecords}\n                onClick={this.handleDropdownItemClick}\n                keyEnterClick={this.state.keyEnterClick}\n                EnterPress={this.handleDropdownItemClick}\n                dropDownHoverColor={dropDownHoverColor}\n                dropDownBorderColor={dropDownBorderColor}\n                cursor={this.state.cursor}\n            />\n        )\n    };\n\n    render() {\n        return (\n            <StyledContainer>\n                <GlobalStyle />\n                {this.inputNode()}\n                {this.dropdownNode()}\n            </StyledContainer>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}