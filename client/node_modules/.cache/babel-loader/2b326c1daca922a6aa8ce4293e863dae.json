{"ast":null,"code":"import axios from \"axios\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\nconst burl = \"http://localhost:3000\";\nexport default {\n  activeaccount: function (token) {\n    return axios.post(`${burl}/activeaccount`, {\n      token\n    });\n  },\n  changepassword: function (token, password, passwordconfirm) {\n    return axios.post(`${burl}/changepassword`, {\n      token,\n      password,\n      passwordconfirm\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  userforgot: function (email) {\n    return axios.post(`${burl}/userforgot`, {\n      email\n    });\n  },\n  login: function (email, password) {\n    return axios.post(`${burl}/login`, {\n      email,\n      password\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  signup: function (lastname, firstname, email, username, password, cpassword) {\n    return axios.post(`${burl}/signup`, {\n      lastname,\n      firstname,\n      email,\n      username,\n      password,\n      cpassword\n    }, {\n      headers: headers\n    });\n  },\n  updateEditProfilValues: function (state) {\n    return axios.post(`${burl}/updateEditProfilValues`, {\n      state\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getEditProfilValues: function (user_id) {\n    return axios.post(`${burl}/getEditProfilValues`, {\n      user_id\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getPhotos: function () {\n    return axios.post(`${burl}/getPhotos`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  addInterests: function (interest) {\n    return axios.post(`${burl}/addInterests`, {\n      interest\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getInterests: () => {\n    return axios.post(`${burl}/getInterests`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getUserInterests: () => {\n    return axios.post(`${burl}/getUserInterests`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getComplete: () => {\n    return axios.post(`${burl}/getComplete`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  withAuth: () => {\n    return axios.get(`${burl}/checkToken`, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  deleteInterest: data => {\n    return axios.post(`${burl}/deleteInterest`, {\n      data\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  deleteImage: imgID => {\n    return axios.post(`${burl}/deleteImage`, {\n      imgID\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getUsers: (distanceRange, ageRange, popularityRange) => {\n    return axios.post(`${burl}/getUsers`, {\n      distanceRange,\n      ageRange,\n      popularityRange\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getConnectedUserLocation: () => {\n    return axios.post(`${burl}/getConnectedUserLocation`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  checkUserView: () => {\n    return axios.post(`${burl}/checkUserView`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getUserIdProfile: userId => {\n    return axios.post(`${burl}/getUserIdProfile`, {\n      userId\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  userLike: userLikedID => {\n    return axios.post(`${burl}/userLike`, {\n      userLikedID\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/utils/API.js"],"names":["axios","headers","burl","activeaccount","token","post","changepassword","password","passwordconfirm","withCredentials","userforgot","email","login","signup","lastname","firstname","username","cpassword","updateEditProfilValues","state","getEditProfilValues","user_id","getPhotos","addInterests","interest","getInterests","getUserInterests","getComplete","withAuth","get","deleteInterest","data","deleteImage","imgID","getUsers","distanceRange","ageRange","popularityRange","getConnectedUserLocation","checkUserView","getUserIdProfile","userId","userLike","userLikedID"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst headers = {\n    \"Content-Type\": \"application/json\"\n};\nconst burl = \"http://localhost:3000\";\n\nexport default {\n    activeaccount: function(token){\n        return axios.post(\n            `${burl}/activeaccount`,\n            {\n                token\n            },\n        );\n    },\n    changepassword: function(token, password, passwordconfirm){\n        return axios.post(\n            `${burl}/changepassword`,\n            {\n                token, password, passwordconfirm\n            },\n        {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    userforgot: function(email) {\n        return axios.post(\n            `${burl}/userforgot`,\n            {\n                email,\n            },\n        );\n    },\n    login: function(email, password) {\n        return axios.post(\n            `${burl}/login`,\n            {\n                email,\n                password\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    signup: function(lastname, firstname, email, username, password, cpassword) {\n        return axios.post(\n            `${ burl}/signup`,\n            {lastname, firstname, email, username, password, cpassword},\n            {\n                headers: headers\n            }\n        );\n    },\n    updateEditProfilValues: function(state) {\n        return axios.post(\n            `${burl}/updateEditProfilValues`,\n            {\n                state\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getEditProfilValues: function(user_id) {\n        return axios.post(\n            `${burl}/getEditProfilValues`,\n            {\n                user_id,\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getPhotos: function() {\n        return axios.post(\n            `${burl}/getPhotos`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    addInterests: function(interest){\n        return axios.post(\n            `${burl}/addInterests`,\n            {interest},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getInterests: () => {\n        return axios.post(\n            `${burl}/getInterests`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getUserInterests: () => {\n        return axios.post(\n            `${burl}/getUserInterests`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getComplete: () => {\n        return axios.post(\n            `${burl}/getComplete`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    withAuth: () => {\n        return axios.get(\n            `${burl}/checkToken`,\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    deleteInterest: (data) => {\n        return axios.post(\n            `${burl}/deleteInterest`,\n            {data},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    deleteImage: (imgID) => {\n        return axios.post(\n            `${burl}/deleteImage`,\n            {imgID},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getUsers: (distanceRange, ageRange, popularityRange) => {\n        return axios.post(\n            `${burl}/getUsers`,\n            {distanceRange, ageRange, popularityRange},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getConnectedUserLocation: () => {\n        return axios.post(\n            `${burl}/getConnectedUserLocation`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    checkUserView: () => {\n        return axios.post(\n            `${burl}/checkUserView`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getUserIdProfile: (userId) => {\n        return axios.post(\n            `${burl}/getUserIdProfile`,\n            {userId},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    userLike: (userLikedID) => {\n        return axios.post(\n            `${burl}/userLike`,\n            {userLikedID},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}