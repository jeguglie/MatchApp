{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/Location/Location.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Input, Button, Segment, Form, TextArea, Grid, Progress, Icon, Select, Loader, Dimmer, Container, Divider } from 'semantic-ui-react';\nimport VALIDATE from \"../../../utils/validation\";\nimport LocationComponent from \"./LocationComponent/LocationComponent\";\nimport SimpleMap from \"./Map/Map\";\nconst DEFAULT_STATE = {\n  loading: false,\n  complete: 0\n};\n\nclass Location extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getInnerRef = ref => {\n      this.innerRef = ref;\n    };\n\n    this.getLocation = () => {\n      this.innerRef && this.innerRef.getLocation();\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this.state.complete = this.props.complete; // Bin for location REF\n\n    this.getInnerRef = this.getInnerRef.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    await VALIDATE.sleepLoader(500);\n    await this.props.getcomplete();\n    this.setState({\n      complete: this.props.complete\n    });\n    this.setState({\n      loading: false\n    });\n  } // React geolocate\n\n\n  render() {\n    console.log(this.innerRef);\n    const getInnerRef = this.getInnerRef,\n          getLocation = this.getLocation;\n    const _this$state = this.state,\n          complete = _this$state.complete,\n          loading = _this$state.loading;\n    const _this$props = this.props,\n          prevsection = _this$props.prevsection,\n          nextsection = _this$props.nextsection;\n    return React.createElement(\"div\", {\n      className: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"massive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(Progress, {\n      percent: complete,\n      progress: true,\n      indicating: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CompleteTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Add your location\"))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(LocationComponent, {\n      ref: getInnerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shapeLastStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"WrapMap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapAddLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(SimpleMap, {\n      position: this.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))), React.createElement(Segment, {\n      basic: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: getLocation,\n      className: \"buttonLastStep\",\n      size: \"big\",\n      content: \"Geolocate my position\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      horizontal: true,\n      className: \"DividerLastStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Or add location\")), React.createElement(Input, {\n      size: \"big\",\n      icon: \"search\",\n      iconPosition: \"left\",\n      placeholder: \"Search location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow alternate circle left outline\",\n      size: \"huge\",\n      onClick: prevsection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow alternate circle right outline\",\n      size: \"huge\",\n      onClick: nextsection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/Location/Location.js"],"names":["React","Input","Button","Segment","Form","TextArea","Grid","Progress","Icon","Select","Loader","Dimmer","Container","Divider","VALIDATE","LocationComponent","SimpleMap","DEFAULT_STATE","loading","complete","Location","Component","constructor","props","getInnerRef","ref","innerRef","getLocation","state","bind","componentDidMount","setState","sleepLoader","getcomplete","render","console","log","prevsection","nextsection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Input, Button, Segment, Form, TextArea, Grid, Progress, Icon, Select, Loader, Dimmer, Container, Divider} from 'semantic-ui-react';\nimport VALIDATE from \"../../../utils/validation\";\nimport LocationComponent from \"./LocationComponent/LocationComponent\";\nimport SimpleMap from \"./Map/Map\";\n\nconst DEFAULT_STATE = {\n    loading: false,\n    complete: 0,\n\n};\nclass Location extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.state.complete = this.props.complete;\n        // Bin for location REF\n        this.getInnerRef = this.getInnerRef.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({loading: true});\n        await VALIDATE.sleepLoader(500);\n        await this.props.getcomplete();\n        this.setState({complete: this.props.complete});\n        this.setState({loading: false});\n    }\n\n    // React geolocate\n    innerRef;\n    getInnerRef = (ref) => {\n        this.innerRef = ref;\n    };\n    getLocation = () => {\n        this.innerRef && this.innerRef.getLocation();\n    };\n\n\n\n\n    render() {\n        console.log(this.innerRef);\n        const { getInnerRef, getLocation } = this;\n        const {complete, loading} = this.state;\n        const {prevsection, nextsection} = this.props;\n        return (\n                <div className=\"Location\">\n                    <Dimmer active={loading}>\n                        <Loader size='massive'>Loading...</Loader>\n                    </Dimmer>\n                    <Progress\n                        percent={complete}\n                        progress\n                        indicating\n                        size=\"medium\"\n                    />\n                    <Grid textAlign=\"center\">\n                        <Grid.Row centered>\n                            <h1 className=\"CompleteTitle\">\n                                Add your location\n                            </h1>\n                        </Grid.Row>\n                    </Grid>\n                    <Divider hidden />\n                    <Divider hidden />\n                    <LocationComponent\n                        ref={getInnerRef}\n                    />\n                    <div className=\"shapeLastStep\"></div>\n                    <div className=\"WrapMap\">\n                    <Segment>\n                        <div className=\"mapAddLocation\">\n                            <SimpleMap position={this.innerRef} />\n                        </div>\n                    </Segment>\n                    </div>\n                    <Segment basic textAlign='center'>\n                        <Button\n                            onClick={getLocation}\n                            className=\"buttonLastStep\"\n                            size=\"big\"\n                            content='Geolocate my position' />\n                        <Divider\n                            horizontal\n                            className=\"DividerLastStep\">\n                            <span>\n                                Or add location\n                            </span>\n                        </Divider>\n                        <Input\n                            size=\"big\"\n                            icon='search'\n                            iconPosition='left'\n                            placeholder='Search location' />\n                    </Segment>\n                    <Grid>\n                        <Divider hidden />\n                        <Grid.Row centered >\n                            <Icon\n                                className=\"EditProfilArrow\"\n                                name='arrow alternate circle left outline'\n                                size=\"huge\"\n                                onClick={prevsection}/>\n                            <Icon\n                                className=\"EditProfilArrow\"\n                                name='arrow alternate circle right outline'\n                                size=\"huge\"\n                                onClick={nextsection}/>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n\n        )\n    }\n}\nexport default Location;"]},"metadata":{},"sourceType":"module"}