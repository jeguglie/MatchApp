{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition, Grid, Divider } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nimport ModalUser from \"../../ModalUser/ModalUser\";\n\nconst moment = require('moment');\n\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3002');\nexport default class NotificationsHistory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notifications: [],\n      user: {},\n      liked: false,\n      showModal: false,\n      interests: []\n    };\n    this._mounted = false;\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) {\n          this._mounted && this.setState({\n            notifications: response.data.notifications\n          }, () => console.log(this.state.notifications));\n        }\n      }).catch(e => console.log(e));\n    };\n\n    this.handleDismiss = i => {\n      if (this._mounted) {\n        let notifications = this.state.notifications;\n        let removed = notifications.splice(i, 1);\n        this.setState({\n          notifications: notifications\n        }, () => console.log(this.state.notifications));\n      }\n    };\n\n    this.userLike = async userIdFocus => {\n      await API.userLike(userIdFocus).then(response => {\n        if (response.status === 200 && typeof response.data.liked != 'undefined') {\n          this._mounted && this.setState({\n            liked: response.data.liked\n          }); // Socket\n\n          if (response.data.liked === true) socket.emit(\"like\", userIdFocus);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleClose = () => {\n      this._mounted && this.setState({\n        userIdFocus: null,\n        showModal: false,\n        liked: false\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'Visited your profile  ';\n\n      case 2:\n        return 'Send you a message  ';\n\n      case 3:\n        return 'Liked you back  ';\n\n      case 4:\n        return 'Remove his like  ';\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          liked = _this$state.liked,\n          showModal = _this$state.showModal,\n          interests = _this$state.interests;\n    return React.createElement(Grid, {\n      columns: 1,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ModalUser, {\n      showModal: showModal,\n      user: user,\n      liked: liked,\n      userLike: this.userLike,\n      handleClose: this.handleClose,\n      userInterests: interests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      textAlign: 'left',\n      mobile: 16,\n      tablet: 8,\n      computer: 8,\n      largeScreen: 8,\n      widescreen: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NotificationsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Notifications history\"))), React.createElement(\"div\", {\n      className: \"NotificationsHistoric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Transition.Group, {\n      as: List,\n      duration: 200,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, !this.state.notifications.length ? React.createElement(\"div\", {\n      className: 'nothingtoshow',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Nothing to show\")) : null, this.state.notifications.map((obj, i) => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.handleDismiss(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(Image, {\n      avatar: true,\n      src: obj.img_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      as: \"a\",\n      className: \"NotifFirstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, ' ', \" \", obj.firstname), React.createElement(List.Description, {\n      className: \"NotifDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.renderSwitchType(obj.type), \"on \", moment(obj.date).fromNow())), i < this.state.notifications.length - 1 ? React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : null)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","Transition","Grid","Divider","API","ModalUser","moment","require","openSocket","socket","NotificationsHistory","Component","state","notifications","user","liked","showModal","interests","_mounted","componentDidMount","getNotifications","then","response","status","setState","data","console","log","catch","e","handleDismiss","i","removed","splice","userLike","userIdFocus","emit","err","handleClose","componentWillUnmount","renderSwitchType","type","render","length","map","obj","img_link","firstname","date","fromNow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {List, Image, Button, Transition, Grid, Divider} from 'semantic-ui-react';\nimport API from '../../../utils/API';\nimport ModalUser from \"../../ModalUser/ModalUser\";\nconst moment = require('moment');\nimport openSocket from 'socket.io-client';\nconst  socket = openSocket('http://localhost:3002');\n\nexport default class NotificationsHistory extends React.Component{\n\n    state = {\n        notifications: [],\n        user: {},\n        liked: false,\n        showModal: false,\n        interests: [],\n    };\n    _mounted = false;\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200) {\n                    this._mounted && this.setState({notifications: response.data.notifications}, () => console.log(this.state.notifications));\n                }\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'Visited your profile  ';\n            case 2:\n                return 'Send you a message  ';\n            case 3:\n                return 'Liked you back  ';\n            case 4:\n                return 'Remove his like  ';\n        }\n    };\n\n    handleDismiss = (i) => {\n        if (this._mounted) {\n            let notifications = this.state.notifications;\n            let removed = notifications.splice(i, 1);\n            this.setState({notifications: notifications}, () => console.log(this.state.notifications));\n        }\n    };\n\n    userLike = async(userIdFocus) => {\n        await API.userLike(userIdFocus)\n            .then(response => {\n                if (response.status === 200 && typeof response.data.liked != 'undefined') {\n                    this._mounted && this.setState({liked: response.data.liked});\n                    // Socket\n                    if (response.data.liked === true)\n                        socket.emit(\"like\", userIdFocus);\n                }\n            })\n            .catch(err => console.log(err));\n    };\n    handleClose = () => {\n        this._mounted && this.setState({ userIdFocus: null, showModal: false, liked: false})\n    };\n    render(){\n        const { user, liked, showModal, interests } = this.state;\n        return (\n            <Grid columns={1} textAlign={'center'}>\n                <ModalUser showModal={showModal} user={user} liked={liked} userLike={this.userLike} handleClose={this.handleClose} userInterests={interests} />\n                <Grid.Column textAlign={'left'} mobile={16} tablet={8} computer={8} largeScreen={8} widescreen={8}>\n                    <div className='NotificationsTitle'>\n                        <Grid.Row >\n                            <h1>Notifications history</h1>\n                        </Grid.Row>\n                    </div>\n                    <div className={\"NotificationsHistoric\"}>\n                        <Grid.Row>\n                            <Transition.Group\n                                as={List}\n                                duration={200}\n                                verticalAlign='middle'\n                            >\n                                {!this.state.notifications.length ?\n                                    <div className={'nothingtoshow'}>\n                                        <p>Nothing to show</p>\n                                    </div> :\n                                    null\n                                }\n                                {this.state.notifications.map((obj, i) => (\n                                    <List.Item>\n                                        <List.Content>\n                                            <List.Content floated='right'>\n                                                <Button\n                                                    onClick={() => this.handleDismiss(i)}>\n                                                    Dismiss\n                                                </Button>\n                                            </List.Content>\n                                            <Image avatar src={obj.img_link}/>\n                                            <List.Content as='a' className={\"NotifFirstname\"}>{' '} {obj.firstname}</List.Content>\n                                            <List.Description className={\"NotifDesc\"}>\n                                                {this.renderSwitchType(obj.type)}\n                                                on {moment(obj.date).fromNow()}\n                                            </List.Description>\n                                        </List.Content>\n                                        {i < this.state.notifications.length  - 1? <Divider /> : null}\n                                    </List.Item>\n                                ))}\n                            </Transition.Group>\n                        </Grid.Row>\n                    </div>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}