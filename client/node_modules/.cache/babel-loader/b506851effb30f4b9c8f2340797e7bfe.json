{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/BasicInformations/BasicsInformations.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Form, TextArea, Grid, Progress, Icon, Select } from 'semantic-ui-react';\nimport API from \"../../../utils/API\";\nimport classnames from 'classnames';\nimport DividerC from \"../../Divider/Divider\";\nconst DEFAULT_STATE = {\n  lastname: \"\",\n  firstname: \"\",\n  interested: \"\",\n  country: \"\",\n  gender: \"\",\n  bio: \"\",\n  user_id: '',\n  email: \"\",\n  interests: [],\n  birthday: \"\",\n  messages: {\n    save: false,\n    warnings: []\n  },\n  complete: 0\n};\nconst genderOptions = [{\n  key: 'male',\n  value: 'male',\n  text: 'Male'\n}, {\n  key: 'female',\n  value: 'female',\n  text: 'Female'\n}];\nconst countryOptions = [{\n  key: 'fr',\n  value: 'France',\n  text: 'France'\n}];\n\nconst ProgressBar = () => React.createElement(Progress, {\n  percent: 70,\n  className: \"ProgressBarProfile\",\n  indicating: true,\n  progress: true,\n  size: \"large\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n});\n\nclass BasicsInformations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = async props => {\n      this.props.nextSection();\n\n      try {\n        const data = await API.updateEditProfilValues(this.state);\n        if (Array.isArray(data.warnings) && data.warnings.length) this.setState({\n          warnings: data.warnings\n        });else this.setState({\n          save: true\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = (e, {\n      value,\n      id\n    }) => {\n      this.setState({\n        [id]: value\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n  }\n\n  async componentDidMount() {\n    try {\n      const _ref = await API.getEditProfilValues(),\n            data = _ref.data;\n\n      if (data && data.warnings === true) this.setState({\n        warnings: data.warnings\n      });\n      const newState = data.findProfil;\n\n      if (data.findProfil) {\n        this.setState(_objectSpread({}, newState), () => {\n          console.log(this.state);\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames(\"ui middle\", \"BasicInformations\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      doubling: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CompleteTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Complete Basics Informations\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(ProgressBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      columns: 1,\n      doubling: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(DividerC, {\n      vertically: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form, {\n      className: \"formEdit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Last Name\",\n      color: \"white\",\n      id: \"lastname\",\n      value: this.state.lastname,\n      onChange: this.handleChange,\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"First Name\",\n      id: \"firstname\",\n      value: this.state.firstname,\n      onChange: this.handleChange,\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      className: \"DropdownBasic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      id: \"gender\",\n      control: Select,\n      value: this.state.gender,\n      options: genderOptions,\n      label: \"Select Gender\",\n      placeholder: \"Gender\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      id: \"interested\",\n      control: Select,\n      value: this.state.interested,\n      options: genderOptions,\n      label: \"Interested by \",\n      placeholder: \"Interested by\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      id: \"country\",\n      control: Select,\n      value: this.state.country,\n      options: countryOptions,\n      label: \"Select Country\",\n      placeholder: \"Country\",\n      search: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      label: \"Bio\",\n      control: TextArea,\n      id: \"bio\",\n      placeholder: \"Bio\",\n      value: this.state.bio,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(DividerC, {\n      vertically: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow alternate circle right outline\",\n      size: \"huge\",\n      onClick: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default BasicsInformations;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/BasicInformations/BasicsInformations.js"],"names":["React","Form","TextArea","Grid","Progress","Icon","Select","API","classnames","DividerC","DEFAULT_STATE","lastname","firstname","interested","country","gender","bio","user_id","email","interests","birthday","messages","save","warnings","complete","genderOptions","key","value","text","countryOptions","ProgressBar","BasicsInformations","Component","constructor","props","handleSave","nextSection","data","updateEditProfilValues","state","Array","isArray","length","setState","error","console","handleChange","e","id","componentDidMount","getEditProfilValues","newState","findProfil","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Form, TextArea, Grid, Progress, Icon, Select} from 'semantic-ui-react';\nimport API from \"../../../utils/API\";\nimport classnames from 'classnames';\nimport DividerC from \"../../Divider/Divider\";\n\nconst DEFAULT_STATE = {\n    lastname: \"\",\n    firstname: \"\",\n    interested: \"\",\n    country: \"\",\n    gender: \"\",\n    bio: \"\",\n    user_id: '',\n    email: \"\",\n    interests: [],\n    birthday: \"\",\n    messages : {\n        save: false,\n        warnings: []\n    },\n    complete : 0\n};\n\nconst genderOptions = [\n    { key: 'male', value: 'male', text: 'Male' },\n    { key: 'female', value: 'female', text: 'Female' },\n];\n\nconst countryOptions = [\n    { key: 'fr', value: 'France', text: 'France' }\n];\n\n\nconst ProgressBar = () => (\n    <Progress\n        percent={70}\n        className=\"ProgressBarProfile\"\n        indicating\n        progress\n        size=\"large\"/>\n);\nclass BasicsInformations extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n    }\n\n    async componentDidMount() {\n        try {\n            const {data} = await API.getEditProfilValues();\n            if (data && data.warnings === true)\n                this.setState({warnings: data.warnings});\n            const newState = data.findProfil;\n            if (data.findProfil) {\n                this.setState({...newState}, () => {\n                    console.log(this.state);\n                });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    handleSave = async(props) => {\n        this.props.nextSection();\n        try {\n            const data = await API.updateEditProfilValues(this.state);\n            if (Array.isArray(data.warnings) && data.warnings.length)\n                this.setState({warnings: data.warnings});\n            else\n                this.setState({save: true});\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleChange = (e, { value, id }) => {\n        this.setState({ [id]: value });\n    };\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className={classnames(\"ui middle\", \"BasicInformations\")}>\n                    <Grid columns={2} doubling>\n                        <Grid.Column>\n                            <h1 className=\"CompleteTitle\">Complete Basics Informations</h1>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <ProgressBar />\n                        </Grid.Column>\n                    </Grid>\n                    <Grid columns={1} doubling>\n                        <DividerC vertically={false} />\n                        <Grid.Column>\n                            <Form className=\"formEdit\">\n                                <Form.Group widths='equal'>\n                                    <Form.Input fluid\n                                                label='Last Name'\n                                                color=\"white\"\n                                                id=\"lastname\"\n                                                value={this.state.lastname}\n                                                onChange={this.handleChange}\n                                                placeholder=\"Last Name\"\n                                    />\n                                    <Form.Input fluid\n                                                label='First Name'\n                                                id=\"firstname\"\n                                                value={this.state.firstname}\n                                                onChange={this.handleChange}\n                                                placeholder=\"First Name\"\n                                    />\n                                </Form.Group>\n                                <Form.Group widths='equal' className=\"DropdownBasic\">\n                                    <Form.Field\n                                        id=\"gender\"\n                                        control={Select}\n                                        value={this.state.gender}\n                                        options={genderOptions}\n                                        label=\"Select Gender\"\n                                        placeholder='Gender'\n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Field\n                                        id=\"interested\"\n                                        control={Select}\n                                        value={this.state.interested}\n                                        options={genderOptions}\n                                        label=\"Interested by \"\n                                        placeholder='Interested by'\n                                        onChange={this.handleChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths='equal'>\n                                    <Form.Input\n                                        fluid\n                                        disabled\n                                        label='Email'\n                                        id=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Field\n                                        id=\"country\"\n                                        control={Select}\n                                        value={this.state.country}\n                                        options={countryOptions}\n                                        label=\"Select Country\"\n                                        placeholder='Country'\n                                        search\n                                        onChange={this.handleChange}\n                                    />\n                                </Form.Group>\n                                <Form.Field\n                                    label='Bio'\n                                    control={TextArea}\n                                    id=\"bio\"\n                                    placeholder=\"Bio\"\n                                    value={this.state.bio}\n                                    onChange={this.handleChange}\n                                />\n                            </Form>\n                        </Grid.Column>\n                        <DividerC vertically={false}/>\n                        <Grid.Row centered>\n                            <Icon className=\"EditProfilArrow\"\n                                  name='arrow alternate circle right outline'\n                                  size=\"huge\"\n                                  onClick={this.handleSave}/>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BasicsInformations;"]},"metadata":{},"sourceType":"module"}