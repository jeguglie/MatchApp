{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js\";\nimport { Divider, Grid, Image, Label, Modal, Segment, Icon } from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\nimport classnames from 'classnames';\nimport ModalUserActions from \"./ModalUserActions\";\nimport API from \"../../utils/API\";\n\nconst moment = require('moment');\n\nconst DEFAULT_STATE = {\n  openHide: false,\n  openReport: false,\n  openFake: false,\n  liked: false,\n  interests: '',\n  showModal: false,\n  user: {\n    lastname: '',\n    firstname: '',\n    interests: [],\n    gender: [],\n    interested: [],\n    imgs: [],\n    country: '',\n    last_date_online: '',\n    bio: '',\n    age: '',\n    likes: ''\n  }\n};\n\nclass ModalUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n    };\n\n    this.loadUser = userIdFocus => {\n      API.getUserIdProfile(userIdFocus).then(async res => {\n        if (res.status === 200) this._mounted && this.setState({\n          user: res.data.user,\n          showModal: true,\n          liked: res.data.user.liked\n        });\n      });\n    };\n\n    this.userLike = async userIdFocus => {\n      await API.userLike(userIdFocus).then(response => {\n        if (response.status === 200 && typeof response.data.liked != 'undefined') {\n          this._mounted && this.setState({\n            liked: response.data.liked\n          });\n          if (response.data.liked) this.props.s_like(userIdFocus);\n          if (response.data.unliked) this.props.s_like_unliked(userIdFocus);\n          if (response.data.likedback) this.props.s_like_likedback(userIdFocus);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleClose = () => {\n      this._mounted && this.setState({\n        user: { ...DEFAULT_STATE\n        },\n        liked: false,\n        showModal: false\n      });\n    };\n\n    this.closeReport = () => {\n      this._mounted && this.setState({\n        openReport: false\n      });\n    };\n\n    this.openReport = () => {\n      this._mounted && this.setState({\n        openReport: true\n      });\n    };\n\n    this.closeFake = () => {\n      this._mounted && this.setState({\n        openFake: false\n      });\n    };\n\n    this.openFake = () => {\n      this._mounted && this.setState({\n        openFake: true\n      });\n    };\n\n    this.closeHide = () => {\n      this._mounted && this.setState({\n        openHide: false\n      });\n    };\n\n    this.openHide = () => {\n      this._mounted && this.setState({\n        openHide: true\n      });\n    };\n\n    this.state = { ...DEFAULT_STATE\n    };\n    this._mounted = false;\n    this.state.interests = this.props.interests;\n  }\n\n  componentWillUnmount() {\n    this._mounted && this.setState({ ...DEFAULT_STATE\n    });\n    this._mounted = false;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.interests !== prevState.interests) {\n      return {\n        interests: nextProps.interests\n      };\n    }\n\n    return null;\n  } // Ref\n\n\n  render() {\n    const {\n      user,\n      liked,\n      showModal,\n      openReport,\n      openFake,\n      openHide,\n      interests\n    } = this.state;\n    return showModal && typeof user.imgs !== 'undefined' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(ModalUserActions, {\n      openReport: openReport,\n      closeReport: this.closeReport,\n      openFake: openFake,\n      closeFake: this.closeFake,\n      openHide: openHide,\n      closeHide: this.closeHide,\n      userID: user.user_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      dimmer: \"blurring\",\n      size: 'tiny',\n      open: showModal,\n      onClose: this.handleClose,\n      className: \"ModalCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"CardHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CardHeaderTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" \", user.firstname, \" \", user.lastname, \", \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, user.age))), React.createElement(Modal.Content, {\n      className: \"ModalProfilView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, user.online ? React.createElement(\"span\", {\n      className: 'Online',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'circle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"Online\") : React.createElement(\"span\", {\n      className: 'LastConnection',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'circle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \"Online \", moment(user.last_date_online).fromNow()), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      className: \"RowImages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"medium\",\n      src: user.imgs[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      className: \"RowImages\",\n      centered: true,\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, user.imgs.map((img, i) => {\n      if (i > 0) return React.createElement(Grid.Column, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Image, {\n        rounded: true,\n        size: \"small\",\n        src: user.imgs[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n      return null;\n    }))), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, user.bio && user.bio.length ? React.createElement(Segment, {\n      className: \"BioSegment\",\n      textAlign: \"center\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, user.bio)) : React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      basic: true,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      fluid: true,\n      widths: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      id: \"like\",\n      onClick: () => this.userLike(user.user_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), liked ? 'Unlike' : 'Like'), React.createElement(Button, {\n      size: \"small\",\n      id: \"hide\",\n      onClick: this.openHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), \"Hide\"), React.createElement(Button, {\n      size: \"small\",\n      id: \"fake\",\n      onClick: this.openFake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user secret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), \"Fake\"), React.createElement(Button, {\n      size: \"small\",\n      id: \"blockuser\",\n      onClick: this.openReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), \"Signal\"))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(Label.Group, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), user.interests.map((data, i) => {\n      return React.createElement(Label, {\n        className: interests.find(interest => interest === data) ? classnames(\"interestLabel\", \"sameInterest\") : \"interestLabel\",\n        id: i,\n        key: i,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"#\"), data);\n    })))))) : null;\n  }\n\n}\n\nexport default ModalUser;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js"],"names":["Divider","Grid","Image","Label","Modal","Segment","Icon","Button","React","classnames","ModalUserActions","API","moment","require","DEFAULT_STATE","openHide","openReport","openFake","liked","interests","showModal","user","lastname","firstname","gender","interested","imgs","country","last_date_online","bio","age","likes","ModalUser","Component","constructor","props","componentDidMount","_mounted","loadUser","userIdFocus","getUserIdProfile","then","res","status","setState","data","userLike","response","s_like","unliked","s_like_unliked","likedback","s_like_likedback","catch","err","console","log","handleClose","closeReport","closeFake","closeHide","state","componentWillUnmount","getDerivedStateFromProps","nextProps","prevState","render","user_id","online","fromNow","map","img","i","length","find","interest"],"mappings":"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","sourcesContent":["import {Divider, Grid, Image, Label, Modal, Segment, Icon} from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\nimport classnames from 'classnames';\nimport ModalUserActions from \"./ModalUserActions\";\nimport API from \"../../utils/API\";\nconst moment = require('moment');\n\n\nconst DEFAULT_STATE = {\n    openHide: false,\n    openReport: false,\n    openFake: false,\n    liked: false,\n    interests: '',\n    showModal: false,\n    user: {\n        lastname: '',\n        firstname: '',\n        interests: [],\n        gender: [],\n        interested: [],\n        imgs: [],\n        country: '',\n        last_date_online: '',\n        bio: '',\n        age: '',\n        likes: ''\n    },\n};\n\nclass ModalUser extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n        this.state.interests = this.props.interests\n\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n    };\n    componentWillUnmount() {\n        this._mounted && this.setState({...DEFAULT_STATE});\n        this._mounted = false;\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if (nextProps.interests !== prevState.interests) {\n            return ({interests: nextProps.interests});\n        }\n        return null;\n    }\n    // Ref\n    loadUser = (userIdFocus) => {\n        API.getUserIdProfile(userIdFocus)\n            .then(async (res) => {\n                if (res.status === 200)\n                    this._mounted && this.setState({user: res.data.user, showModal: true, liked: res.data.user.liked});\n            });\n    };\n\n    // Like\n    userLike = async(userIdFocus) => {\n        await API.userLike(userIdFocus)\n            .then(response => {\n                if (response.status === 200 && typeof response.data.liked != 'undefined') {\n                    this._mounted && this.setState({liked: response.data.liked});\n                    if (response.data.liked) this.props.s_like(userIdFocus);\n                    if (response.data.unliked) this.props.s_like_unliked(userIdFocus);\n                    if (response.data.likedback) this.props.s_like_likedback(userIdFocus);\n                }\n            })\n            .catch(err => console.log(err));\n    };\n    // Modal\n    handleClose = () => {this._mounted && this.setState({ user: {...DEFAULT_STATE}, liked: false, showModal: false});};\n    closeReport = () => { this._mounted && this.setState({openReport: false})};\n    openReport = () => {this._mounted && this.setState({openReport: true})};\n    closeFake = () => { this._mounted && this.setState({openFake: false})};\n    openFake = () => {this._mounted && this.setState({openFake: true})};\n    closeHide = () => { this._mounted && this.setState({openHide: false})};\n    openHide = () => {this._mounted && this.setState({openHide: true})};\n    render() {\n        const {user, liked, showModal, openReport, openFake, openHide, interests } = this.state;\n        return (\n            showModal && typeof user.imgs !== 'undefined' ?\n            <div>\n                <ModalUserActions\n                    openReport={openReport}\n                    closeReport={this.closeReport}\n                    openFake={openFake}\n                    closeFake={this.closeFake}\n                    openHide={openHide}\n                    closeHide={this.closeHide}\n                    userID={user.user_id}\n                />\n                <Modal\n                    dimmer={\"blurring\"}\n                    size={'tiny'}\n                    open={showModal}\n                    onClose={this.handleClose}\n                    className=\"ModalCard\">\n                    <Modal.Header className=\"CardHeader\"><h1\n                        className=\"CardHeaderTile\"> {user.firstname} {user.lastname}, <strong>{user.age}</strong></h1>\n                    </Modal.Header>\n                    <Modal.Content className=\"ModalProfilView\">\n                        {user.online ?\n                            <span className={'Online'}>\n                                <Icon name={'circle'} />\n                                Online\n                            </span> :\n                            <span className={'LastConnection'}>\n                                 <Icon name={'circle'} />\n                                Online {moment(user.last_date_online).fromNow()}\n                            </span>\n                        }\n                        <Divider hidden/>\n                        <Grid centered columns={2}>\n                            <Grid.Column className=\"RowImages\">\n                                <Image rounded size='medium' src={user.imgs[0]}/>\n                            </Grid.Column>\n                            <Grid.Row className=\"RowImages\" centered columns={4}>\n                                {user.imgs.map((img, i) => {\n                                    if (i > 0)\n                                        return (\n                                            <Grid.Column key={i}>\n                                                <Image rounded size='small' src={user.imgs[i]}/>\n                                            </Grid.Column>\n                                        );\n                                    return null;\n                                })}\n                            </Grid.Row>\n                        </Grid>\n                        <Modal.Description>\n                            {user.bio && user.bio.length ?\n                                <Segment className=\"BioSegment\" textAlign=\"center\" inverted>\n                                    <p>{user.bio}</p>\n                                </Segment> : <Divider hidden />\n                            }\n                            <Segment basic textAlign={'center'}>\n                                <Button.Group fluid widths={4}>\n                                    <Button size='small' id='like' onClick={() => this.userLike(user.user_id)}>\n                                        <Icon name='heart'/>\n                                        {liked ? 'Unlike' : 'Like'}\n                                    </Button>\n                                    <Button size='small' id='hide' onClick={this.openHide}>\n                                        <Icon name='user x'/>\n                                        Hide\n                                    </Button>\n                                    <Button size='small' id='fake' onClick={this.openFake}>\n                                        <Icon name='user secret'/>\n                                        Fake\n                                    </Button>\n                                    <Button size='small' id='blockuser' onClick={this.openReport}>\n                                        <Icon name='warning'/>\n                                        Signal\n                                    </Button>\n                                </Button.Group>\n                            </Segment>\n                            <Divider hidden/>\n                            <Label.Group size='small'>\n                                <p/>\n                                {user.interests.map((data, i) => {\n                                    return (\n                                        <Label\n                                            className={interests.find(interest => interest === data) ? classnames(\"interestLabel\",\"sameInterest\") : \"interestLabel\"}\n                                            id={i}\n                                            key={i}\n                                            data={data}>\n                                            <strong>#</strong>{data}</Label>\n                                    )\n                                })}\n                            </Label.Group>\n                        </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </div> : null\n        )\n    }\n}\n\nexport default ModalUser;"]},"metadata":{},"sourceType":"module"}