{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/containers/Wall/SearchTags/SearchTags.js\";\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Button, Dropdown, Grid, Header } from 'semantic-ui-react';\n\nconst getOptions = () => _.times(3, () => {\n  const name = faker.name.findName();\n  return {\n    key: name,\n    text: name,\n    value: _.snakeCase(name)\n  };\n});\n\nclass DropdownExampleRemote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFetching: false,\n      multiple: true,\n      search: true,\n      searchQuery: null,\n      value: [],\n      options: getOptions()\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.handleSearchChange = (e, {\n      searchQuery\n    }) => this.setState({\n      searchQuery\n    });\n\n    this.fetchOptions = () => {\n      this.setState({\n        isFetching: true\n      });\n      setTimeout(() => {\n        this.setState({\n          isFetching: false,\n          options: getOptions()\n        });\n        this.selectRandom();\n      }, 500);\n    };\n\n    this.selectRandom = () => {\n      const _this$state = this.state,\n            multiple = _this$state.multiple,\n            options = _this$state.options;\n\n      const value = _.sample(options).value;\n\n      this.setState({\n        value: multiple ? [value] : value\n      });\n    };\n\n    this.toggleSearch = e => this.setState({\n      search: e.target.checked\n    });\n\n    this.toggleMultiple = e => {\n      const value = this.state.value;\n      const multiple = e.target.checked; // convert the value to/from an array\n\n      const newValue = multiple ? _.compact([value]) : _.head(value) || '';\n      this.setState({\n        multiple,\n        value: newValue\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          multiple = _this$state2.multiple,\n          options = _this$state2.options,\n          isFetching = _this$state2.isFetching,\n          search = _this$state2.search,\n          value = _this$state2.value;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.fetchOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Fetch\"), React.createElement(Button, {\n      onClick: this.selectRandom,\n      disabled: _.isEmpty(options),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Random\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: search,\n      onChange: this.toggleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), ' ', \"Search\"), ' ', React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: multiple,\n      onChange: this.toggleMultiple,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), ' ', \"Multiple\")), React.createElement(Dropdown, {\n      fluid: true,\n      selection: true,\n      multiple: multiple,\n      search: search,\n      options: options,\n      value: value,\n      placeholder: \"Add Users\",\n      onChange: this.handleChange,\n      onSearchChange: this.handleSearchChange,\n      disabled: isFetching,\n      loading: isFetching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, JSON.stringify(this.state, null, 2))));\n  }\n\n}\n\nexport default DropdownExampleRemote;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/containers/Wall/SearchTags/SearchTags.js"],"names":["_","faker","React","Component","Button","Dropdown","Grid","Header","getOptions","times","name","findName","key","text","value","snakeCase","DropdownExampleRemote","state","isFetching","multiple","search","searchQuery","options","handleChange","e","setState","handleSearchChange","fetchOptions","setTimeout","selectRandom","sample","toggleSearch","target","checked","toggleMultiple","newValue","compact","head","render","isEmpty","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport faker from 'faker'\nimport React, { Component } from 'react'\nimport { Button, Dropdown, Grid, Header } from 'semantic-ui-react'\n\nconst getOptions = () =>\n    _.times(3, () => {\n        const name = faker.name.findName()\n        return { key: name, text: name, value: _.snakeCase(name) }\n    })\n\nclass DropdownExampleRemote extends Component {\n    state = {\n        isFetching: false,\n        multiple: true,\n        search: true,\n        searchQuery: null,\n        value: [],\n        options: getOptions(),\n    }\n\n    handleChange = (e, { value }) => this.setState({ value })\n    handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery })\n\n    fetchOptions = () => {\n        this.setState({ isFetching: true })\n\n        setTimeout(() => {\n            this.setState({ isFetching: false, options: getOptions() })\n            this.selectRandom()\n        }, 500)\n    }\n\n    selectRandom = () => {\n        const { multiple, options } = this.state\n        const value = _.sample(options).value\n        this.setState({ value: multiple ? [value] : value })\n    }\n\n    toggleSearch = (e) => this.setState({ search: e.target.checked })\n\n    toggleMultiple = (e) => {\n        const { value } = this.state\n        const multiple = e.target.checked\n        // convert the value to/from an array\n        const newValue = multiple ? _.compact([value]) : _.head(value) || ''\n        this.setState({ multiple, value: newValue })\n    }\n\n    render() {\n        const { multiple, options, isFetching, search, value } = this.state\n\n        return (\n            <Grid>\n                <Grid.Column width={8}>\n                    <p>\n                        <Button onClick={this.fetchOptions}>Fetch</Button>\n                        <Button onClick={this.selectRandom} disabled={_.isEmpty(options)}>\n                            Random\n                        </Button>\n                        <label>\n                            <input\n                                type='checkbox'\n                                checked={search}\n                                onChange={this.toggleSearch}\n                            />{' '}\n                            Search\n                        </label>{' '}\n                        <label>\n                            <input\n                                type='checkbox'\n                                checked={multiple}\n                                onChange={this.toggleMultiple}\n                            />{' '}\n                            Multiple\n                        </label>\n                    </p>\n                    <Dropdown\n                        fluid\n                        selection\n                        multiple={multiple}\n                        search={search}\n                        options={options}\n                        value={value}\n                        placeholder='Add Users'\n                        onChange={this.handleChange}\n                        onSearchChange={this.handleSearchChange}\n                        disabled={isFetching}\n                        loading={isFetching}\n                    />\n                </Grid.Column>\n                <Grid.Column width={8}>\n                    <Header>State</Header>\n                    <pre>{JSON.stringify(this.state, null, 2)}</pre>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default DropdownExampleRemote\n"]},"metadata":{},"sourceType":"module"}