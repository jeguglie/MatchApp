{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nconst DEFAULT_STATE = {\n  notifications: [{}]\n};\nexport default class NotificationsHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) this._mounted && this.setState({\n          notifications: response.data.notifications\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.timeSince = myDate => {\n      console.log(myDate);\n      myDate = myDate.split(\"T\");\n      myDate = myDate.split(\"-\");\n      var newDate = myDate[1] + \"/\" + myDate[0] + \"/\" + myDate[2];\n      let timeStamp = new Date(newDate).getTime();\n      var now = new Date(),\n          secondsPast = (now.getTime() - timeStamp) / 1000;\n\n      if (secondsPast < 60) {\n        return parseInt(secondsPast) + 's';\n      }\n\n      if (secondsPast < 3600) {\n        return parseInt(secondsPast / 60) + 'm';\n      }\n\n      if (secondsPast <= 86400) {\n        return parseInt(secondsPast / 3600) + 'h';\n      }\n\n      if (secondsPast > 86400) {\n        let day = timeStamp.getDate();\n        let month = timeStamp.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n        let year = timeStamp.getFullYear() == now.getFullYear() ? \"\" : \" \" + timeStamp.getFullYear();\n        return day + \" \" + month + year;\n      }\n    };\n\n    this.notifmap = () => {\n      return this.state.notifications.map((obj, i) => {\n        return React.createElement(List.Item, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          floated: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Dismiss\")), React.createElement(Image, {\n          avatar: true,\n          src: obj.img_link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(List.Content, {\n          as: \"a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, obj.firstname), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, this.renderSwitchType(obj.type), \"on \", () => this.timeSince(obj.date))));\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'visited your profile  ';\n\n      case 2:\n        return 'send you a message  ';\n\n      case 3:\n        return 'liked you back  ';\n\n      case 4:\n        return 'remove his like  ';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(List, {\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.notifmap()));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","API","DEFAULT_STATE","notifications","NotificationsHistory","Component","constructor","props","componentDidMount","_mounted","getNotifications","then","response","status","setState","data","catch","e","console","log","timeSince","myDate","split","newDate","timeStamp","Date","getTime","now","secondsPast","parseInt","day","getDate","month","toDateString","match","replace","year","getFullYear","notifmap","state","map","obj","i","img_link","firstname","renderSwitchType","type","date","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { List, Image, Button } from 'semantic-ui-react';\nimport API from '../../../utils/API';\n\nconst DEFAULT_STATE = {\n    notifications: [{}],\n};\n\n\nexport default class NotificationsHistory extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200)\n                    this._mounted && this.setState({notifications: response.data.notifications});\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    timeSince = (myDate) => {\n        console.log(myDate);\n        myDate = myDate.split(\"T\");\n        myDate = myDate.split(\"-\");\n        var newDate = myDate[1]+\"/\"+myDate[0]+\"/\"+myDate[2];\n        let timeStamp = new Date(newDate).getTime();\n        var now = new Date(),\n            secondsPast = (now.getTime() - timeStamp) / 1000;\n        if (secondsPast < 60) {\n            return parseInt(secondsPast) + 's';\n        }\n        if (secondsPast < 3600) {\n            return parseInt(secondsPast / 60) + 'm';\n        }\n        if (secondsPast <= 86400) {\n            return parseInt(secondsPast / 3600) + 'h';\n        }\n        if (secondsPast > 86400) {\n            let day = timeStamp.getDate();\n            let month = timeStamp.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n            let year = timeStamp.getFullYear() == now.getFullYear() ? \"\" : \" \" + timeStamp.getFullYear();\n            return day + \" \" + month + year;\n        }\n    }\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'visited your profile  ';\n            case 2:\n                return 'send you a message  ';\n            case 3:\n                return 'liked you back  ';\n            case 4:\n                return 'remove his like  ';\n        }\n    }\n    notifmap = () => {\n        return this.state.notifications.map((obj, i) => {\n            return (\n                    <List.Item key={i}>\n                        <List.Content>\n                            <List.Content floated='right'>\n                                <Button>Dismiss</Button>\n                            </List.Content>\n                            <Image avatar src={obj.img_link}/>\n                            <List.Content as='a'>{obj.firstname}</List.Content>\n                            <List.Description>\n                                {this.renderSwitchType(obj.type)}\n                                on {() => this.timeSince(obj.date)}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n            )\n        });\n    };\n\n    render(){\n        return (\n            <div>\n                <List verticalAlign='middle'>\n                    {this.notifmap()}\n                </List>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}