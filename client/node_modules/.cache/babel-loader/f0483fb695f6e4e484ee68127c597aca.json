{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nconst DEFAULT_STATE = {\n  notifications: [{}]\n};\nexport default class NotificationsHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) {\n          console.log(response.data.notifications);\n          this._mounted && this.setState({\n            notifications: response.data.notifications\n          });\n        }\n      }).catch(e => console.log(e));\n    };\n\n    this.notifmap = () => {\n      return this.state.notifications.map((obj, i) => {\n        return React.createElement(List.Item, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          floated: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Dismiss\")), React.createElement(Image, {\n          avatar: true,\n          src: obj.img_link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(List.Content, {\n          as: \"a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, obj.firstname), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, this.renderSwitchType(obj.type), \"on \", timeSince(obj.date), \".\")));\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  timeSince(myDate) {\n    let mynewDate = myDate.split(\"-T\");\n    mynewDate = mynewDate.split(\"-\");\n    var newDate = mynewDate[1] + \"/\" + mynewDate[0] + \"/\" + mynewDate[2];\n    let timeStamp = new Date(newDate).getTime();\n    var now = new Date(),\n        secondsPast = (now.getTime() - timeStamp) / 1000;\n\n    if (secondsPast < 60) {\n      return parseInt(secondsPast) + 's';\n    }\n\n    if (secondsPast < 3600) {\n      return parseInt(secondsPast / 60) + 'm';\n    }\n\n    if (secondsPast <= 86400) {\n      return parseInt(secondsPast / 3600) + 'h';\n    }\n\n    if (secondsPast > 86400) {\n      let day = timeStamp.getDate();\n      let month = timeStamp.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n      let year = timeStamp.getFullYear() == now.getFullYear() ? \"\" : \" \" + timeStamp.getFullYear();\n      return day + \" \" + month + year;\n    }\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'visited your profile  ';\n\n      case 2:\n        return 'send you a message  ';\n\n      case 3:\n        return 'liked you back  ';\n\n      case 4:\n        return 'remove his like  ';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(List, {\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.notifmap()));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","API","DEFAULT_STATE","notifications","NotificationsHistory","Component","constructor","props","componentDidMount","_mounted","getNotifications","then","response","status","console","log","data","setState","catch","e","notifmap","state","map","obj","i","img_link","firstname","renderSwitchType","type","timeSince","date","componentWillUnmount","myDate","mynewDate","split","newDate","timeStamp","Date","getTime","now","secondsPast","parseInt","day","getDate","month","toDateString","match","replace","year","getFullYear","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { List, Image, Button } from 'semantic-ui-react';\nimport API from '../../../utils/API';\n\nconst DEFAULT_STATE = {\n    notifications: [{}],\n};\n\n\nexport default class NotificationsHistory extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200) {\n                    console.log(response.data.notifications);\n                    this._mounted && this.setState({notifications: response.data.notifications});\n                }\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    timeSince(myDate) {\n        let mynewDate = myDate.split(\"-T\");\n        mynewDate = mynewDate.split(\"-\");\n        var newDate = mynewDate[1]+\"/\"+mynewDate[0]+\"/\"+mynewDate[2];\n        let timeStamp = new Date(newDate).getTime();\n        var now = new Date(),\n            secondsPast = (now.getTime() - timeStamp) / 1000;\n        if (secondsPast < 60) {\n            return parseInt(secondsPast) + 's';\n        }\n        if (secondsPast < 3600) {\n            return parseInt(secondsPast / 60) + 'm';\n        }\n        if (secondsPast <= 86400) {\n            return parseInt(secondsPast / 3600) + 'h';\n        }\n        if (secondsPast > 86400) {\n            let day = timeStamp.getDate();\n            let month = timeStamp.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n            let year = timeStamp.getFullYear() == now.getFullYear() ? \"\" : \" \" + timeStamp.getFullYear();\n            return day + \" \" + month + year;\n        }\n    }\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'visited your profile  ';\n            case 2:\n                return 'send you a message  ';\n            case 3:\n                return 'liked you back  ';\n            case 4:\n                return 'remove his like  ';\n        }\n    }\n    notifmap = () => {\n        return this.state.notifications.map((obj, i) => {\n            return (\n                    <List.Item key={i}>\n                        <List.Content>\n                            <List.Content floated='right'>\n                                <Button>Dismiss</Button>\n                            </List.Content>\n                            <Image avatar src={obj.img_link}/>\n                            <List.Content as='a'>{obj.firstname}</List.Content>\n                            <List.Description>\n                                {this.renderSwitchType(obj.type)}\n                                on {timeSince(obj.date)}.\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n            )\n        });\n    };\n\n    render(){\n        return (\n            <div>\n                <List verticalAlign='middle'>\n                    {this.notifmap()}\n                </List>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}