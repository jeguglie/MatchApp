{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n/**\n * Button groups can contain conditionals.\n */\n\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = (0, _classnames[\"default\"])('or', className);\n  var rest = (0, _lib.getUnhandledProps)(ButtonOr, props);\n  var ElementType = (0, _lib.getElementType)(ButtonOr, props);\n  return _react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _propTypes[\"default\"].elementType,\n\n  /** Additional classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string])\n} : {};\nvar _default = ButtonOr;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}