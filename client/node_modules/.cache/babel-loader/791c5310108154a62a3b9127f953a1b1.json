{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/containers/Wall/Wall.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router\";\nimport UserMiniCard from \"../../components/UserMiniCard/UserMiniCard\";\nimport API from './../../utils/API';\nimport InputRange from 'react-input-range';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Button, Grid, Segment, Divider, Checkbox } from \"semantic-ui-react\";\nimport 'react-input-range/lib/css/index.css';\nimport Aux from './../../hoc/Aux';\nimport ModalUser from '../../components/ModalUser/ModalUser';\nimport SearchTags from './SearchTags/SearchTags';\nconst DEFAULT_STATE = {\n  loadingModal: '',\n  nextUsers: '',\n  hasMoreContent: false,\n  clear: false,\n  users: [],\n  warnings: [],\n  loading: true,\n  userView: false,\n  userIdFocusLoading: null,\n  interests: [],\n  visible: false,\n  distanceRange: 250,\n  ageRange: {\n    min: 19,\n    max: 27\n  },\n  popularityRange: {\n    min: 0,\n    max: 50\n  }\n};\n\nclass Wall extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      this._mounted && this.setState({\n        loading: true\n      });\n      await API.checkUserView().then(res => {\n        if (res.status === 200) {\n          this.setState({\n            userView: true\n          });\n          this.searchMatch();\n        }\n      }).catch(e => this.setState(this.props.history.push('/profile')));\n      this._mounted && this.setState({\n        loading: false\n      });\n    };\n\n    this.handleChange = async (value, id) => {\n      if (id === \"distanceRange\") this._mounted && this.setState({\n        distanceRange: value\n      });else if (id === \"ageRange\") this._mounted && this.setState({\n        ageRange: value\n      });else if (id === \"popularityRange\") this._mounted && this.setState({\n        popularityRange: value\n      });\n    };\n\n    this.searchMatch = async () => {\n      this._mounted && this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            distanceRange = _this$state.distanceRange,\n            ageRange = _this$state.ageRange,\n            popularityRange = _this$state.popularityRange;\n      let users = [];\n      await API.getUsers(distanceRange, ageRange, popularityRange).then(response => {\n        if (response.status === 200) users = response.data.users;\n      });\n      let nextUsers = 0;\n      if (users.length > 20) nextUsers = users.slice(21);\n      this._mounted && this.setState({\n        nextUsers: nextUsers,\n        users: users.slice(0, 21),\n        hasMoreContent: users.length > 20\n      });\n      this._mounted && this.setState({\n        loading: false\n      });\n    };\n\n    this.clickedUser = async userIdFocus => {\n      // Send notification\n      this.props.sWallVisit(userIdFocus); // Inner Ref Modal\n\n      this.innerRefModal.current && this.innerRefModal.current.loadUser(userIdFocus);\n      this._mounted && this.setState({\n        loadingMinCard: true,\n        userIdFocusLoad: userIdFocus\n      });\n    };\n\n    this.handleCardUserComplete = () => this._mounted && this.setState({\n      loading: false,\n      loadingMinCardLoad: false\n    });\n\n    this.handleBottomPage = () => {\n      const _this$state2 = this.state,\n            nextUsers = _this$state2.nextUsers,\n            users = _this$state2.users;\n\n      if (nextUsers.length) {\n        for (let i = 0; i < nextUsers.length && i <= 20; i++) users.push(nextUsers[i]);\n\n        this._mounted && this.setState({\n          users: users,\n          nextUsers: nextUsers.slice(21)\n        });\n      } else this._mounted && this.setState({\n        hasMoreContent: false\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n    this.innerRefModal = React.createRef();\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  } // Filter\n\n\n  render() {\n    const _this$state3 = this.state,\n          hasMoreContent = _this$state3.hasMoreContent,\n          users = _this$state3.users,\n          userIdFocusLoad = _this$state3.userIdFocusLoad,\n          loadingMinCardLoad = _this$state3.loadingMinCardLoad,\n          loading = _this$state3.loading,\n          distanceRange = _this$state3.distanceRange,\n          ageRange = _this$state3.ageRange,\n          popularityRange = _this$state3.popularityRange;\n    const search = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      mobile: 16,\n      tablet: 6,\n      computer: 6,\n      largeScreen: 4,\n      widescreen: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      inverted: true,\n      className: \"SegmentFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Distance\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" 0 - \", distanceRange, \" km\")))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      draggableTrack: true,\n      maxValue: 5000,\n      minValue: 0,\n      onChange: value => this.handleChange(value, \"distanceRange\"),\n      formatLabel: value => `${value} km`,\n      value: distanceRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Age\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \" \", ageRange.min, \" - \", ageRange.max)))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      draggableTrack: true,\n      maxValue: 99,\n      minValue: 18,\n      onChange: value => this.handleChange(value, \"ageRange\"),\n      value: ageRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Popularity\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" \", popularityRange.min, \" - \", popularityRange.max)))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      draggableTrack: true,\n      maxValue: 500,\n      minValue: 0,\n      onChange: value => this.handleChange(value, \"popularityRange\"),\n      value: popularityRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      className: 'bottomFilter',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      divided: true,\n      columns: 'equal',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      toggle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: 'includeMyInterests',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Use my interests\")))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(SearchTags, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      centered: true,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'searchButton',\n      id: \"search\",\n      size: \"large\",\n      fluid: true,\n      loading: this.state.loading,\n      floated: 'right',\n      onClick: this.searchMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Search\"))))))))));\n    const userscards = React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      widths: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), \"Order by age\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Order by distance\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Order by match score\"))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      stackable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(UserMiniCard, {\n      userIdFocus: userIdFocusLoad,\n      loading: loadingMinCardLoad,\n      users: users,\n      clickedUser: this.clickedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      className: \"WallContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(ModalUser, {\n      handleCardUserComplete: this.handleCardUserComplete,\n      s_like: this.props.s_like,\n      s_like_unliked: this.props.s_like_unliked,\n      s_like_likedback: this.props.s_like_likedback,\n      ref: this.innerRefModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      columns: 'equal',\n      stackable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, search, userscards), React.createElement(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: this.handleBottomPage,\n      hasMore: hasMoreContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \" \"));\n  }\n\n}\n\nexport default withRouter(Wall);","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/containers/Wall/Wall.js"],"names":["React","withRouter","UserMiniCard","API","InputRange","InfiniteScroll","Button","Grid","Segment","Divider","Checkbox","Aux","ModalUser","SearchTags","DEFAULT_STATE","loadingModal","nextUsers","hasMoreContent","clear","users","warnings","loading","userView","userIdFocusLoading","interests","visible","distanceRange","ageRange","min","max","popularityRange","Wall","Component","constructor","props","componentDidMount","_mounted","setState","checkUserView","then","res","status","searchMatch","catch","e","history","push","handleChange","value","id","state","getUsers","response","data","length","slice","clickedUser","userIdFocus","sWallVisit","innerRefModal","current","loadUser","loadingMinCard","userIdFocusLoad","handleCardUserComplete","loadingMinCardLoad","handleBottomPage","i","createRef","componentWillUnmount","render","search","userscards","s_like","s_like_unliked","s_like_likedback"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router\";\nimport UserMiniCard from \"../../components/UserMiniCard/UserMiniCard\";\nimport API from './../../utils/API';\nimport InputRange from 'react-input-range';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport {Button, Grid, Segment, Divider, Checkbox} from \"semantic-ui-react\";\nimport 'react-input-range/lib/css/index.css';\nimport Aux from './../../hoc/Aux';\nimport ModalUser from '../../components/ModalUser/ModalUser';\nimport SearchTags from './SearchTags/SearchTags'\nconst DEFAULT_STATE = {\n    loadingModal: '',\n    nextUsers: '',\n    hasMoreContent: false,\n    clear: false,\n    users: [],\n    warnings: [],\n    loading: true,\n    userView: false,\n    userIdFocusLoading: null,\n    interests: [],\n    visible: false,\n    distanceRange: 250,\n    ageRange: {\n        min: 19,\n        max: 27,\n    },\n    popularityRange: {\n        min: 0,\n        max: 50,\n    },\n};\nclass Wall extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n        this.innerRefModal = React.createRef();\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        this._mounted && this.setState({loading: true});\n        await API.checkUserView()\n            .then(res => {\n                if (res.status === 200) {\n                    this.setState({userView: true});\n                    this.searchMatch();\n                }\n            })\n            .catch( (e) => this.setState(this.props.history.push('/profile')));\n            this._mounted && this.setState({loading: false});\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    // Filter\n    handleChange = async(value, id) => {\n        if (id === \"distanceRange\")\n            this._mounted && this.setState({distanceRange: value});\n        else if (id === \"ageRange\")\n            this._mounted && this.setState({ageRange: value});\n        else if (id === \"popularityRange\")\n            this._mounted && this.setState({popularityRange: value});\n    };\n\n    // Search button handle\n    searchMatch = async() => {\n        this._mounted && this.setState({loading: true});\n        const {distanceRange, ageRange, popularityRange } = this.state;\n        let users = [];\n        await API.getUsers(distanceRange, ageRange, popularityRange)\n            .then(response => {\n                if (response.status === 200)\n                    users = response.data.users;\n            });\n        let nextUsers = 0;\n        if(users.length > 20)\n           nextUsers = users.slice(21);\n        this._mounted && this.setState({\n            nextUsers: nextUsers,\n            users: users.slice(0, 21),\n            hasMoreContent: users.length > 20\n        });\n        this._mounted && this.setState({loading: false});\n\n    };\n\n\n    clickedUser = async(userIdFocus) => {\n        // Send notification\n        this.props.sWallVisit(userIdFocus);\n        // Inner Ref Modal\n        this.innerRefModal.current && this.innerRefModal.current.loadUser(userIdFocus);\n        this._mounted && this.setState({ loadingMinCard: true, userIdFocusLoad: userIdFocus});\n    };\n    handleCardUserComplete = () => this._mounted && this.setState({loading: false, loadingMinCardLoad: false});\n    handleBottomPage = () => {\n        const { nextUsers, users } = this.state;\n        if (nextUsers.length){\n            for (let i = 0; i < nextUsers.length && i <= 20; i++)\n                users.push(nextUsers[i]);\n            this._mounted && this.setState({users: users, nextUsers: nextUsers.slice(21)});\n        }\n        else\n            this._mounted && this.setState({hasMoreContent: false});\n    };\n    render() {\n        const { hasMoreContent, users, userIdFocusLoad, loadingMinCardLoad, loading, distanceRange, ageRange, popularityRange } = this.state;\n        const search = (\n            <Aux>\n                <Grid.Column mobile={16} tablet={6} computer={6} largeScreen={4} widescreen={3}>\n                    <Segment inverted className=\"SegmentFilter\">\n                        <div className=\"filterContainer\">\n                            <Grid.Row>\n                                <div className=\"DistanceRangeContainer\">\n                                    <h1 className=\"DistanceRangeTitle\"><strong>Distance</strong> <span className=\"RangeTitle\"> 0 - {distanceRange} km</span></h1>\n                                </div>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <InputRange\n                                    draggableTrack\n                                    maxValue={5000}\n                                    minValue={0}\n                                    onChange={value => this.handleChange(value, \"distanceRange\")}\n                                    formatLabel={value => `${value} km`}\n                                    value={distanceRange} />\n                            </Grid.Row>\n                            <Divider hidden/>\n                            <Grid.Row>\n                                <div className=\"DistanceRangeContainer\">\n                                    <h1 className=\"DistanceRangeTitle\"><strong>Age</strong> <span className=\"RangeTitle\"> {ageRange.min} - {ageRange.max}</span></h1>\n                                </div>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <InputRange\n                                    draggableTrack\n                                    maxValue={99}\n                                    minValue={18}\n                                    onChange={value => this.handleChange(value, \"ageRange\")}\n                                    value={ageRange} />\n                            </Grid.Row>\n                            <Divider hidden/>\n                            <Grid.Row>\n                                <div className=\"DistanceRangeContainer\">\n                                    <h1 className=\"DistanceRangeTitle\"><strong>Popularity</strong> <span className=\"RangeTitle\"> {popularityRange.min} - {popularityRange.max}</span></h1>\n                                </div>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <InputRange\n                                    draggableTrack\n                                    maxValue={500}\n                                    minValue={0}\n                                    onChange={value => this.handleChange(value, \"popularityRange\")}\n                                    value={popularityRange} />\n                            </Grid.Row>\n                            <Divider hidden/>\n                            <Segment className={'bottomFilter'}>\n                                <Grid divided columns={'equal'}>\n                                    <Grid.Row  >\n                                        <Grid.Column width={6}>\n                                            <Segment>\n                                                <Grid.Row centered>\n                                                    <Checkbox toggle />\n                                                    <p id={'includeMyInterests'}>Use my interests</p>\n                                                </Grid.Row>\n                                            </Segment>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Grid.Row>\n                                                <SearchTags />\n                                                <Divider />\n                                            </Grid.Row>\n                                            <Grid.Row centered textAlign={'center'}>\n                                                    <Button\n                                                        className={'searchButton'}\n                                                        id=\"search\"\n                                                        size='large'\n                                                        fluid\n                                                        loading={this.state.loading}\n                                                        floated={'right'}\n                                                        onClick={this.searchMatch}>\n                                                        Search\n                                                    </Button>\n                                            </Grid.Row>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            </Segment>\n                        </div>\n                    </Segment>\n                </Grid.Column>\n            </Aux>\n        );\n        const userscards = (\n            <Grid.Column>\n                <Grid.Row>\n                    <Button.Group widths='3'>\n                        <Button><Icon name='arrow down' />Order by age</Button>\n                        <Button>Order by distance</Button>\n                        <Button>Order by match score</Button>\n                    </Button.Group>\n                </Grid.Row>\n                <Divider hidden/>\n                <Grid stackable >\n                    <UserMiniCard\n                        userIdFocus={userIdFocusLoad}\n                        loading={loadingMinCardLoad}\n                        users={users}\n                        clickedUser={this.clickedUser}\n                    />\n                </Grid>\n            </Grid.Column>\n        );\n            return (\n                <div className=\"WallContainer\">\n                    <ModalUser handleCardUserComplete={this.handleCardUserComplete} s_like={this.props.s_like} s_like_unliked={this.props.s_like_unliked} s_like_likedback={this.props.s_like_likedback} ref={this.innerRefModal} />\n                    <Grid centered columns={'equal'} stackable>\n                        {search}\n                        {userscards}\n                    </Grid>\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={this.handleBottomPage}\n                        hasMore={hasMoreContent}\n                    > </InfiniteScroll>\n                </div>\n            );\n    }\n}\n\n\nexport default withRouter(Wall);"]},"metadata":{},"sourceType":"module"}