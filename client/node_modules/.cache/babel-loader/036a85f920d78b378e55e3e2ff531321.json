{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ModalChat/ModalChat.js\";\nimport React from 'react';\nimport { Modal, Input, Divider, Icon } from 'semantic-ui-react';\n\nconst moment = require('moment');\n\nclass ModalChat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpen = user => {\n      this._mounted && this.setState({\n        showModal: true,\n        user: user\n      });\n    };\n\n    this.handleClose = () => {\n      this._mounted && this.setState({\n        showModal: false,\n        user: []\n      });\n    };\n\n    this._mounted = false;\n    this.state = {\n      showModal: false,\n      user: []\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  } // Outside Ref\n\n\n  render() {\n    const {\n      showModal,\n      user\n    } = this.state;\n    const userOnline = user.online ? React.createElement(\"span\", {\n      className: 'OnlineChat',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: 'circle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), \" \") : React.createElement(\"span\", {\n      className: 'LastConnectionChat',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: 'circle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \" \");\n    return user ? React.createElement(Modal, {\n      className: 'ModalChat',\n      size: 'tiny',\n      open: showModal,\n      onClose: this.handleClose,\n      closeIcon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: 'HeaderChat',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.userOnline, ' ', React.createElement(\"span\", {\n      className: 'chatUserBadge',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, user.firstname)), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Modal.Content, {\n      scrolling: true,\n      className: 'ModalChatContent',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'inputChat',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      action: {\n        icon: 'send'\n      },\n      fluid: true,\n      placeholder: \"Type a message...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))) : null;\n  }\n\n}\n\nexport default ModalChat;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ModalChat/ModalChat.js"],"names":["React","Modal","Input","Divider","Icon","moment","require","ModalChat","Component","constructor","props","handleOpen","user","_mounted","setState","showModal","handleClose","state","componentDidMount","render","userOnline","online","firstname","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Modal, Input, Divider, Icon } from 'semantic-ui-react'\nconst moment = require('moment');\n\nclass ModalChat extends React.Component {\n    constructor(props){\n        super(props);\n        this._mounted = false;\n        this.state = {\n            showModal: false,\n            user: []\n        }\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    // Outside Ref\n    handleOpen = (user) => {this._mounted && this.setState({showModal: true, user: user})};\n    handleClose = () => {this._mounted && this.setState({showModal: false, user: []})};\n\n    render(){\n        const { showModal, user } = this.state;\n        const userOnline = (\n            user.online ?\n                <span className={'OnlineChat'}> <Icon name={'circle'}/> </span> :\n                <span className={'LastConnectionChat'}> <Icon name={'circle'}/> </span>\n        )\n        return (\n            user ?\n                <Modal\n                    className={'ModalChat'}\n                    size={'tiny'}\n                    open={showModal}\n                    onClose={this.handleClose}\n                    closeIcon>\n                    <Modal.Header className={'HeaderChat'}>\n                        {this.userOnline}{' '}\n                        <span className={'chatUserBadge'}>{user.firstname}</span>\n                    </Modal.Header>\n                    <Divider hidden />\n                    <Modal.Content scrolling className={'ModalChatContent'}>\n                        <div className={'inputChat'}>\n                            <Input size='large' action={{ icon: 'send' }} fluid  placeholder='Type a message...' />\n                        </div>\n                    </Modal.Content>\n                </Modal> : null\n        )\n    }\n}\n\nexport default ModalChat;"]},"metadata":{},"sourceType":"module"}