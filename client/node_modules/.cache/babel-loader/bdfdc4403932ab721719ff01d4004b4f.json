{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ForgotPassword/ChangePassword.js\";\nimport React from \"react\";\nimport VALIDATE from '../../utils/validation';\nimport API from \"../../utils/API\";\nimport { store } from 'react-notifications-component';\nimport { Container, Image, Form, Button, Dimmer, Loader, Divider } from 'semantic-ui-react';\nconst DEFAULT_STATE = {\n  password: \"\",\n  passwordconfirm: \"\",\n  warnings: [],\n  loading: false,\n  w_password: \"\",\n  w_passwordconfirm: \"\"\n};\nconst DEFAULT_ERRORS = {\n  w_password: \"\",\n  w_passwordconfirm: \"\"\n};\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.send = async () => {\n      // Clear warnings\n      this.warnings = { ...DEFAULT_ERRORS\n      };\n      const {\n        password,\n        passwordconfirm\n      } = this.state; // Check Validity\n\n      if (this._mounted) this.setState({\n        loading: true\n      });\n      await VALIDATE.sleepLoader(300).then(async () => {\n        if (!VALIDATE.validatePassword(password) || !VALIDATE.validatePassword(passwordconfirm)) this.warnings.w_password = \"Please enter a strong password\";\n        if (password !== passwordconfirm) this.warnings.w_passwordconfirm = \"Passwords are not the same\";\n\n        if (!VALIDATE.checkWarnings(this.warnings)) {\n          await API.changepassword(this.params.token, password, passwordconfirm).then(response => {\n            if (response.status === 200) store.addNotification({\n              title: 'Password updated',\n              message: \"Your password has been successfully updated\",\n              type: \"success\",\n              insert: \"top\",\n              container: \"top-right\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: {\n                duration: 10000,\n                onScreen: true\n              }\n            });\n            if (typeof this.props.match.params.token !== 'undefined') this.props.history.push(\"/login\");\n          }).catch(error => {\n            if (error.response.status === 400) {\n              this.setState({\n                w_password: error.response.data.warnings\n              });\n            }\n          });\n        } else if (this._mounted) this.setState({ ...this.warnings\n        });\n      });\n      if (this._mounted) this.setState({\n        loading: false\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        w_password\n      } = this.state;\n      if (event.target.id === \"password\" && w_password && w_password.length > 0) this.setState({\n        w_password: \"\"\n      });\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.state = { ...DEFAULT_STATE\n    };\n    this.warnings = { ...DEFAULT_ERRORS\n    };\n    this._mounted = false;\n    this.params = null;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this.params = this.props.match.params;\n  }\n\n  render() {\n    const {\n      loading,\n      w_password,\n      w_passwordconfirm\n    } = this.state;\n\n    const HelpLinks = () => {\n      if (typeof this.props.match.params.token !== 'undefined') return React.createElement(\"div\", {\n        className: \"loginNoAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"loginForgot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/forgotpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Send a reset link\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"No account ? \", React.createElement(\"a\", {\n        href: \"/signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Register\")));else return null;\n    };\n\n    return React.createElement(Container, {\n      className: \"loginModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Request...\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Image, {\n      className: \"img-fluid\",\n      src: \"/img/MatchApp-Logo.png\",\n      alt: \"Responsive image\",\n      size: \"medium\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"loginh1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(Form, {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      className: \"inputPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      error: w_password && w_password.length > 0 ? {\n        content: w_password,\n        pointing: 'below'\n      } : null,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      id: \"password\",\n      onChange: this.handleChange,\n      type: \"password\",\n      size: \"huge\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      className: \"inputPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      error: w_passwordconfirm && w_passwordconfirm.length > 0 ? {\n        content: w_passwordconfirm,\n        pointing: 'below'\n      } : null,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      id: \"passwordconfirm\",\n      onChange: this.handleChange,\n      type: \"password\",\n      size: \"huge\",\n      placeholder: \"Confirm Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"loginButton\",\n      loading: loading,\n      size: \"huge\",\n      type: \"submit\",\n      onClick: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Reset my password\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(HelpLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ForgotPassword/ChangePassword.js"],"names":["React","VALIDATE","API","store","Container","Image","Form","Button","Dimmer","Loader","Divider","DEFAULT_STATE","password","passwordconfirm","warnings","loading","w_password","w_passwordconfirm","DEFAULT_ERRORS","ChangePassword","Component","constructor","props","send","state","_mounted","setState","sleepLoader","then","validatePassword","checkWarnings","changepassword","params","token","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","match","history","push","catch","error","data","handleChange","event","target","id","length","value","componentWillUnmount","componentDidMount","render","HelpLinks","content","pointing"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport VALIDATE from '../../utils/validation';\nimport API from \"../../utils/API\";\nimport { store } from 'react-notifications-component';\nimport {Container, Image, Form, Button, Dimmer, Loader, Divider} from 'semantic-ui-react';\n\nconst DEFAULT_STATE = {\n    password: \"\",\n    passwordconfirm : \"\",\n    warnings: [],\n    loading: false,\n    w_password: \"\",\n    w_passwordconfirm: \"\",\n};\n\nconst DEFAULT_ERRORS = {\n    w_password: \"\",\n    w_passwordconfirm: \"\",\n};\n\nclass ChangePassword extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.warnings = {...DEFAULT_ERRORS};\n        this._mounted = false;\n        this.params = null;\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n        this.params = this.props.match.params;\n    }\n\n    send = async() => {\n        // Clear warnings\n        this.warnings = {...DEFAULT_ERRORS};\n        const {password, passwordconfirm} = this.state;\n        // Check Validity\n        if (this._mounted)\n            this.setState({loading: true});\n        await VALIDATE.sleepLoader(300)\n            .then(async () => {\n                if (!VALIDATE.validatePassword(password) || !VALIDATE.validatePassword(passwordconfirm))\n                    this.warnings.w_password = \"Please enter a strong password\";\n                if  (password !== passwordconfirm)\n                    this.warnings.w_passwordconfirm = \"Passwords are not the same\";\n                if (!VALIDATE.checkWarnings(this.warnings)) {\n                    await API.changepassword(this.params.token, password, passwordconfirm)\n                        .then(response => {\n                            if (response.status === 200)\n                                store.addNotification({\n                                    title: 'Password updated',\n                                    message: \"Your password has been successfully updated\",\n                                    type: \"success\",\n                                    insert: \"top\",\n                                    container: \"top-right\",\n                                    animationIn: [\"animated\", \"fadeIn\"],\n                                    animationOut: [\"animated\", \"fadeOut\"],\n                                    dismiss: {\n                                        duration: 10000,\n                                        onScreen: true\n                                    }\n                                });\n                            if (typeof this.props.match.params.token !== 'undefined')\n                                this.props.history.push(\"/login\");\n                        })\n                        .catch(error => {\n                            if (error.response.status === 400){\n                                this.setState({w_password: error.response.data.warnings});\n                            }\n                        })\n                } else if (this._mounted)\n                    this.setState({...this.warnings});\n            });\n        if (this._mounted)\n            this.setState({loading: false});\n    };\n\n    handleChange = (event) => {\n        const {w_password} = this.state;\n        if (event.target.id === \"password\" && w_password && w_password.length > 0)\n            this.setState({w_password: \"\"});\n        this.setState({[event.target.id]: event.target.value});\n    }\n\n\n    render() {\n        const {loading, w_password, w_passwordconfirm} = this.state;\n        const HelpLinks = () => {\n            if (typeof this.props.match.params.token !== 'undefined')\n                return (\n                    <div className=\"loginNoAccount\">\n                        <p className=\"loginForgot\">\n                            <a  href=\"/forgotpassword\"\n                            >\n                                <strong>Send a reset link</strong>\n                            </a>\n                        </p>\n                        <p>No account ? <a href=\"/signup\">Register</a></p>\n                    </div>\n                )\n            else return null;\n        }\n        return (\n            <Container className=\"loginModal\">\n                <Dimmer active={loading}>\n                    <Loader size='big'>Request...</Loader>\n                </Dimmer>\n                <Divider hidden />\n                <Image className=\"img-fluid\"\n                       src=\"/img/MatchApp-Logo.png\"\n                       alt=\"Responsive image\"\n                       size=\"medium\"\n                       centered />\n                <div className=\"shape\"></div>\n                <Divider hidden />\n                <h1 className=\"loginh1\">Change Password</h1>\n                <Form className=\"loginForm\">\n                    <Form.Field className=\"inputPassword\">\n                        <Form.Input\n                            error={w_password && w_password.length > 0 ? {content: w_password, pointing: 'below'} : null}\n                            icon='lock'\n                            iconPosition='left'\n                            id=\"password\"\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            size=\"huge\"\n                            placeholder=\"Password\"/>\n                    </Form.Field>\n                    <Form.Field className=\"inputPassword\">\n                        <Form.Input\n                            error={w_passwordconfirm && w_passwordconfirm.length > 0 ? {content: w_passwordconfirm, pointing: 'below'} : null}\n                            icon='lock'\n                            iconPosition='left'\n                            id=\"passwordconfirm\"\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            size=\"huge\"\n                            placeholder=\"Confirm Password\"/>\n                    </Form.Field>\n                    <Divider hidden />\n                    <Button className=\"loginButton\"\n                            loading={loading} size='huge'\n                            type=\"submit\"\n                            onClick={this.send}>\n                        Reset my password\n                    </Button>\n                </Form>\n                <Divider hidden />\n                <HelpLinks />\n                <Divider hidden />\n            </Container>\n        );\n    }\n}\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}