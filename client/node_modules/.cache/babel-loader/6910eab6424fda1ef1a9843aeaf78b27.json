{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{List,Image,Button,Transition,Grid,Divider,Icon}from'semantic-ui-react';import API from'./../../utils/API';import ModalUser from\"../../components/ModalUser/ModalUser\";import ModalChat from'../../components/ModalChat/ModalChat';var moment=require('moment');var Chat=/*#__PURE__*/function(_React$Component){_inherits(Chat,_React$Component);function Chat(props){var _this;_classCallCheck(this,Chat);_this=_possibleConstructorReturn(this,_getPrototypeOf(Chat).call(this,props));_this.s_message_receive=function(message,user_id_emitter,user_id_receiver){_this.innerRefModalChat.current&&_this.innerRefModalChat.current.addMessage(message,user_id_emitter,user_id_receiver);};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this._mounted=true;_context.next=3;return API.getMatchedUsers().then(function(res){if(res.status===200){_this._mounted&&_this.setState({matchedusers:res.data.matchedusers});}});case 3:_context.next=5;return API.getUserInterests().then(function(response){if(response.status===200)_this._mounted&&_this.setState({interests:response.data.interests});});case 5:case\"end\":return _context.stop();}}},_callee);}));_this.clickedUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userIdFocus){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// Send notification\n_this.props.sWallVisit(userIdFocus);// Inner Ref Modal\n_this.innerRefModal.current&&_this.innerRefModal.current.loadUser(userIdFocus);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.handleOpenChat=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(user){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this.innerRefModalChat.current&&_this.innerRefModalChat.current.handleOpen(user);case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}();_this.state={matchedusers:[],interests:[],userIdFocus:null};_this._mounted=false;_this.innerRefModal=React.createRef();_this.innerRefModalChat=React.createRef();return _this;}// Sockets\n_createClass(Chat,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,matchedusers=_this$state.matchedusers,interests=_this$state.interests;return React.createElement(Grid,{columns:1,textAlign:'center'},React.createElement(ModalUser,{interests:interests,s_like:this.props.s_like,s_like_unliked:this.props.s_like_unliked,s_like_likedback:this.props.s_like_likedback,ref:this.innerRefModal}),React.createElement(ModalChat,{ref:this.innerRefModalChat,s_message_send:this.props.s_message_send}),React.createElement(Grid.Column,{textAlign:'left',mobile:16,tablet:8,computer:8,largeScreen:8,widescreen:8},React.createElement(\"div\",{className:\"ChatTitle\"},React.createElement(Grid.Row,null,React.createElement(\"h1\",null,\"Matched users chat\"))),React.createElement(\"div\",{className:\"ChatHistoric\"},React.createElement(Grid.Row,null,React.createElement(Transition.Group,{as:List,duration:200,verticalAlign:\"middle\"},matchedusers.length<1?React.createElement(\"div\",{className:'nothingtoshow'},React.createElement(\"p\",null,\"No matched users\")):null,matchedusers.map(function(obj,i){return React.createElement(List.Item,{key:i},React.createElement(List.Content,null,React.createElement(List.Content,{floated:\"right\"},React.createElement(Button,{onClick:function onClick(){return _this2.handleOpenChat(obj);}},\"Open chat\")),React.createElement(Image,{avatar:true,src:obj.img_link}),React.createElement(List.Content,{as:\"a\",className:\"ChatFirstname\",onClick:function onClick(){return _this2.clickedUser(obj.user_id);}},' ',\" \",obj.firstname),React.createElement(List.Description,{className:\"ChatDesc\"},React.createElement(\"p\",null,obj.online?React.createElement(\"span\",{className:'OnlineChat'},React.createElement(Icon,{name:'circle'}),\"Online\"):React.createElement(\"span\",{className:'LastConnectionChat'},React.createElement(Icon,{name:'circle'}),\"Online \",moment(obj.last_date_online).fromNow())))),i<matchedusers.length-1?React.createElement(Divider,null):null);}))))));}}]);return Chat;}(React.Component);export default Chat;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/containers/Chat/Chat.js"],"names":["React","List","Image","Button","Transition","Grid","Divider","Icon","API","ModalUser","ModalChat","moment","require","Chat","props","s_message_receive","message","user_id_emitter","user_id_receiver","innerRefModalChat","current","addMessage","componentDidMount","_mounted","getMatchedUsers","then","res","status","setState","matchedusers","data","getUserInterests","response","interests","clickedUser","userIdFocus","sWallVisit","innerRefModal","loadUser","handleOpenChat","user","handleOpen","state","createRef","s_like","s_like_unliked","s_like_likedback","s_message_send","length","map","obj","i","img_link","user_id","firstname","online","last_date_online","fromNow","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {List, Image, Button, Transition, Grid, Divider, Icon} from 'semantic-ui-react';\nimport API from './../../utils/API';\nimport ModalUser from \"../../components/ModalUser/ModalUser\";\nimport ModalChat from '../../components/ModalChat/ModalChat';\nconst moment = require('moment');\n\nclass Chat extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            matchedusers: [],\n            interests: [],\n            userIdFocus: null\n        };\n        this._mounted = false;\n        this.innerRefModal = React.createRef();\n        this.innerRefModalChat = React.createRef();\n    }\n\n    // Sockets\n    s_message_receive = (message, user_id_emitter, user_id_receiver) => { this.innerRefModalChat.current && this.innerRefModalChat.current.addMessage(message, user_id_emitter, user_id_receiver)};\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getMatchedUsers()\n            .then(res => {\n                if (res.status === 200) {\n                    this._mounted && this.setState({matchedusers: res.data.matchedusers})\n                }\n            });\n        await API.getUserInterests()\n            .then(response => {\n                if (response.status === 200)\n                    this._mounted && this.setState({interests: response.data.interests})\n            });\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    clickedUser = async(userIdFocus) => {\n        // Send notification\n        this.props.sWallVisit(userIdFocus);\n        // Inner Ref Modal\n        this.innerRefModal.current && this.innerRefModal.current.loadUser(userIdFocus);\n    };\n\n\n    // Open modal chat with ref\n    handleOpenChat = async(user) => { this.innerRefModalChat.current && this.innerRefModalChat.current.handleOpen(user) };\n    render(){\n        const { matchedusers, interests } = this.state;\n        return (\n            <Grid columns={1} textAlign={'center'}>\n                <ModalUser\n                    interests={interests}\n                    s_like={this.props.s_like}\n                    s_like_unliked={this.props.s_like_unliked}\n                    s_like_likedback={this.props.s_like_likedback}\n                    ref={this.innerRefModal} />\n                <ModalChat\n                    ref={this.innerRefModalChat}\n                    s_message_send={this.props.s_message_send}\n                />\n                <Grid.Column textAlign={'left'} mobile={16} tablet={8} computer={8} largeScreen={8} widescreen={8}>\n                    <div className='ChatTitle'>\n                        <Grid.Row>\n                            <h1>Matched users chat</h1>\n                        </Grid.Row>\n                    </div>\n                    <div className={\"ChatHistoric\"}>\n                        <Grid.Row>\n                            <Transition.Group\n                                as={List}\n                                duration={200}\n                                verticalAlign='middle'\n                            >\n                                {matchedusers.length < 1 ?\n                                    <div className={'nothingtoshow'}>\n                                        <p>No matched users</p>\n                                    </div> :\n                                    null\n                                }\n                                {matchedusers.map((obj, i) => (\n                                    <List.Item key={i}>\n                                        <List.Content>\n                                            <List.Content floated='right'>\n                                                <Button\n                                                    onClick={() => this.handleOpenChat(obj)}>\n                                                    Open chat\n                                                </Button>\n                                            </List.Content>\n                                            <Image avatar src={obj.img_link}/>\n                                            <List.Content\n                                                as='a'\n                                                className={\"ChatFirstname\"}\n                                                onClick={() => this.clickedUser(obj.user_id)}>\n                                                {' '} {obj.firstname}</List.Content>\n                                            <List.Description className={\"ChatDesc\"}>\n                                                <p>\n                                                    {obj.online ?\n                                                        <span className={'OnlineChat'}>\n                                                            <Icon name={'circle'} />\n                                                            Online\n                                                        </span> :\n                                                        <span className={'LastConnectionChat'}>\n                                                            <Icon name={'circle'} />\n                                                            Online {moment(obj.last_date_online).fromNow()}\n                                                        </span>\n                                                    }\n                                                </p>\n                                            </List.Description>\n                                        </List.Content>\n                                        {i < matchedusers.length - 1? <Divider /> : null}\n                                    </List.Item>\n                                ))}\n                            </Transition.Group>\n                        </Grid.Row>\n                    </div>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}