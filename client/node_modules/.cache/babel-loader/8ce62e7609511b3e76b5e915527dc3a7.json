{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Menu/BootstrapMenu.js\";\nimport React from 'react';\nimport { ButtonToolbar, Navbar, Button, Nav, ButtonGroup, NavDropdown } from 'react-bootstrap';\nimport '../../Assets/global-styles/bootstrap-iso.css';\nimport { Icon } from \"semantic-ui-react\";\nimport classnames from 'classnames';\nimport { withRouter } from 'react-router';\nimport Aux from \"../../hoc/Aux\";\nimport API from '../../utils/API';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nconst withRouterAndRef = WrappedComponent => {\n  class InnerComponentWithRef extends React.Component {\n    render() {\n      const _this$props = this.props,\n            forwardRef = _this$props.forwardRef,\n            rest = _objectWithoutProperties(_this$props, [\"forwardRef\"]);\n\n      return React.createElement(WrappedComponent, Object.assign({}, rest, {\n        ref: forwardRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  const ComponentWithRouter = withRouter(InnerComponentWithRef, {\n    withRef: true\n  });\n  return React.forwardRef((props, ref) => {\n    return React.createElement(ComponentWithRouter, Object.assign({}, props, {\n      forwardRef: ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  });\n};\n\nclass NavbarBootstrap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.withAuth().then(async res => {\n        if (res.status === 200) this.setState({\n          connected: true\n        });\n        await API.getNotifNb().then(res => {\n          if (res.status === 200) this._mounted && this.setState({\n            notifNb: res.data.notifNb\n          });\n        });\n      });\n      this._mounted && this.setState({\n        activeItem: this.props.location.pathname\n      });\n    };\n\n    this.updateNotifNb = () => {\n      API.getNotifNb().then(res => {\n        if (res.status === 200) this._mounted && this.setState({\n          notifNb: res.data.notifNb\n        });\n      });\n    };\n\n    this.handleConnected = bool => {\n      this.setState({\n        connected: bool\n      });\n    };\n\n    this.handleItemClick = (e, redirect) => {\n      this.setState({\n        activeItem: redirect\n      }, () => this.redirect(redirect));\n    };\n\n    this.redirect = redirect => {\n      this.props.history.push(redirect);\n    };\n\n    this.disconnect = () => {\n      API.logout().then(res => {\n        if (res.status === 200) {\n          this._mounted && this.setState({\n            connected: false\n          });\n          this.props.history.push('/login');\n          this.props.logout();\n        }\n      });\n    };\n\n    this.isConnected = () => {\n      const activeItem = this.state.activeItem;\n      if (this.state.connected === false) return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: activeItem === '/login' ? classnames(\"activeItemButton\") : null,\n        size: \"md\",\n        id: \"loginButton\",\n        variant: \"outline-primary\",\n        onClick: () => this.handleItemClick(null, \"/login\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(Button, {\n        className: activeItem === '/signup' ? classnames(\"activeItemButton\", \"mr-3\") : \"mr-3\",\n        id: \"signupButton\",\n        variant: \"outline-primary\",\n        onClick: () => this.handleItemClick(null, \"/signup\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Sign up\")));else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(ButtonToolbar, {\n          className: \"mr-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"md\",\n          variant: \"outline-primary\",\n          onClick: this.disconnect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Log out\")));\n      }\n    };\n\n    this.showMenu = () => {\n      const _this$state = this.state,\n            activeItem = _this$state.activeItem,\n            notifNb = _this$state.notifNb,\n            connected = _this$state.connected;\n      const navDropdownTitle = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Profile\"));\n      if (connected === true) return React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        className: activeItem === '/' ? \"activeItem\" : null,\n        onClick: () => this.handleItemClick(null, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"gratipay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Wall\")), React.createElement(NavDropdown, {\n        title: navDropdownTitle,\n        className: activeItem === '/profile' ? \"activeItem\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(NavDropdown.Item, {\n        onClick: () => this.handleItemClick(null, \"/profile\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Edit my profile\"), React.createElement(NavDropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(NavDropdown.Item, {\n        onClick: () => this.handleItemClick(null, \"/changepassword\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Edit my password\"), React.createElement(NavDropdown.Item, {\n        onClick: () => this.handleItemClick(null, \"/changemail\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Edit my mail\")), React.createElement(Nav.Link, {\n        className: activeItem === '/messages' ? \"activeItem\" : null,\n        redirect: \"messages\",\n        onClick: () => this.handleItemClick(null, \"/messages\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"conversation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Messages\")), React.createElement(Nav.Link, {\n        className: activeItem === '/notifications' ? \"activeItem\" : null,\n        id: \"/notifications\",\n        onClick: () => this.handleItemClick(null, \"/notifications\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"bell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"badgecontainernotif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Notifications\"), notifNb > 0 ? React.createElement(\"span\", {\n        class: \"badgenotif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, notifNb) : null)));else return null;\n    };\n\n    this.state = {\n      activeItem: '',\n      redirect: '',\n      connected: false,\n      notifNb: 0\n    };\n    this._mounted = false;\n    cookies.set('myCat', 'Pacman', {\n      path: '/'\n    });\n    console.log(cookies.getAll());\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.isConnected !== this.props.isConnected && this.props.isConnected === true) {\n      API.getNotifNb().then(res => {\n        if (res.status === 200) this._mounted && this.setState({\n          notifNb: res.data.notifNb,\n          connected: true\n        });\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.location.pathname !== prevState.activeItem) return {\n      activeItem: nextProps.location.pathname\n    };\n\n    if (nextProps.isConnected !== prevState.isConnected && nextProps.isConnected === true) {\n      API.getNotifNb().then(res => {\n        if (res.status === 200) return {\n          notifNb: res.data.notifNb,\n          connected: true\n        };\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bootstrap-iso\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      sticky: \"top\",\n      collapseOnSelect: true,\n      expand: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      className: \"ml-3\",\n      id: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"./../../img/MatchApp-Logo.png\",\n      height: \"50\",\n      alt: \"MatchApp Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(Navbar.Toggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, this.showMenu(), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ConnectionNav m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.isConnected()))))));\n  }\n\n}\n\nexport default withRouterAndRef(NavbarBootstrap);","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Menu/BootstrapMenu.js"],"names":["React","ButtonToolbar","Navbar","Button","Nav","ButtonGroup","NavDropdown","Icon","classnames","withRouter","Aux","API","Cookies","cookies","withRouterAndRef","WrappedComponent","InnerComponentWithRef","Component","render","props","forwardRef","rest","ComponentWithRouter","withRef","ref","NavbarBootstrap","constructor","componentDidMount","_mounted","withAuth","then","res","status","setState","connected","getNotifNb","notifNb","data","activeItem","location","pathname","updateNotifNb","handleConnected","bool","handleItemClick","e","redirect","history","push","disconnect","logout","isConnected","state","showMenu","navDropdownTitle","set","path","console","log","getAll","componentDidUpdate","prevProps","prevState","snapshot","getDerivedStateFromProps","nextProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ButtonToolbar, Navbar, Button, Nav, ButtonGroup, NavDropdown} from 'react-bootstrap';\nimport '../../Assets/global-styles/bootstrap-iso.css';\nimport { Icon } from \"semantic-ui-react\";\nimport classnames from 'classnames';\nimport { withRouter } from 'react-router';\nimport Aux from \"../../hoc/Aux\";\nimport API from '../../utils/API';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nconst withRouterAndRef = (WrappedComponent) => {\n    class InnerComponentWithRef extends React.Component {\n        render() {\n            const { forwardRef, ...rest } = this.props;\n            return <WrappedComponent {...rest} ref={forwardRef} />;\n        }\n    }\n    const ComponentWithRouter = withRouter(InnerComponentWithRef, { withRef: true });\n    return React.forwardRef((props, ref) => {\n        return <ComponentWithRouter {...props} forwardRef={ref} />;\n    });\n}\n\n\nclass NavbarBootstrap extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: '',\n            redirect: '',\n            connected: false,\n            notifNb: 0,\n        };\n        this._mounted = false;\n        cookies.set('myCat', 'Pacman', { path: '/' });\n        console.log(cookies.getAll());\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n            await API.withAuth()\n                .then(async(res) => {\n                    if (res.status === 200)\n                        this.setState({connected: true});\n                    await API.getNotifNb()\n                        .then(res => {\n                            if (res.status === 200)\n                                this._mounted && this.setState({notifNb: res.data.notifNb})\n                        });\n                });\n        this._mounted && this.setState({activeItem: this.props.location.pathname});\n    };\n\n    updateNotifNb = () => {\n\n        API.getNotifNb()\n            .then(res => {\n                if (res.status === 200)\n                    this._mounted && this.setState({notifNb: res.data.notifNb})\n            });\n    };\n    handleConnected = (bool) => {this.setState({connected: bool})};\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.isConnected !== this.props.isConnected && this.props.isConnected === true){\n            API.getNotifNb()\n                .then(res => {\n                    if (res.status === 200)\n                        this._mounted && this.setState({notifNb: res.data.notifNb, connected: true})\n                });\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.location.pathname !== prevState.activeItem)\n           return{activeItem: nextProps.location.pathname};\n        if (nextProps.isConnected !== prevState.isConnected && nextProps.isConnected === true){\n            API.getNotifNb()\n                .then(res => {\n                    if (res.status === 200)\n                       return({notifNb: res.data.notifNb, connected: true});\n                });\n        }\n        return null;\n    }\n\n    handleItemClick = (e, redirect) => { this.setState({ activeItem: redirect}, () => this.redirect(redirect)) };\n    redirect = (redirect) => { this.props.history.push(redirect) };\n    disconnect = () => {\n        API.logout()\n            .then(res => {\n                if (res.status === 200) {\n                    this._mounted && this.setState({connected: false});\n                    this.props.history.push('/login');\n                    this.props.logout();\n                }\n            });\n    };\n\n    isConnected = () => {\n        const { activeItem } = this.state;\n        if (this.state.connected === false)\n            return (\n                <Aux>\n                    <ButtonGroup>\n                        <Button\n                            className={activeItem === '/login' ? classnames(\"activeItemButton\") : null}\n                            size=\"md\"\n                            id=\"loginButton\"\n                            variant=\"outline-primary\"\n                            onClick={() => this.handleItemClick(null, \"/login\")}>Log in</Button>\n                        <Button\n                            className={activeItem === '/signup' ? classnames(\"activeItemButton\", \"mr-3\") : \"mr-3\"}\n                            id=\"signupButton\"\n                            variant=\"outline-primary\"\n                            onClick={() => this.handleItemClick(null, \"/signup\")}>Sign up</Button>\n                    </ButtonGroup>\n                </Aux>\n            );\n        else {\n            return (\n                <div>\n                    <ButtonToolbar className='mr-3'>\n                            <Button\n                                size=\"md\"\n                                variant=\"outline-primary\"\n                                onClick={this.disconnect}>Log out</Button>\n                    </ButtonToolbar>\n                </div>\n            )\n        }\n    };\n\n\n\n    showMenu = () => {\n        const { activeItem, notifNb, connected } = this.state;\n        const navDropdownTitle = (\n            <Aux>\n                <Icon size='large' name='user'/>\n                <span className=\"itemMenu\">Profile</span>\n            </Aux>\n        );\n        if (connected === true)\n            return (\n                <Nav className='mr-auto'>\n                    <Nav.Link\n                        className={activeItem === '/' ? \"activeItem\" : null}\n                        onClick={() => this.handleItemClick(null, \"/\")}>\n                        <Icon size='large' name='gratipay' />\n                        <span className=\"itemMenu\">Wall</span>\n                    </Nav.Link>\n                    <NavDropdown\n                        title={navDropdownTitle}\n                        className={activeItem === '/profile' ? \"activeItem\" : null}>\n                        <NavDropdown.Item\n                            onClick={() => this.handleItemClick(null, \"/profile\")}>\n                            Edit my profile\n                        </NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item\n                            onClick={() => this.handleItemClick(null, \"/changepassword\")}>\n                            Edit my password\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => this.handleItemClick(null, \"/changemail\")}>\n                            Edit my mail\n                        </NavDropdown.Item>\n\n                    </NavDropdown>\n                    <Nav.Link\n                        className={activeItem === '/messages' ? \"activeItem\" : null}\n                        redirect='messages'\n                        onClick={() => this.handleItemClick(null, \"/messages\")}>\n                        <Icon size='large' name='conversation' />\n                        <span className=\"itemMenu\">Messages</span>\n                    </Nav.Link>\n                    <Nav.Link\n                        className={activeItem === '/notifications' ? \"activeItem\" : null}\n                        id='/notifications'\n                        onClick={() => this.handleItemClick(null, \"/notifications\")}>\n                        <Icon size='large' name='bell' />\n                        <div className=\"badgecontainernotif\">\n                            <span className=\"itemMenu\">Notifications</span>\n                            {notifNb > 0 ? <span class=\"badgenotif\">{notifNb}</span> : null}\n                        </div>\n                    </Nav.Link>\n                </Nav>\n            )\n        else\n            return null;\n    }\n    render() {\n        return (\n            <div className='bootstrap-iso'>\n                <div className=\"Menu\">\n                    <Navbar sticky=\"top\" collapseOnSelect expand=\"sm\">\n                        <Navbar.Brand\n                            className=\"ml-3\"\n                            id='/'>\n                            <img\n                                src='./../../img/MatchApp-Logo.png'\n                                height=\"50\"\n                                alt=\"MatchApp Logo\"/>\n                        </Navbar.Brand>\n                        <Navbar.Toggle/>\n                        <Navbar.Collapse>\n                            {this.showMenu()}\n                            <Nav>\n                                <div className=\"ConnectionNav m-1\">\n                                    {this.isConnected()}\n                                </div>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouterAndRef(NavbarBootstrap);\n"]},"metadata":{},"sourceType":"module"}