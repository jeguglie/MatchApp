{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition } from 'semantic-ui-react';\nimport API from '../../../utils/API';\n\nconst moment = require('moment');\n\nconst DEFAULT_STATE = {\n  notifications: [{}],\n  dismiss: false\n};\nexport default class NotificationsHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) this._mounted && this.setState({\n          notifications: response.data.notifications\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.handleDismiss = i => {\n      if (this._mounted) {\n        let notifications = this.state.notifications.slice(i, -1);\n        this.setState({\n          dismiss: true\n        });\n        setTimeout(function () {\n          this.setState({\n            notifications: notifications\n          }, () => {\n            this.setState({\n              dismiss: false\n            });\n          });\n        }, 200);\n      }\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'visited your profile  ';\n\n      case 2:\n        return 'send you a message  ';\n\n      case 3:\n        return 'liked you back  ';\n\n      case 4:\n        return 'remove his like  ';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(List, {\n      verticalAlign: 'middle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.notifications.map((obj, i) => React.createElement(List.Item, {\n      key: i,\n      className: \"dismiss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: i => this.handleDismiss(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(Image, {\n      avatar: true,\n      src: obj.img_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, obj.firstname), React.createElement(List.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.renderSwitchType(obj.type), \"on \", moment(obj.date).fromNow()))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","Transition","API","moment","require","DEFAULT_STATE","notifications","dismiss","NotificationsHistory","Component","constructor","props","componentDidMount","_mounted","getNotifications","then","response","status","setState","data","catch","e","console","log","handleDismiss","i","state","slice","setTimeout","componentWillUnmount","renderSwitchType","type","render","map","obj","img_link","firstname","date","fromNow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { List, Image, Button, Transition } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nconst moment = require('moment');\n\nconst DEFAULT_STATE = {\n    notifications: [{}],\n    dismiss: false,\n};\n\nexport default class NotificationsHistory extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200)\n                    this._mounted && this.setState({notifications: response.data.notifications});\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'visited your profile  ';\n            case 2:\n                return 'send you a message  ';\n            case 3:\n                return 'liked you back  ';\n            case 4:\n                return 'remove his like  ';\n        }\n    }\n\n    handleDismiss = (i) => {\n        if (this._mounted) {\n            let notifications = this.state.notifications.slice(i, -1);\n            this.setState({dismiss: true});\n            setTimeout(function(){\n                this.setState({notifications: notifications}, () => {\n                    this.setState({dismiss: false});\n                });\n                }, 200);\n        }\n    };\n\n    render(){\n        return (\n            <div>\n               <List verticalAlign={'middle'}>\n                    {this.state.notifications.map((obj, i) => (\n                        <List.Item key={i} className=\"dismiss\">\n                            <List.Content>\n                                <List.Content floated='right'>\n                                    <Button\n                                        onClick={(i) => this.handleDismiss(i)}>\n                                        Dismiss\n                                    </Button>\n                                </List.Content>\n                                <Image avatar src={obj.img_link}/>\n                                <List.Content as='a'>{obj.firstname}</List.Content>\n                                <List.Description>\n                                    {this.renderSwitchType(obj.type)}\n                                    on {moment(obj.date).fromNow()}\n                                </List.Description>\n                            </List.Content>\n                        </List.Item>\n                    ))}\n                </List>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}