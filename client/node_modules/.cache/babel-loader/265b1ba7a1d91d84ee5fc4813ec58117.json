{"ast":null,"code":"import _defineProperty from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import VALIDATE from'../../../utils/validation';import API from\"../../../utils/API\";import{store}from'react-notifications-component';import{Container,Image,Form,Button,Dimmer,Loader,Divider}from'semantic-ui-react';var DEFAULT_STATE={email:\"\",emailconfirm:\"\",warnings:[],loading:false,w_email:\"\",w_emailconfirm:\"\"};var DEFAULT_ERRORS={w_email:\"\",w_emailconfirm:\"\"};var ChangeMyEmail=/*#__PURE__*/function(_React$Component){_inherits(ChangeMyEmail,_React$Component);function ChangeMyEmail(props){var _this;_classCallCheck(this,ChangeMyEmail);_this=_possibleConstructorReturn(this,_getPrototypeOf(ChangeMyEmail).call(this,props));_this.send=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this$state,email,emailconfirm;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// Clear warnings\n_this.warnings=_objectSpread({},DEFAULT_ERRORS);_this$state=_this.state,email=_this$state.email,emailconfirm=_this$state.emailconfirm;// Check Validity\nif(_this._mounted)_this.setState({loading:true});_context2.next=5;return VALIDATE.sleepLoader(300).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!VALIDATE.validateEmail(email))_this.warnings.w_email=\"Please enter a valid email\";if(!VALIDATE.validateEmail(emailconfirm))_this.warnings.w_emailconfirm=\"Please enter a valid email\";if(email!==emailconfirm)_this.warnings.w_emailconfirm=\"Emails are not the same\";if(VALIDATE.checkWarnings(_this.warnings)){_context.next=8;break;}_context.next=6;return API.changemyemail(email,emailconfirm).then(function(response){if(response.status===200){store.addNotification({title:'Your email was successfully updated',message:\"Please log in\",type:\"success\",insert:\"top\",container:\"top-right\",animationIn:[\"animated\",\"fadeIn\"],animationOut:[\"animated\",\"fadeOut\"],dismiss:{duration:10000,onScreen:true}});_this.props.history.push(\"/login\");}}).catch(function(error){if(error.response.status===400){_this.setState({w_email:error.response.data.warnings});}});case 6:_context.next=9;break;case 8:if(_this._mounted)_this.setState(_objectSpread({},_this.warnings));case 9:case\"end\":return _context.stop();}}},_callee);})));case 5:if(_this._mounted)_this.setState({loading:false});case 6:case\"end\":return _context2.stop();}}},_callee2);}));_this.handleChange=function(event){var _this$state2=_this.state,w_email=_this$state2.w_email,w_emailconfirm=_this$state2.w_emailconfirm;if(event.target.id===\"email\"&&w_email&&w_email.length>0)_this.setState({w_email:\"\"});if(event.target.id===\"emailconfirm\"&&w_emailconfirm&&w_emailconfirm.length>0)_this.setState({w_emailconfirm:\"\"});_this.setState(_defineProperty({},event.target.id,event.target.value));};_this.state=_objectSpread({},DEFAULT_STATE);_this.warnings=_objectSpread({},DEFAULT_ERRORS);_this._mounted=false;return _this;}_createClass(ChangeMyEmail,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"componentDidMount\",value:function componentDidMount(){this._mounted=true;}},{key:\"render\",value:function render(){var _this$state3=this.state,loading=_this$state3.loading,w_email=_this$state3.w_email,w_emailconfirm=_this$state3.w_emailconfirm;return React.createElement(Container,{className:\"loginModal\"},React.createElement(Dimmer,{active:loading},React.createElement(Loader,{size:\"big\"},\"Request...\")),React.createElement(Divider,{hidden:true}),React.createElement(Image,{className:\"img-fluid\",src:\"/img/MatchApp-Logo.png\",alt:\"Responsive image\",size:\"medium\",centered:true}),React.createElement(\"div\",{className:\"shape\"}),React.createElement(Divider,{hidden:true}),React.createElement(\"h1\",{className:\"loginh1\"},\"Change my email\"),React.createElement(Form,{className:\"loginForm\"},React.createElement(Form.Field,{className:\"inputPassword\"},React.createElement(Form.Input,{error:w_email&&w_email.length>0?{content:w_email,pointing:'below'}:null,icon:\"mail\",iconPosition:\"left\",id:\"email\",onChange:this.handleChange,type:\"email\",size:\"huge\",placeholder:\"New Email\"})),React.createElement(Form.Field,{className:\"inputPassword\"},React.createElement(Form.Input,{error:w_emailconfirm&&w_emailconfirm.length>0?{content:w_emailconfirm,pointing:'below'}:null,icon:\"mail\",iconPosition:\"left\",id:\"emailconfirm\",onChange:this.handleChange,type:\"email\",size:\"huge\",placeholder:\"Confirm Email\"})),React.createElement(Divider,{hidden:true}),React.createElement(Button,{className:\"loginButton\",loading:loading,size:\"huge\",type:\"submit\",onClick:this.send},\"Change my email\")),React.createElement(Divider,{hidden:true}),React.createElement(Divider,{hidden:true}));}}]);return ChangeMyEmail;}(React.Component);export default ChangeMyEmail;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/client/src/components/EditProfil/ChangeMyMail/ChangeMyMail.js"],"names":["React","VALIDATE","API","store","Container","Image","Form","Button","Dimmer","Loader","Divider","DEFAULT_STATE","email","emailconfirm","warnings","loading","w_email","w_emailconfirm","DEFAULT_ERRORS","ChangeMyEmail","props","send","state","_mounted","setState","sleepLoader","then","validateEmail","checkWarnings","changemyemail","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","history","push","catch","error","data","handleChange","event","target","id","length","value","content","pointing","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport VALIDATE from '../../../utils/validation';\nimport API from \"../../../utils/API\";\nimport { store } from 'react-notifications-component';\nimport {Container, Image, Form, Button, Dimmer, Loader, Divider} from 'semantic-ui-react';\n\nconst DEFAULT_STATE = {\n    email: \"\",\n    emailconfirm: \"\",\n    warnings: [],\n    loading: false,\n    w_email: \"\",\n    w_emailconfirm: \"\",\n};\n\nconst DEFAULT_ERRORS = {\n    w_email: \"\",\n    w_emailconfirm: \"\",\n};\n\nclass ChangeMyEmail extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.warnings = {...DEFAULT_ERRORS};\n        this._mounted = false;\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    send = async() => {\n        // Clear warnings\n        this.warnings = {...DEFAULT_ERRORS};\n        const {email, emailconfirm} = this.state;\n        // Check Validity\n        if (this._mounted)\n            this.setState({loading: true});\n        await VALIDATE.sleepLoader(300)\n            .then(async () => {\n                if (!VALIDATE.validateEmail(email))\n                    this.warnings.w_email = \"Please enter a valid email\";\n                if (!VALIDATE.validateEmail(emailconfirm))\n                    this.warnings.w_emailconfirm = \"Please enter a valid email\";\n                if  (email !== emailconfirm)\n                    this.warnings.w_emailconfirm = \"Emails are not the same\";\n                if (!VALIDATE.checkWarnings(this.warnings)) {\n                    await API.changemyemail(email, emailconfirm)\n                        .then(response => {\n                            if (response.status === 200) {\n                                store.addNotification({\n                                    title: 'Your email was successfully updated',\n                                    message: \"Please log in\",\n                                    type: \"success\",\n                                    insert: \"top\",\n                                    container: \"top-right\",\n                                    animationIn: [\"animated\", \"fadeIn\"],\n                                    animationOut: [\"animated\", \"fadeOut\"],\n                                    dismiss: {\n                                        duration: 10000,\n                                        onScreen: true\n                                    }\n                                });\n                                this.props.history.push(\"/login\");\n                            }\n                        })\n                        .catch(error => {\n                            if (error.response.status === 400){\n                                this.setState({w_email: error.response.data.warnings});\n                            }\n                        })\n                } else if (this._mounted)\n                    this.setState({...this.warnings});\n            });\n        if (this._mounted)\n            this.setState({loading: false});\n    };\n\n    handleChange = (event) => {\n        const {w_email, w_emailconfirm} = this.state;\n        if (event.target.id === \"email\" && w_email && w_email.length > 0)\n            this.setState({w_email: \"\"});\n        if (event.target.id === \"emailconfirm\" && w_emailconfirm && w_emailconfirm.length > 0)\n            this.setState({w_emailconfirm: \"\"});\n        this.setState({[event.target.id]: event.target.value});\n    }\n\n\n    render() {\n        const {loading, w_email, w_emailconfirm} = this.state;\n        return (\n            <Container className=\"loginModal\">\n                <Dimmer active={loading}>\n                    <Loader size='big'>Request...</Loader>\n                </Dimmer>\n                <Divider hidden />\n                <Image className=\"img-fluid\"\n                       src=\"/img/MatchApp-Logo.png\"\n                       alt=\"Responsive image\"\n                       size=\"medium\"\n                       centered />\n                <div className=\"shape\"></div>\n                <Divider hidden />\n                <h1 className=\"loginh1\">Change my email</h1>\n                <Form className=\"loginForm\">\n                    <Form.Field className=\"inputPassword\">\n                        <Form.Input\n                            error={w_email && w_email.length > 0 ? {content: w_email, pointing: 'below'} : null}\n                            icon='mail'\n                            iconPosition='left'\n                            id=\"email\"\n                            onChange={this.handleChange}\n                            type=\"email\"\n                            size=\"huge\"\n                            placeholder=\"New Email\"/>\n                    </Form.Field>\n                    <Form.Field className=\"inputPassword\">\n                        <Form.Input\n                            error={w_emailconfirm && w_emailconfirm.length > 0 ? {content: w_emailconfirm, pointing: 'below'} : null}\n                            icon='mail'\n                            iconPosition='left'\n                            id=\"emailconfirm\"\n                            onChange={this.handleChange}\n                            type=\"email\"\n                            size=\"huge\"\n                            placeholder=\"Confirm Email\"/>\n                    </Form.Field>\n                    <Divider hidden />\n                    <Button className=\"loginButton\"\n                            loading={loading} size='huge'\n                            type=\"submit\"\n                            onClick={this.send}>\n                        Change my email\n                    </Button>\n                </Form>\n                <Divider hidden />\n                <Divider hidden />\n            </Container>\n        );\n    }\n}\n\nexport default ChangeMyEmail;"]},"metadata":{},"sourceType":"module"}