{"ast":null,"code":"import _classCallCheck from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Redirect}from'react-router-dom';import API from'../utils/API';import Cookies from'universal-cookie';var cookies=new Cookies();function withAuth(ComponentToProtect){return(/*#__PURE__*/function(_React$Component){_inherits(_class,_React$Component);function _class(props){var _this;_classCallCheck(this,_class);_this=_possibleConstructorReturn(this,_getPrototypeOf(_class).call(this,props));_this.state={loading:true,redirect:false};_this._mounted=false;return _this;}_createClass(_class,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this._mounted=true;if(cookies.get('token'))API.withAuth().then(function(res){if(res.status===200){_this2._mounted&&_this2.setState({loading:false});}else throw new Error(res.error);}).catch(function(){_this2._mounted&&_this2.setState({loading:false,redirect:true});});else this._mounted&&this.setState({loading:false,redirect:true});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"render\",value:function render(){var _this$state=this.state,loading=_this$state.loading,redirect=_this$state.redirect;if(loading)return null;if(redirect)return React.createElement(Redirect,{to:\"/login\"});return React.createElement(ComponentToProtect,this.props);}}]);return _class;}(React.Component));}export default withAuth;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/client/src/utils/withAuth.js"],"names":["React","Redirect","API","Cookies","cookies","withAuth","ComponentToProtect","props","state","loading","redirect","_mounted","get","then","res","status","setState","Error","error","catch","Component"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAID,CAAAA,OAAJ,EAAhB,CAEA,QAASE,CAAAA,QAAT,CAAkBC,kBAAlB,CAAsC,CAClC,kFACI,gBAAYC,KAAZ,CAAmB,wCACf,wEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,OAAO,CAAE,IADA,CAETC,QAAQ,CAAE,KAFD,CAAb,CAIA,MAAKC,QAAL,CAAgB,KAAhB,CANe,aAOlB,CARL,gFASwB,iBAChB,KAAKA,QAAL,CAAgB,IAAhB,CACA,GAAIP,OAAO,CAACQ,GAAR,CAAY,OAAZ,CAAJ,CACIV,GAAG,CAACG,QAAJ,GACKQ,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAI,CAACJ,QAAL,EAAiB,MAAI,CAACK,QAAL,CAAc,CAACP,OAAO,CAAE,KAAV,CAAd,CAAjB,CACH,CAFD,IAII,MAAM,IAAIQ,CAAAA,KAAJ,CAAUH,GAAG,CAACI,KAAd,CAAN,CACP,CAPL,EAQKC,KARL,CAQW,UAAM,CAAC,MAAI,CAACR,QAAL,EAAiB,MAAI,CAACK,QAAL,CAAc,CAACP,OAAO,CAAE,KAAV,CAAiBC,QAAQ,CAAE,IAA3B,CAAd,CAAjB,CAAiE,CARnF,EADJ,IAWI,MAAKC,QAAL,EAAiB,KAAKK,QAAL,CAAc,CAACP,OAAO,CAAE,KAAV,CAAiBC,QAAQ,CAAE,IAA3B,CAAd,CAAjB,CACP,CAvBL,mEAyB2B,CACnB,KAAKC,QAAL,CAAgB,KAAhB,CACH,CA3BL,uCA6Bc,iBACwB,KAAKH,KAD7B,CACEC,OADF,aACEA,OADF,CACWC,QADX,aACWA,QADX,CAEN,GAAID,OAAJ,CACI,MAAO,KAAP,CACJ,GAAIC,QAAJ,CACI,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACJ,MAAO,qBAAC,kBAAD,CAAwB,KAAKH,KAA7B,CAAP,CACH,CApCL,oBAAqBP,KAAK,CAACoB,SAA3B,GAsCH,CAED,cAAef,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../utils/API';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nfunction withAuth(ComponentToProtect) {\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                loading: true,\n                redirect: false,\n            };\n            this._mounted = false;\n        }\n        componentDidMount() {\n            this._mounted = true;\n            if (cookies.get('token'))\n                API.withAuth()\n                    .then(res => {\n                        if (res.status === 200) {\n                            this._mounted && this.setState({loading: false});\n                        }\n                        else\n                            throw new Error(res.error);\n                    })\n                    .catch(() => {this._mounted && this.setState({loading: false, redirect: true})});\n            else\n                this._mounted && this.setState({loading: false, redirect: true});\n        }\n\n        componentWillUnmount() {\n            this._mounted = false;\n        }\n\n        render () {\n            const { loading, redirect } = this.state;\n            if (loading)\n                return null;\n            if (redirect)\n                return <Redirect to=\"/login\" />;\n            return <ComponentToProtect {...this.props} />\n        }\n    }\n}\n\nexport default withAuth;\n"]},"metadata":{},"sourceType":"module"}