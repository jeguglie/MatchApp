{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition, Grid, Divider } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nimport ModalUser from \"../../ModalUser/ModalUser\";\nimport openSocket from 'socket.io-client';\n\nconst moment = require('moment');\n\nconst socket = openSocket('http://localhost:3002');\nexport default class NotificationsHistory extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) {\n          this._mounted && this.setState({\n            notifications: response.data.notifications\n          }, () => console.log(this.state.notifications));\n        }\n      }).catch(e => console.log(e));\n    };\n\n    this.handleDismiss = i => {\n      if (this._mounted) {\n        let notifications = this.state.notifications.splice(i, 1);\n        this.setState({\n          notifications: notifications\n        });\n      }\n    };\n\n    this.userLike = async userIdFocus => {\n      await API.userLike(userIdFocus).then(response => {\n        if (response.status === 200 && typeof response.data.liked != 'undefined') {\n          this._mounted && this.setState({\n            liked: response.data.liked\n          }); // Socket\n\n          if (response.data.liked === true) socket.emit(\"like\", userIdFocus);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleClose = () => {\n      this._mounted && this.setState({\n        userIdFocus: null,\n        showModal: false,\n        liked: false\n      });\n    };\n\n    this.clickedUser = async userIdFocus => {\n      // Send notification\n      socket.emit(\"wall:visit\", userIdFocus);\n      API.wallvisit(userIdFocus);\n      await API.checkUserLike(userIdFocus).then(response => {\n        if (response.status === 200 && typeof response.data.liked != 'undefined') this._mounted && this.setState({\n          liked: response.data.liked\n        });\n      }).catch(e => console.log(e));\n      await API.getUserIdProfile(userIdFocus).then(res => {\n        if (res.status === 200) {\n          this._mounted && this.setState({\n            user: res.data.user,\n            userIdFocus: userIdFocus,\n            showModal: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      notifications: [],\n      user: {\n        lastname: '',\n        firstname: '',\n        interests: [],\n        gender: [],\n        interested: [],\n        imgs: [],\n        country: '',\n        bio: '',\n        age: '',\n        likes: ''\n      },\n      liked: false,\n      showModal: false,\n      interests: []\n    };\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'Visited your profile  ';\n\n      case 2:\n        return 'Send you a message  ';\n\n      case 3:\n        return 'Liked you back  ';\n\n      case 4:\n        return 'Remove his like  ';\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          liked = _this$state.liked,\n          showModal = _this$state.showModal,\n          interests = _this$state.interests;\n    return React.createElement(Grid, {\n      columns: 1,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ModalUser, {\n      showModal: showModal,\n      user: user,\n      liked: liked,\n      userLike: this.userLike,\n      handleClose: this.handleClose,\n      userInterests: interests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      textAlign: 'left',\n      mobile: 16,\n      tablet: 8,\n      computer: 8,\n      largeScreen: 8,\n      widescreen: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NotificationsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Notifications history\"))), React.createElement(\"div\", {\n      className: \"NotificationsHistoric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Transition.Group, {\n      as: List,\n      duration: 200,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, !this.state.notifications.length ? React.createElement(\"div\", {\n      className: 'nothingtoshow',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Nothing to show\")) : null, this.state.notifications.map((obj, i) => React.createElement(List.Item, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.handleDismiss(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(Image, {\n      avatar: true,\n      src: obj.img_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      as: \"a\",\n      className: \"NotifFirstname\",\n      onClick: () => this.clickedUser(obj.user_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, ' ', \" \", obj.firstname), React.createElement(List.Description, {\n      className: \"NotifDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.renderSwitchType(obj.type), \"on \", moment(obj.date).fromNow())), i < this.state.notifications.length - 1 ? React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }) : null)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","Transition","Grid","Divider","API","ModalUser","openSocket","moment","require","socket","NotificationsHistory","Component","constructor","componentDidMount","_mounted","getNotifications","then","response","status","setState","notifications","data","console","log","state","catch","e","handleDismiss","i","splice","userLike","userIdFocus","liked","emit","err","handleClose","showModal","clickedUser","wallvisit","checkUserLike","getUserIdProfile","res","user","lastname","firstname","interests","gender","interested","imgs","country","bio","age","likes","componentWillUnmount","renderSwitchType","type","render","length","map","obj","img_link","user_id","date","fromNow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {List, Image, Button, Transition, Grid, Divider} from 'semantic-ui-react';\nimport API from '../../../utils/API';\nimport ModalUser from \"../../ModalUser/ModalUser\";\nimport openSocket from 'socket.io-client';\nconst moment = require('moment');\nconst  socket = openSocket('http://localhost:3002');\n\nexport default class NotificationsHistory extends React.Component{\n\n    constructor(){\n        super();\n        this.state = {\n            notifications: [],\n            user: {\n                lastname: '',\n                firstname: '',\n                interests: [],\n                gender: [],\n                interested: [],\n                imgs: [],\n                country: '',\n                bio: '',\n                age: '',\n                likes: ''\n            },\n            liked: false,\n            showModal: false,\n            interests: [],\n        };\n        this._mounted = false;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200) {\n                    this._mounted && this.setState({notifications: response.data.notifications}, () => console.log(this.state.notifications));\n                }\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'Visited your profile  ';\n            case 2:\n                return 'Send you a message  ';\n            case 3:\n                return 'Liked you back  ';\n            case 4:\n                return 'Remove his like  ';\n        }\n    };\n\n    handleDismiss = (i) => {\n        if (this._mounted) {\n            let notifications = this.state.notifications.splice(i, 1);\n            this.setState({notifications: notifications});\n        }\n    };\n\n    userLike = async(userIdFocus) => {\n        await API.userLike(userIdFocus)\n            .then(response => {\n                if (response.status === 200 && typeof response.data.liked != 'undefined') {\n                    this._mounted && this.setState({liked: response.data.liked});\n                    // Socket\n                    if (response.data.liked === true)\n                        socket.emit(\"like\", userIdFocus);\n                }\n            })\n            .catch(err => console.log(err));\n    };\n    handleClose = () => {\n        this._mounted && this.setState({ userIdFocus: null, showModal: false, liked: false})\n    };\n\n    clickedUser = async(userIdFocus) => {\n        // Send notification\n        socket.emit(\"wall:visit\", userIdFocus);\n        API.wallvisit(userIdFocus);\n        await API.checkUserLike(userIdFocus)\n            .then(response => {\n                if (response.status === 200 && typeof response.data.liked != 'undefined')\n                    this._mounted && this.setState({liked: response.data.liked});\n            })\n            .catch(e => console.log(e));\n        await API.getUserIdProfile(userIdFocus)\n            .then(res => {\n                if (res.status === 200){\n                    this._mounted && this.setState({\n                        user: res.data.user,\n                        userIdFocus: userIdFocus,\n                        showModal: true\n                    });\n                }\n            });\n    };\n    render(){\n        const { user, liked, showModal, interests } = this.state;\n        return (\n            <Grid columns={1} textAlign={'center'}>\n                <ModalUser showModal={showModal} user={user} liked={liked} userLike={this.userLike} handleClose={this.handleClose} userInterests={interests} />\n                <Grid.Column textAlign={'left'} mobile={16} tablet={8} computer={8} largeScreen={8} widescreen={8}>\n                    <div className='NotificationsTitle'>\n                        <Grid.Row >\n                            <h1>Notifications history</h1>\n                        </Grid.Row>\n                    </div>\n                    <div className={\"NotificationsHistoric\"}>\n                        <Grid.Row>\n                            <Transition.Group\n                                as={List}\n                                duration={200}\n                                verticalAlign='middle'\n                            >\n                                {!this.state.notifications.length ?\n                                    <div className={'nothingtoshow'}>\n                                        <p>Nothing to show</p>\n                                    </div> :\n                                    null\n                                }\n                                {this.state.notifications.map((obj, i) => (\n                                    <List.Item key={i}>\n                                        <List.Content>\n                                            <List.Content floated='right'>\n                                                <Button\n                                                    onClick={() => this.handleDismiss(i)}>\n                                                    Dismiss\n                                                </Button>\n                                            </List.Content>\n                                            <Image avatar src={obj.img_link}/>\n                                            <List.Content\n                                                as='a'\n                                                className={\"NotifFirstname\"}\n                                                onClick={() => this.clickedUser(obj.user_id)}\n                                            >\n                                                {' '} {obj.firstname}</List.Content>\n                                            <List.Description className={\"NotifDesc\"}>\n                                                {this.renderSwitchType(obj.type)}\n                                                on {moment(obj.date).fromNow()}\n                                            </List.Description>\n                                        </List.Content>\n                                        {i < this.state.notifications.length  - 1? <Divider /> : null}\n                                    </List.Item>\n                                ))}\n                            </Transition.Group>\n                        </Grid.Row>\n                    </div>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}