{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUserActions.js\";\nimport React from 'react';\nimport { Modal, Button } from 'semantic-ui-react';\nimport API from './../../utils/API';\nimport { store } from 'react-notifications-component';\n\nclass ModalUserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.close = () => {\n      this._mounted && this.setState({\n        open: false\n      });\n    };\n\n    this.doReport = async () => {\n      await API.reportuser(this.props.userID).then(response => {\n        if (response.status === 200) {\n          store.addNotification({\n            title: 'Report',\n            message: 'User has been reported',\n            type: \"warning\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 10000,\n              onScreen: true\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.props.closeReport;\n    };\n\n    this.doFake = async () => {\n      await API.reportuser(this.props.userID).then(response => {\n        if (response.status === 200) {\n          store.addNotification({\n            title: 'Report as fake',\n            message: 'User has been reported as a fake',\n            type: \"warning\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 10000,\n              onScreen: true\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.props.closeFake;\n    };\n\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"/* REPORT USER */\", React.createElement(Modal, {\n      size: \"tiny\",\n      open: this.props.openReport,\n      onClose: this.props.closeReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Report user\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Are you sure you want to report this user ?\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      onClick: this.props.closeReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"No\"), React.createElement(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: \"Yes\",\n      onClick: this.doReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), \"/* REPORT FAKE USER */\", React.createElement(Modal, {\n      size: \"tiny\",\n      open: this.props.openFake,\n      onClose: this.props.closeFake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Report user as a fake\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Are you sure you want to report this user as a fake?\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      onClick: this.props.closeFake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"No\"), React.createElement(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: \"Yes\",\n      onClick: this.doFake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ModalUserActions;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUserActions.js"],"names":["React","Modal","Button","API","store","ModalUserActions","Component","constructor","props","close","_mounted","setState","open","doReport","reportuser","userID","then","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","catch","err","console","log","closeReport","doFake","closeFake","componentDidMount","render","openReport","openFake"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Button } from 'semantic-ui-react';\nimport API from './../../utils/API';\nimport { store } from 'react-notifications-component';\n\nclass ModalUserActions extends React.Component{\n\n    constructor(props){\n        super(props);\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n    close = () => {this._mounted && this.setState({open: false})};\n    doReport = async() => {\n        await API.reportuser(this.props.userID)\n            .then(response => {\n                if (response.status === 200){\n                    store.addNotification({\n                        title: 'Report',\n                        message: 'User has been reported',\n                        type: \"warning\",\n                        insert: \"top\",\n                        container: \"top-right\",\n                        animationIn: [\"animated\", \"fadeIn\"],\n                        animationOut: [\"animated\", \"fadeOut\"],\n                        dismiss: {\n                            duration: 10000,\n                            onScreen: true\n                        }\n                    });\n                }\n            })\n            .catch (err => { console.log(err)});\n        this.props.closeReport;\n    };\n    doFake = async() => {\n        await API.reportuser(this.props.userID)\n            .then(response => {\n                if (response.status === 200){\n                    store.addNotification({\n                        title: 'Report as fake',\n                        message: 'User has been reported as a fake',\n                        type: \"warning\",\n                        insert: \"top\",\n                        container: \"top-right\",\n                        animationIn: [\"animated\", \"fadeIn\"],\n                        animationOut: [\"animated\", \"fadeOut\"],\n                        dismiss: {\n                            duration: 10000,\n                            onScreen: true\n                        }\n                    });\n                }\n            })\n            .catch (err => { console.log(err)});\n        this.props.closeFake;\n    };\n    render(){\n        return (\n            <div>\n                /* REPORT USER */\n                <Modal size='tiny' open={this.props.openReport} onClose={this.props.closeReport}>\n                    <Modal.Header>Report user</Modal.Header>\n                    <Modal.Content>\n                        <p>Are you sure you want to report this user ?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button\n                            negative\n                            onClick={this.props.closeReport}>\n                            No\n                        </Button>\n                        <Button\n                            positive\n                            icon='checkmark'\n                            labelPosition='right'\n                            content='Yes'\n                            onClick={this.doReport}\n                        />\n                    </Modal.Actions>\n                </Modal>\n                /* REPORT FAKE USER */\n                <Modal size='tiny' open={this.props.openFake} onClose={this.props.closeFake}>\n                    <Modal.Header>Report user as a fake</Modal.Header>\n                    <Modal.Content>\n                        <p>Are you sure you want to report this user as a fake?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button\n                            negative\n                            onClick={this.props.closeFake}>\n                            No\n                        </Button>\n                        <Button\n                            positive\n                            icon='checkmark'\n                            labelPosition='right'\n                            content='Yes'\n                            onClick={this.doFake}\n                        />\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ModalUserActions;"]},"metadata":{},"sourceType":"module"}