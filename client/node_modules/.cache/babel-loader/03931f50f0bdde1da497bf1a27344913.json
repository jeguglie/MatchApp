{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/containers/Admin/Admin.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition, Grid, Divider } from 'semantic-ui-react';\nimport API from '../../utils/API';\n\nconst moment = require('moment');\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.admin().then(res => {\n        if (res.status === 200) this._mounted && this.setState({\n          users: res.data.users\n        });\n      });\n    };\n\n    this.handleDismiss = async (i, user_id) => {\n      if (this._mounted) {\n        this.state.users.splice(i, 1);\n        this._mounted && this.setState({\n          users: this.state.users\n        }, async () => {\n          await API.deletenotif(notif_id);\n          await this.props.updateNotifNb();\n        });\n      }\n    };\n\n    this.state = {\n      users: []\n    };\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    return React.createElement(Grid, {\n      columns: 1,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      textAlign: 'left',\n      mobile: 16,\n      tablet: 8,\n      computer: 8,\n      largeScreen: 8,\n      widescreen: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NotificationsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Reported users\"))), React.createElement(\"div\", {\n      className: \"NotificationsHistoric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Transition.Group, {\n      as: List,\n      duration: 200,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, users.length < 1 ? React.createElement(\"div\", {\n      className: 'nothingtoshow',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Nothing to show\")) : null, users.map((obj, i) => React.createElement(List.Item, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.handleDismiss(i, obj.user_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(List.Content, {\n      as: \"a\",\n      className: \"NotifFirstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, ' ', \" \", obj.user_id)), i < users.length - 1 ? React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : null)))))));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/containers/Admin/Admin.js"],"names":["React","List","Image","Button","Transition","Grid","Divider","API","moment","require","Admin","Component","constructor","props","componentDidMount","_mounted","admin","then","res","status","setState","users","data","handleDismiss","i","user_id","state","splice","deletenotif","notif_id","updateNotifNb","componentWillUnmount","render","length","map","obj"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {List, Image, Button, Transition, Grid, Divider} from 'semantic-ui-react';\nimport API from '../../utils/API';\nconst moment = require('moment');\n\n\nclass Admin extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n           users: []\n        };\n        this._mounted = false;\n\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.admin()\n            .then(res => {\n                if (res.status === 200)\n                    this._mounted && this.setState({users: res.data.users})\n            });\n    };\n\n\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n\n    handleDismiss = async(i, user_id) => {\n        if (this._mounted) {\n            this.state.users.splice(i, 1);\n            this._mounted && this.setState({users: this.state.users}, async() => {\n                await API.deletenotif(notif_id);\n                await this.props.updateNotifNb();\n            });\n        }\n    };\n\n\n    render(){\n        const { users} = this.state;\n        return (\n            <Grid columns={1} textAlign={'center'}>\n                <Grid.Column textAlign={'left'} mobile={16} tablet={8} computer={8} largeScreen={8} widescreen={8}>\n                    <div className='NotificationsTitle'>\n                        <Grid.Row>\n                            <h1>Reported users</h1>\n                        </Grid.Row>\n                    </div>\n                    <div className={\"NotificationsHistoric\"}>\n                        <Grid.Row>\n                            <Transition.Group\n                                as={List}\n                                duration={200}\n                                verticalAlign='middle'\n                            >\n                                {users.length < 1 ?\n                                    <div className={'nothingtoshow'}>\n                                        <p>Nothing to show</p>\n                                    </div> :\n                                    null\n                                }\n                                {users.map((obj, i) => (\n                                    <List.Item key={i}>\n                                        <List.Content>\n                                            <List.Content floated='right'>\n                                                <Button\n                                                    onClick={() => this.handleDismiss(i, obj.user_id)}>\n                                                    Dismiss\n                                                </Button>\n                                            </List.Content>\n                                            <List.Content\n                                                as='a'\n                                                className={\"NotifFirstname\"}\n                                            >\n                                                {' '} {obj.user_id}</List.Content>\n                                        </List.Content>\n                                        {i < users.length  - 1? <Divider /> : null}\n                                    </List.Item>\n                                ))}\n                            </Transition.Group>\n                        </Grid.Row>\n                    </div>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}