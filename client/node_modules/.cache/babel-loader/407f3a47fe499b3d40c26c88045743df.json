{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js\";\nimport { Divider, Grid, Image, Label, Modal, Segment } from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\n\nclass ModalUser extends React.Component {\n  render() {\n    return React.createElement(Modal, {\n      dimmer: \"blurring\",\n      size: 'tiny',\n      open: this.props.showModal,\n      onClose: this.handleClose,\n      className: \"ModalCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"CardHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CardHeaderTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \" \", user.firstname, \" \", user.lastname, \", \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, user.age))), React.createElement(Modal.Content, {\n      className: \"ModalProfilView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      className: \"RowImages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"medium\",\n      src: user.imgs[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      className: \"RowImages\",\n      centered: true,\n      columns: user.imgs.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, user.imgs.map((img, i) => {\n      if (i > 0) return React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Image, {\n        rounded: true,\n        size: \"small\",\n        src: user.imgs[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    }))), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"BioSegment\",\n      textAlign: \"center\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, user.bio)), React.createElement(Segment, {\n      className: \"CardUserActions\",\n      basic: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"huge\",\n      id: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Like\"), React.createElement(Button.Or, {\n      text: \"or\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"huge\",\n      id: \"hide\",\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Hide\"))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Label.Group, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), user.interests.map((data, i) => {\n      return React.createElement(Label, {\n        className: \"interestLabel\",\n        id: i,\n        key: i,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"#\"), data);\n    })))));\n  }\n\n}\n\nexport default ModalUser;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js"],"names":["Divider","Grid","Image","Label","Modal","Segment","Button","React","ModalUser","Component","render","props","showModal","handleClose","user","firstname","lastname","age","imgs","length","map","img","i","bio","interests","data"],"mappings":"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","sourcesContent":["import {Divider, Grid, Image, Label, Modal, Segment} from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\n\nclass ModalUser extends React.Component {\n    render() {\n        return (\n            <Modal\n                dimmer={\"blurring\"}\n                size={'tiny'}\n                open={this.props.showModal}\n                onClose={this.handleClose}\n                className=\"ModalCard\">\n                <Modal.Header className=\"CardHeader\"><h1\n                    className=\"CardHeaderTile\"> {user.firstname} {user.lastname}, <strong>{user.age}</strong></h1>\n                </Modal.Header>\n                <Modal.Content className=\"ModalProfilView\">\n                    <Modal.Header></Modal.Header>\n                    <Divider hidden/>\n                    <Grid centered columns={2}>\n                        <Grid.Column className=\"RowImages\">\n                            <Image rounded size='medium' src={user.imgs[0]}/>\n                        </Grid.Column>\n                        <Grid.Row className=\"RowImages\" centered columns={user.imgs.length}>\n                            {user.imgs.map((img, i) => {\n                                if (i > 0)\n                                    return (\n                                        <Grid.Column>\n                                            <Image rounded size='small' src={user.imgs[i]}/>\n                                        </Grid.Column>\n                                    )\n                            })}\n                        </Grid.Row>\n                    </Grid>\n                    <Modal.Description>\n                        <Segment className=\"BioSegment\" textAlign=\"center\" inverted>\n                            <p>{user.bio}</p>\n                        </Segment>\n                        <Segment className=\"CardUserActions\" basic textAlign=\"center\">\n                            <Button.Group>\n                                <Button size='huge' id=\"like\">Like</Button>\n                                <Button.Or text='or'/>\n                                <Button size='huge' id=\"hide\" positive>Hide</Button>\n                            </Button.Group>\n                        </Segment>\n                        <Divider hidden/>\n                        <Label.Group size='small'>\n                            <p/>\n                            {user.interests.map((data, i) => {\n                                return (\n                                    <Label className=\"interestLabel\"\n                                           id={i}\n                                           key={i}\n                                           data={data}>\n                                        <strong>#</strong>{data}</Label>\n                                )\n                            })}\n                        </Label.Group>\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nexport default ModalUser;"]},"metadata":{},"sourceType":"module"}