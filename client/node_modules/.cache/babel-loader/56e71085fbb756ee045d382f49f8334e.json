{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jeguglie/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Container,Image,Divider}from'semantic-ui-react';import Autocomplete from'react-google-autocomplete';import API from\"../../../utils/API\";import{store}from\"react-notifications-component\";var ChangeLocation=/*#__PURE__*/function(_React$Component){_inherits(ChangeLocation,_React$Component);function ChangeLocation(props){var _this;_classCallCheck(this,ChangeLocation);_this=_possibleConstructorReturn(this,_getPrototypeOf(ChangeLocation).call(this,props));_this.setLocation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(lat,lng){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return API.updategeolocate(lat,lng).then(function(response){if(response.status===200){store.addNotification({title:'Your position was successfully updated',message:\"Start to match !\",type:\"success\",insert:\"top\",container:\"top-right\",animationIn:[\"animated\",\"fadeIn\"],animationOut:[\"animated\",\"fadeOut\"],dismiss:{duration:10000,onScreen:true}});}}).catch(function(e){return console.log(e);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();_this.notifChooseLocation=function(){store.addNotification({message:\"Please select a place in dropdown\",type:\"warning\",insert:\"top\",container:\"top-right\",animationIn:[\"animated\",\"fadeIn\"],animationOut:[\"animated\",\"fadeOut\"],dismiss:{duration:10000,onScreen:true}});};_this._mounted=false;return _this;}_createClass(ChangeLocation,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"componentDidMount\",value:function componentDidMount(){this._mounted=true;}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(Container,{className:\"loginModal\"},React.createElement(Divider,{hidden:true}),React.createElement(Image,{className:\"img-fluid\",src:\"/img/MatchApp-Logo.png\",alt:\"Responsive image\",size:\"medium\",centered:true}),React.createElement(\"div\",{className:\"shape\"}),React.createElement(Divider,{hidden:true}),React.createElement(\"h1\",{className:\"loginh1\"},\"Set custom location\"),React.createElement(\"div\",{className:'inputSearchGoogle'},React.createElement(Autocomplete,{style:{width:'90%'},onPlaceSelected:function onPlaceSelected(place){if(place.geometry)_this2.setLocation(place.geometry.location.lat(),place.geometry.location.lng());else _this2.notifChooseLocation();}})),React.createElement(Divider,{hidden:true}),React.createElement(Divider,{hidden:true}),React.createElement(Divider,{hidden:true}));}}]);return ChangeLocation;}(React.Component);export default ChangeLocation;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/client/src/components/EditProfil/ChangeLocation/ChangeLocation.js"],"names":["React","Container","Image","Divider","Autocomplete","API","store","ChangeLocation","props","setLocation","lat","lng","updategeolocate","then","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","catch","e","console","log","notifChooseLocation","_mounted","width","place","geometry","location","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Container, Image, Divider} from 'semantic-ui-react';\nimport Autocomplete from 'react-google-autocomplete';\nimport API from \"../../../utils/API\";\nimport {store} from \"react-notifications-component\";\n\nclass ChangeLocation extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this._mounted = false;\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    setLocation = async(lat, lng) => {\n        await API.updategeolocate(lat, lng)\n            .then(response => {\n                if (response.status === 200) {\n                    store.addNotification({\n                        title: 'Your position was successfully updated',\n                        message: \"Start to match !\",\n                        type: \"success\",\n                        insert: \"top\",\n                        container: \"top-right\",\n                        animationIn: [\"animated\", \"fadeIn\"],\n                        animationOut: [\"animated\", \"fadeOut\"],\n                        dismiss: {\n                            duration: 10000,\n                            onScreen: true\n                        }\n                    });\n                }\n            })\n            .catch(e => console.log(e));\n    };\n\n    notifChooseLocation = () => {\n        store.addNotification({\n            message: \"Please select a place in dropdown\",\n            type: \"warning\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 10000,\n                onScreen: true\n            }\n        });\n    };\n\n    render() {\n        return (\n            <Container className=\"loginModal\">\n                <Divider hidden />\n                <Image className=\"img-fluid\"\n                       src=\"/img/MatchApp-Logo.png\"\n                       alt=\"Responsive image\"\n                       size=\"medium\"\n                       centered />\n                <div className=\"shape\"></div>\n                <Divider hidden />\n                <h1 className=\"loginh1\">Set custom location</h1>\n                <div className={'inputSearchGoogle'}>\n                    <Autocomplete\n                        style={{width: '90%'}}\n                        onPlaceSelected={(place) => {\n                            if (place.geometry)\n                                this.setLocation(place.geometry.location.lat(), place.geometry.location.lng());\n                            else\n                                this.notifChooseLocation();\n                        }}\n                    />\n                </div>\n                <Divider hidden />\n                <Divider hidden />\n                <Divider hidden />\n            </Container>\n        );\n    }\n}\n\nexport default ChangeLocation;"]},"metadata":{},"sourceType":"module"}