{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js\";\nimport { Divider, Grid, Image, Label, Modal, Segment, Icon } from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\nimport classnames from 'classnames';\nimport ModalUserActions from \"./ModalUserActions\";\nimport API from \"../../utils/API\";\nconst DEFAULT_STATE = {\n  openHide: false,\n  openReport: false,\n  openFake: false,\n  liked: false,\n  interests: '',\n  showModal: false,\n  user: {\n    lastname: '',\n    firstname: '',\n    interests: [],\n    gender: [],\n    interested: [],\n    imgs: [],\n    country: '',\n    bio: '',\n    age: '',\n    likes: ''\n  }\n};\n\nclass ModalUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      API.getUserInterests().then(response => {\n        if (response.status === 200) this._mounted && this.setState({\n          interests: response.data.interests\n        });\n      });\n    };\n\n    this.loadUser = userIdFocus => {\n      let liked = this.state.liked;\n      API.checkUserLike(userIdFocus).then(response => {\n        console.log(2);\n\n        if (response.status === 200 && typeof response.data.liked != 'undefined') {\n          liked = response.data.liked;\n          API.getUserIdProfile(userIdFocus).then(async res => {\n            console.log(3);\n            if (res.status === 200) this._mounted && this.setState({\n              user: res.data.user,\n              showModal: true,\n              liked: liked\n            });\n          });\n        }\n      });\n      this.props.handleCardUserComplete && this.props.handleCardUserComplete();\n    };\n\n    this.userLike = async userIdFocus => {\n      await API.userLike(userIdFocus).then(response => {\n        if (response.status === 200 && typeof response.data.liked != 'undefined') {\n          this._mounted && this.setState({\n            liked: response.data.liked\n          });\n          if (response.data.liked) this.props.s_like(userIdFocus);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleClose = () => {\n      this._mounted && this.setState({\n        user: _objectSpread({}, DEFAULT_STATE),\n        liked: false,\n        showModal: false\n      });\n    };\n\n    this.closeReport = () => {\n      this._mounted && this.setState({\n        openReport: false\n      });\n    };\n\n    this.openReport = () => {\n      this._mounted && this.setState({\n        openReport: true\n      });\n    };\n\n    this.closeFake = () => {\n      this._mounted && this.setState({\n        openFake: false\n      });\n    };\n\n    this.openFake = () => {\n      this._mounted && this.setState({\n        openFake: true\n      });\n    };\n\n    this.closeHide = () => {\n      this._mounted && this.setState({\n        openHide: false\n      });\n    };\n\n    this.openHide = () => {\n      this._mounted && this.setState({\n        openHide: true\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted && this.setState(_objectSpread({}, DEFAULT_STATE));\n    this._mounted = false;\n  } // Ref\n\n\n  render() {\n    const userid = this.props.userid;\n    const _this$state = this.state,\n          user = _this$state.user,\n          liked = _this$state.liked,\n          showModal = _this$state.showModal,\n          openReport = _this$state.openReport,\n          openFake = _this$state.openFake,\n          openHide = _this$state.openHide,\n          interests = _this$state.interests;\n    return showModal && typeof user.imgs !== 'undefined' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ModalUserActions, {\n      openReport: openReport,\n      closeReport: this.closeReport,\n      openFake: openFake,\n      closeFake: this.closeFake,\n      openHide: openHide,\n      closeHide: this.closeHide,\n      userID: userid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      dimmer: \"blurring\",\n      size: 'tiny',\n      open: showModal,\n      onClose: this.handleClose,\n      className: \"ModalCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"CardHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CardHeaderTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" \", user.firstname, \" \", user.lastname, \", \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, user.age))), React.createElement(Modal.Content, {\n      className: \"ModalProfilView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      className: \"RowImages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"medium\",\n      src: user.imgs[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      className: \"RowImages\",\n      centered: true,\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, user.imgs.map((img, i) => {\n      if (i > 0) return React.createElement(Grid.Column, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Image, {\n        rounded: true,\n        size: \"small\",\n        src: user.imgs[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n      return null;\n    }))), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"BioSegment\",\n      textAlign: \"center\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, user.bio)), React.createElement(Segment, {\n      basic: true,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      id: \"like\",\n      onClick: () => this.userLike(user.user_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), liked ? 'Unlike' : 'Like'), React.createElement(Button, {\n      size: \"small\",\n      id: \"hide\",\n      onClick: this.openHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \"Hide\"), React.createElement(Button, {\n      size: \"small\",\n      id: \"fake\",\n      onClick: this.openFake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user secret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), \"Fake\"), React.createElement(Button, {\n      size: \"small\",\n      id: \"blockuser\",\n      onClick: this.openReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \"Signal\")), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Label.Group, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), user.interests.map((data, i) => {\n      return React.createElement(Label, {\n        className: interests.find(interest => interest === data) ? classnames(\"interestLabel\", \"sameInterest\") : \"interestLabel\",\n        id: i,\n        key: i,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"#\"), data);\n    })))))) : null;\n  }\n\n}\n\nexport default ModalUser;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/ModalUser/ModalUser.js"],"names":["Divider","Grid","Image","Label","Modal","Segment","Icon","Button","React","classnames","ModalUserActions","API","DEFAULT_STATE","openHide","openReport","openFake","liked","interests","showModal","user","lastname","firstname","gender","interested","imgs","country","bio","age","likes","ModalUser","Component","constructor","props","componentDidMount","_mounted","getUserInterests","then","response","status","setState","data","loadUser","userIdFocus","state","checkUserLike","console","log","getUserIdProfile","res","handleCardUserComplete","userLike","s_like","catch","err","handleClose","closeReport","closeFake","closeHide","componentWillUnmount","render","userid","map","img","i","user_id","find","interest"],"mappings":"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","sourcesContent":["import {Divider, Grid, Image, Label, Modal, Segment, Icon} from \"semantic-ui-react\";\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport React from \"react\";\nimport classnames from 'classnames';\nimport ModalUserActions from \"./ModalUserActions\";\nimport API from \"../../utils/API\";\n\nconst DEFAULT_STATE = {\n    openHide: false,\n    openReport: false,\n    openFake: false,\n    liked: false,\n    interests: '',\n    showModal: false,\n    user: {\n        lastname: '',\n        firstname: '',\n        interests: [],\n        gender: [],\n        interested: [],\n        imgs: [],\n        country: '',\n        bio: '',\n        age: '',\n        likes: ''\n    },\n};\n\nclass ModalUser extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        API.getUserInterests()\n            .then(response => {\n                if (response.status === 200)\n                    this._mounted && this.setState({interests: response.data.interests})\n            });\n    };\n    componentWillUnmount() {\n        this._mounted && this.setState({...DEFAULT_STATE});\n        this._mounted = false;\n    }\n\n    // Ref\n    loadUser = (userIdFocus) => {\n        let liked = this.state.liked;\n        API.checkUserLike(userIdFocus)\n            .then(response => {\n                console.log(2);\n                if (response.status === 200 && typeof response.data.liked != 'undefined') {\n                    liked = response.data.liked;\n                    API.getUserIdProfile(userIdFocus)\n                        .then(async (res) => {\n                            console.log(3);\n                            if (res.status === 200)\n                                this._mounted && this.setState({user: res.data.user, showModal: true, liked: liked});\n                        });\n                }\n            });\n\n        this.props.handleCardUserComplete && this.props.handleCardUserComplete();\n    };\n\n    // Like\n    userLike = async(userIdFocus) => {\n        await API.userLike(userIdFocus)\n            .then(response => {\n                if (response.status === 200 && typeof response.data.liked != 'undefined') {\n                    this._mounted && this.setState({liked: response.data.liked});\n                    if (response.data.liked)\n                      this.props.s_like(userIdFocus);\n                }\n            })\n            .catch(err => console.log(err));\n    };\n    // Modal\n    handleClose = () => {this._mounted && this.setState({ user: {...DEFAULT_STATE}, liked: false, showModal: false});};\n    closeReport = () => { this._mounted && this.setState({openReport: false})};\n    openReport = () => {this._mounted && this.setState({openReport: true})};\n    closeFake = () => { this._mounted && this.setState({openFake: false})};\n    openFake = () => {this._mounted && this.setState({openFake: true})};\n    closeHide = () => { this._mounted && this.setState({openHide: false})};\n    openHide = () => {this._mounted && this.setState({openHide: true})};\n    render() {\n        const { userid} = this.props;\n        const {user, liked, showModal, openReport, openFake, openHide, interests } = this.state;\n        return (\n            showModal && typeof user.imgs !== 'undefined' ?\n            <div>\n                <ModalUserActions\n                    openReport={openReport}\n                    closeReport={this.closeReport}\n                    openFake={openFake}\n                    closeFake={this.closeFake}\n                    openHide={openHide}\n                    closeHide={this.closeHide}\n                    userID={userid}\n                />\n                <Modal\n                    dimmer={\"blurring\"}\n                    size={'tiny'}\n                    open={showModal}\n                    onClose={this.handleClose}\n                    className=\"ModalCard\">\n                    <Modal.Header className=\"CardHeader\"><h1\n                        className=\"CardHeaderTile\"> {user.firstname} {user.lastname}, <strong>{user.age}</strong></h1>\n                    </Modal.Header>\n                    <Modal.Content className=\"ModalProfilView\">\n                        <Modal.Header></Modal.Header>\n                        <Divider hidden/>\n                        <Grid centered columns={2}>\n                            <Grid.Column className=\"RowImages\">\n                                <Image rounded size='medium' src={user.imgs[0]}/>\n                            </Grid.Column>\n                            <Grid.Row className=\"RowImages\" centered columns={4}>\n                                {user.imgs.map((img, i) => {\n                                    if (i > 0)\n                                        return (\n                                            <Grid.Column key={i}>\n                                                <Image rounded size='small' src={user.imgs[i]}/>\n                                            </Grid.Column>\n                                        );\n                                    return null;\n                                })}\n                            </Grid.Row>\n                        </Grid>\n                        <Modal.Description>\n                            <Segment className=\"BioSegment\" textAlign=\"center\" inverted>\n                                <p>{user.bio}</p>\n                            </Segment>\n                            <Segment basic textAlign={'center'}>\n                                <Button size='small' id='like' onClick={() => this.userLike(user.user_id)}>\n                                    <Icon name='heart'/>\n                                    {liked ? 'Unlike' : 'Like'}\n                                </Button>\n                                <Button size='small' id='hide' onClick={this.openHide}>\n                                    <Icon name='user x'/>\n                                    Hide\n                                </Button>\n                                <Button size='small' id='fake' onClick={this.openFake}>\n                                    <Icon name='user secret'/>\n                                    Fake\n                                </Button>\n                                <Button size='small' id='blockuser' onClick={this.openReport}>\n                                    <Icon name='warning'/>\n                                    Signal\n                                </Button>\n                            </Segment>\n                            <Divider hidden/>\n                            <Label.Group size='small'>\n                                <p/>\n                                {user.interests.map((data, i) => {\n                                    return (\n                                        <Label\n                                            className={interests.find(interest => interest === data) ? classnames(\"interestLabel\",\"sameInterest\") : \"interestLabel\"}\n                                            id={i}\n                                            key={i}\n                                            data={data}>\n                                            <strong>#</strong>{data}</Label>\n                                    )\n                                })}\n                            </Label.Group>\n                        </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </div> : null\n        )\n    }\n}\n\nexport default ModalUser;"]},"metadata":{},"sourceType":"module"}