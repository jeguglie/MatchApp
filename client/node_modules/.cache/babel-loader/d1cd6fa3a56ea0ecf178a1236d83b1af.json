{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/containers/Wall/SearchTags/SearchTags.js\";\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst getOptions = () => _.times(3, () => {\n  const name = faker.name.findName();\n  return {\n    key: name,\n    text: name,\n    value: _.snakeCase(name)\n  };\n});\n\nclass SearchTags extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFetching: false,\n      multiple: true,\n      search: true,\n      searchQuery: null,\n      value: [],\n      options: getOptions()\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.handleSearchChange = (e, {\n      searchQuery\n    }) => this.setState({\n      searchQuery\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          multiple = _this$state.multiple,\n          options = _this$state.options,\n          isFetching = _this$state.isFetching,\n          search = _this$state.search,\n          value = _this$state.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      fluid: true,\n      selection: true,\n      multiple: multiple,\n      search: search,\n      options: options,\n      value: value,\n      placeholder: \"Add Users\",\n      onChange: this.handleChange,\n      onSearchChange: this.handleSearchChange,\n      disabled: isFetching,\n      loading: isFetching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchTags;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/containers/Wall/SearchTags/SearchTags.js"],"names":["_","faker","React","Component","Dropdown","getOptions","times","name","findName","key","text","value","snakeCase","SearchTags","state","isFetching","multiple","search","searchQuery","options","handleChange","e","setState","handleSearchChange","render"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,UAAU,GAAG,MACfL,CAAC,CAACM,KAAF,CAAQ,CAAR,EAAW,MAAM;AACb,QAAMC,IAAI,GAAGN,KAAK,CAACM,IAAN,CAAWC,QAAX,EAAb;AACA,SAAO;AAAEC,IAAAA,GAAG,EAAEF,IAAP;AAAaG,IAAAA,IAAI,EAAEH,IAAnB;AAAyBI,IAAAA,KAAK,EAAEX,CAAC,CAACY,SAAF,CAAYL,IAAZ;AAAhC,GAAP;AACH,CAHD,CADJ;;AAMA,MAAMM,UAAN,SAAyBV,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BW,KAD+B,GACvB;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,QAAQ,EAAE,IAFN;AAGJC,MAAAA,MAAM,EAAE,IAHJ;AAIJC,MAAAA,WAAW,EAAE,IAJT;AAKJP,MAAAA,KAAK,EAAE,EALH;AAMJQ,MAAAA,OAAO,EAAEd,UAAU;AANf,KADuB;;AAAA,SAU/Be,YAV+B,GAUhB,CAACC,CAAD,EAAI;AAAEV,MAAAA;AAAF,KAAJ,KAAkB,KAAKW,QAAL,CAAc;AAAEX,MAAAA;AAAF,KAAd,CAVF;;AAAA,SAW/BY,kBAX+B,GAWV,CAACF,CAAD,EAAI;AAAEH,MAAAA;AAAF,KAAJ,KAAwB,KAAKI,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd,CAXd;AAAA;;AAa/BM,EAAAA,MAAM,GAAG;AAAA,wBACoD,KAAKV,KADzD;AAAA,UACGE,QADH,eACGA,QADH;AAAA,UACaG,OADb,eACaA,OADb;AAAA,UACsBJ,UADtB,eACsBA,UADtB;AAAA,UACkCE,MADlC,eACkCA,MADlC;AAAA,UAC0CN,KAD1C,eAC0CA,KAD1C;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,QAAQ,EAAEK,QAHd;AAII,MAAA,MAAM,EAAEC,MAJZ;AAKI,MAAA,OAAO,EAAEE,OALb;AAMI,MAAA,KAAK,EAAER,KANX;AAOI,MAAA,WAAW,EAAC,WAPhB;AAQI,MAAA,QAAQ,EAAE,KAAKS,YARnB;AASI,MAAA,cAAc,EAAE,KAAKG,kBATzB;AAUI,MAAA,QAAQ,EAAER,UAVd;AAWI,MAAA,OAAO,EAAEA,UAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAiBH;;AAjC8B;;AAoCnC,eAAeF,UAAf","sourcesContent":["import _ from 'lodash'\nimport faker from 'faker'\nimport React, { Component } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nconst getOptions = () =>\n    _.times(3, () => {\n        const name = faker.name.findName()\n        return { key: name, text: name, value: _.snakeCase(name) }\n    });\n\nclass SearchTags extends Component {\n    state = {\n        isFetching: false,\n        multiple: true,\n        search: true,\n        searchQuery: null,\n        value: [],\n        options: getOptions(),\n    };\n\n    handleChange = (e, { value }) => this.setState({ value })\n    handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery })\n\n    render() {\n        const { multiple, options, isFetching, search, value } = this.state\n\n        return (\n            <div>\n                <Dropdown\n                    fluid\n                    selection\n                    multiple={multiple}\n                    search={search}\n                    options={options}\n                    value={value}\n                    placeholder='Add Users'\n                    onChange={this.handleChange}\n                    onSearchChange={this.handleSearchChange}\n                    disabled={isFetching}\n                    loading={isFetching}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SearchTags;\n"]},"metadata":{},"sourceType":"module"}