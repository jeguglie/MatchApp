{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/containers/Wall/Wall.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport UserMiniCard from \"../../components/UserMiniCard/UserMiniCard\";\nimport API from './../../utils/API';\nimport InputRange from 'react-input-range';\nimport Interests from \"../../components/EditProfil/AddInterests/Interests/Interests\";\nimport { Header, Image, Modal, Dimmer, Loader, Grid, Rail, Segment, Divider, Checkbox, Portal, Label, Icon } from \"semantic-ui-react\";\nimport 'react-input-range/lib/css/index.css';\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport _ from \"lodash\";\nconst DEFAULT_STATE = {\n  user: {\n    lastname: '',\n    firstname: '',\n    interests: [],\n    gender: [],\n    interested: [],\n    imgs: [],\n    country: '',\n    bio: '',\n    age: '',\n    likes: ''\n  },\n  showModal: false,\n  userIdFocus: 0,\n  clear: false,\n  users: [],\n  warnings: [],\n  loading: false,\n  interests: [],\n  distanceRange: 250,\n  ageRange: {\n    min: 19,\n    max: 27\n  },\n  popularityRange: {\n    min: 0,\n    max: 50\n  }\n};\n\nclass Wall extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, DEFAULT_STATE);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        loading: true\n      }); // Check if user can view users\n\n      await API.checkUserView().then(res => {\n        this.canView = res.status === 200;\n      }).catch(() => {\n        this.props.history.push('/');\n      });\n      if (!this.canView) this.props.history.push('/');\n      await this.searchMatch();\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleChange = async (value, id) => {\n      if (id === \"distanceRange\") this.setState({\n        distanceRange: value\n      });else if (id === \"ageRange\") this.setState({\n        ageRange: value\n      });else if (id === \"popularityRange\") this.setState({\n        popularityRange: value\n      });\n    };\n\n    this.searchMatch = async () => {\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            distanceRange = _this$state.distanceRange,\n            ageRange = _this$state.ageRange,\n            popularityRange = _this$state.popularityRange;\n      let users = []; // Get users\n\n      await API.getUsers(distanceRange, ageRange, popularityRange).then(response => {\n        if (response.status === 200) users = response.data.users;\n      }).catch(error => {\n        if (typeof error.response !== 'undefined') this.setState({\n          warnings: error.response.data.warnings\n        });\n      });\n      this.setState({\n        users: users\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.clickedUser = async userIdFocus => {\n      await API.getUserIdProfile(userIdFocus).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            user: res.data.user,\n            userIdFocus: userIdFocus,\n            showModal: true\n          });\n          console.log(res.data.user);\n        }\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        userIdFocus: null,\n        showModal: false\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          user = _this$state2.user,\n          showModal = _this$state2.showModal,\n          users = _this$state2.users,\n          loading = _this$state2.loading,\n          distanceRange = _this$state2.distanceRange,\n          ageRange = _this$state2.ageRange,\n          popularityRange = _this$state2.popularityRange,\n          interests = _this$state2.interests;\n    return React.createElement(\"div\", {\n      className: \"WallContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      dimmer: \"blurring\",\n      size: 'tiny',\n      open: showModal,\n      onClose: this.handleClose,\n      className: \"CardModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"CardHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CardHeaderTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" \", user.firstname, \" \", user.lastname, \", \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, user.age))), React.createElement(Modal.Content, {\n      className: \"ModalProfilView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      className: \"RowImages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"medium\",\n      src: user.imgs[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      className: \"RowImages\",\n      centered: true,\n      columns: user.imgs.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, user.imgs.map((img, i) => {\n      if (i > 0) return React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Image, {\n        rounded: true,\n        size: \"small\",\n        src: user.imgs[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }));\n    }))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"BioSegment\",\n      textAlign: \"center\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, user.bio)), React.createElement(Label.Group, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), user.interests.map((data, i) => {\n      return React.createElement(Label, {\n        className: \"interestLabel\",\n        id: i,\n        key: i,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"#\"), data);\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })))), React.createElement(Icon, {\n      className: \"ButtonLike\",\n      icon: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Dimmer, {\n      active: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"massive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      centered: true,\n      stackable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floadted: \"left\",\n      textAlign: \"left\",\n      tablet: 4,\n      largeScreen: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      inverted: true,\n      className: \"SegmentFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Distance\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" 0 - \", distanceRange, \" km\")))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      draggableTrack: true,\n      maxValue: 5000,\n      minValue: 0,\n      onChange: value => this.handleChange(value, \"distanceRange\"),\n      formatLabel: value => \"\".concat(value, \" km\"),\n      value: distanceRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Age\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" \", ageRange.min, \" - \", ageRange.max)))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      draggableTrack: true,\n      maxValue: 99,\n      minValue: 18,\n      onChange: value => this.handleChange(value, \"ageRange\"),\n      value: ageRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Popularity\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \" \", popularityRange.min, \" - \", popularityRange.max)))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      draggableTrack: true,\n      maxValue: 500,\n      minValue: 0,\n      onChange: value => this.handleChange(value, \"popularityRange\"),\n      value: popularityRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"IncludeInterestsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: \"Include my interests\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Interests, {\n      interests: interests,\n      deleteInterest: this.deleteInterest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.searchMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Search\"))))), React.createElement(Grid.Column, {\n      mobile: 16,\n      tablet: 8,\n      computer: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      stackable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(UserMiniCard, {\n      users: users,\n      clickedUser: this.clickedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Wall;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/containers/Wall/Wall.js"],"names":["React","UserMiniCard","API","InputRange","Interests","Header","Image","Modal","Dimmer","Loader","Grid","Rail","Segment","Divider","Checkbox","Portal","Label","Icon","Button","_","DEFAULT_STATE","user","lastname","firstname","interests","gender","interested","imgs","country","bio","age","likes","showModal","userIdFocus","clear","users","warnings","loading","distanceRange","ageRange","min","max","popularityRange","Wall","Component","state","componentDidMount","setState","checkUserView","then","res","canView","status","catch","props","history","push","searchMatch","handleChange","value","id","getUsers","response","data","error","clickedUser","getUserIdProfile","console","log","handleClose","render","length","map","img","i","deleteInterest"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UserMiniCard from \"../../components/UserMiniCard/UserMiniCard\";\nimport API from './../../utils/API';\nimport InputRange from 'react-input-range';\nimport Interests from \"../../components/EditProfil/AddInterests/Interests/Interests\";\nimport {\n    Header,\n    Image,\n    Modal,\n    Dimmer,\n    Loader,\n    Grid,\n    Rail,\n    Segment,\n    Divider,\n    Checkbox,\n    Portal,\n    Label,\n    Icon\n} from \"semantic-ui-react\";\nimport 'react-input-range/lib/css/index.css';\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport _ from \"lodash\";\n\nconst DEFAULT_STATE = {\n    user: {\n        lastname: '',\n        firstname: '',\n        interests: [],\n        gender: [],\n        interested: [],\n        imgs: [],\n        country: '',\n        bio: '',\n        age: '',\n        likes: ''\n    },\n    showModal: false,\n    userIdFocus: 0,\n    clear: false,\n    users: [],\n    warnings: [],\n    loading: false,\n    interests: [],\n    distanceRange: 250,\n    ageRange: {\n        min: 19,\n        max: 27,\n    },\n    popularityRange: {\n        min: 0,\n        max: 50,\n    }\n};\nclass Wall extends React.Component {\n\n    state = {...DEFAULT_STATE};\n    componentDidMount = async() => {\n\n        this.setState({loading: true});\n        // Check if user can view users\n        await API.checkUserView()\n            .then(res => { this.canView = res.status === 200 })\n            .catch(() => { this.props.history.push('/') });\n        if(!this.canView)\n            this.props.history.push('/')\n        await this.searchMatch();\n        this.setState({loading: false});\n    };\n\n    // Filter\n    handleChange = async(value, id) => {\n        if (id === \"distanceRange\")\n            this.setState({distanceRange: value});\n        else if (id === \"ageRange\")\n            this.setState({ageRange: value});\n        else if (id === \"popularityRange\")\n            this.setState({popularityRange: value});\n    };\n\n    // Search button handle\n    searchMatch = async() => {\n        this.setState({loading: true});\n        const {distanceRange, ageRange, popularityRange } = this.state;\n        let users = [];\n        // Get users\n        await API.getUsers(distanceRange, ageRange, popularityRange)\n            .then(response => {\n                if (response.status === 200)\n                    users = response.data.users;\n            })\n            .catch(error => {\n                if(typeof error.response !== 'undefined')\n                    this.setState({warnings : error.response.data.warnings})\n            });\n        this.setState({users: users});\n        this.setState({loading: false});\n\n    };\n\n    // Cliked user handle\n    clickedUser = async(userIdFocus) => {\n        await API.getUserIdProfile(userIdFocus)\n            .then(res => {\n                if (res.status === 200){\n                    this.setState({\n                        user: res.data.user,\n                        userIdFocus: userIdFocus,\n                        showModal: true\n                    });\n                    console.log(res.data.user);\n                }\n            })\n    };\n    handleClose = () => {\n        this.setState({ userIdFocus: null, showModal: false})\n    }\n    render() {\n        const { user, showModal, users, loading, distanceRange, ageRange, popularityRange, interests } = this.state;\n\n            return (\n                <div className=\"WallContainer\">\n                    <Modal\n                        dimmer={\"blurring\"}\n                        size={'tiny'}\n                        open={showModal}\n                        onClose={this.handleClose}\n                        className=\"CardModal\">\n                        <Modal.Header className=\"CardHeader\"><h1 className=\"CardHeaderTile\"> {user.firstname} {user.lastname}, <strong>{user.age}</strong></h1></Modal.Header>\n                        <Modal.Content  className=\"ModalProfilView\" >\n                            <Modal.Header></Modal.Header>\n                            <Divider hidden/>\n                                <Grid centered columns={2}>\n                                    <Grid.Column className=\"RowImages\">\n                                        <Image rounded size='medium' src={user.imgs[0]} />\n                                    </Grid.Column>\n                                    <Grid.Row className=\"RowImages\" centered columns={user.imgs.length}>\n                                        {user.imgs.map((img, i) => {\n                                            if (i > 0)\n                                                return (\n                                                    <Grid.Column>\n                                                        <Image rounded size='small' src={user.imgs[i]}/>\n                                                    </Grid.Column>\n                                                )\n                                        })}\n                                    </Grid.Row>\n                                </Grid>\n                            <Divider hidden />\n                            <Modal.Description>\n                                <Segment  className=\"BioSegment\" textAlign=\"center\" inverted>\n                                    <p>{user.bio}</p>\n                                </Segment>\n                                <Label.Group size='small'>\n                                    <p />\n                                    {user.interests.map((data, i) => {\n                                        return (\n                                            <Label className=\"interestLabel\"\n                                                   id={i}\n                                                   key={i}\n                                                   data={data}>\n                                                <strong>#</strong>{data}</Label>\n                                        )\n                                    })}\n                                    <Divider hidden />\n                                </Label.Group>\n                            </Modal.Description>\n                        </Modal.Content>\n                            <Icon\n                                className=\"ButtonLike\"\n                                icon='heart'\n                            />\n                    </Modal>\n                    <Dimmer active={loading}>\n                        <Loader size='massive'/>\n                    </Dimmer>\n                    <Grid centered stackable>\n                        <Grid.Column floadted='left' textAlign='left' tablet={4} largeScreen={1} >\n                            <Segment inverted className=\"SegmentFilter\">\n                            <div className=\"filterContainer\">\n                                <Grid.Row>\n                                    <Grid.Row>\n                                        <div className=\"DistanceRangeContainer\">\n                                            <h1 className=\"DistanceRangeTitle\"><strong>Distance</strong> <span className=\"RangeTitle\"> 0 - {distanceRange} km</span></h1>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Row>\n                                        <InputRange\n                                            draggableTrack\n                                            maxValue={5000}\n                                            minValue={0}\n                                            onChange={value => this.handleChange(value, \"distanceRange\")}\n                                            formatLabel={value => `${value} km`}\n                                            value={distanceRange} />\n                                    </Grid.Row>\n                                </Grid.Row>\n                                <Divider hidden/>\n                                <Grid.Row>\n                                    <Grid.Row>\n                                        <div className=\"DistanceRangeContainer\">\n                                            <h1 className=\"DistanceRangeTitle\"><strong>Age</strong> <span className=\"RangeTitle\"> {ageRange.min} - {ageRange.max}</span></h1>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Row>\n                                        <InputRange\n                                            draggableTrack\n                                            maxValue={99}\n                                            minValue={18}\n                                            onChange={value => this.handleChange(value, \"ageRange\")}\n                                            value={ageRange} />\n                                    </Grid.Row>\n                                </Grid.Row>\n                                <Divider hidden/>\n                                <Grid.Row>\n                                    <Grid.Row>\n                                        <div className=\"DistanceRangeContainer\">\n                                            <h1 className=\"DistanceRangeTitle\"><strong>Popularity</strong> <span className=\"RangeTitle\"> {popularityRange.min} - {popularityRange.max}</span></h1>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Row>\n                                        <InputRange\n                                            draggableTrack\n                                            maxValue={500}\n                                            minValue={0}\n                                            onChange={value => this.handleChange(value, \"popularityRange\")}\n                                            value={popularityRange} />\n                                    </Grid.Row>\n                                </Grid.Row>\n                                <Divider hidden/>\n                                <Grid.Row>\n                                    <Segment className=\"IncludeInterestsTitle\">\n                                        <Checkbox label='Include my interests' defaultChecked />\n                                    </Segment>\n                                </Grid.Row>\n                                <Grid.Row centered>\n                                    <Interests\n                                        interests={interests}\n                                        deleteInterest={this.deleteInterest} />\n                                </Grid.Row>\n                                <Divider hidden/>\n                                <Grid.Row>\n                                    <Button\n                                        onClick={this.searchMatch}>\n                                        Search\n                                    </Button>\n                                </Grid.Row>\n                            </div>\n                        </Segment>\n                    </Grid.Column>\n                            <Grid.Column mobile={16} tablet={8} computer={8}>\n                                <Segment inverted>\n                                </Segment>\n                                <Divider hidden/>\n                                        <Grid centered stackable  >\n                                            <UserMiniCard\n                                                users={users}\n                                                clickedUser={this.clickedUser}\n                                            />\n                                        </Grid>\n                            </Grid.Column>\n                    </Grid>\n                </div>\n            );\n    }\n}\n\n\nexport default Wall;"]},"metadata":{},"sourceType":"module"}