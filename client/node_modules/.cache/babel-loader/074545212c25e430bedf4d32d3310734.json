{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/EditProfil/ChangeLocation/ChangeLocation.js\";\nimport React from \"react\";\nimport { Container, Image, Divider } from 'semantic-ui-react';\nimport Autocomplete from 'react-google-autocomplete';\nimport API from \"../../../utils/API\";\nimport { store } from \"react-notifications-component\";\n\nclass ChangeLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setLocation = async (lat, lng) => {\n      await API.updategeolocate(lat, lng).then(response => {\n        if (response.status === 200) {\n          store.addNotification({\n            title: 'Your position was successfully updated',\n            message: \"Start to match !\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 10000,\n              onScreen: true\n            }\n          });\n        }\n      }).catch(e => console.log(e));\n    };\n\n    this.notifChooseLocation = () => {\n      store.addNotification({\n        message: \"Please select a place in dropdown\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 10000,\n          onScreen: true\n        }\n      });\n    };\n\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  render() {\n    return React.createElement(Container, {\n      className: \"loginModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Image, {\n      className: \"img-fluid\",\n      src: \"/img/MatchApp-Logo.png\",\n      alt: \"Responsive image\",\n      size: \"medium\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"loginh1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Set custom location\"), React.createElement(\"div\", {\n      className: 'inputSearchGoogle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      style: {\n        width: '90%'\n      },\n      onPlaceSelected: place => {\n        if (place.geometry) this.setLocation(place.geometry.location.lat(), place.geometry.location.lng());else this.notifChooseLocation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChangeLocation;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/EditProfil/ChangeLocation/ChangeLocation.js"],"names":["React","Container","Image","Divider","Autocomplete","API","store","ChangeLocation","Component","constructor","props","setLocation","lat","lng","updategeolocate","then","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","catch","e","console","log","notifChooseLocation","_mounted","componentWillUnmount","componentDidMount","render","width","place","geometry","location"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Container, Image, Divider} from 'semantic-ui-react';\nimport Autocomplete from 'react-google-autocomplete';\nimport API from \"../../../utils/API\";\nimport {store} from \"react-notifications-component\";\n\nclass ChangeLocation extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this._mounted = false;\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    setLocation = async(lat, lng) => {\n        await API.updategeolocate(lat, lng)\n            .then(response => {\n                if (response.status === 200) {\n                    store.addNotification({\n                        title: 'Your position was successfully updated',\n                        message: \"Start to match !\",\n                        type: \"success\",\n                        insert: \"top\",\n                        container: \"top-right\",\n                        animationIn: [\"animated\", \"fadeIn\"],\n                        animationOut: [\"animated\", \"fadeOut\"],\n                        dismiss: {\n                            duration: 10000,\n                            onScreen: true\n                        }\n                    });\n                }\n            })\n            .catch(e => console.log(e));\n    };\n\n    notifChooseLocation = () => {\n        store.addNotification({\n            message: \"Please select a place in dropdown\",\n            type: \"warning\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 10000,\n                onScreen: true\n            }\n        });\n    };\n\n    render() {\n        return (\n            <Container className=\"loginModal\">\n                <Divider hidden />\n                <Image className=\"img-fluid\"\n                       src=\"/img/MatchApp-Logo.png\"\n                       alt=\"Responsive image\"\n                       size=\"medium\"\n                       centered />\n                <div className=\"shape\"></div>\n                <Divider hidden />\n                <h1 className=\"loginh1\">Set custom location</h1>\n                <div className={'inputSearchGoogle'}>\n                    <Autocomplete\n                        style={{width: '90%'}}\n                        onPlaceSelected={(place) => {\n                            if (place.geometry)\n                                this.setLocation(place.geometry.location.lat(), place.geometry.location.lng());\n                            else\n                                this.notifChooseLocation();\n                        }}\n                    />\n                </div>\n                <Divider hidden />\n                <Divider hidden />\n                <Divider hidden />\n            </Container>\n        );\n    }\n}\n\nexport default ChangeLocation;"]},"metadata":{},"sourceType":"module"}