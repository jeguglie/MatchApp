{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/Signup/Signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport API from \"../../utils/API\";\nimport { Segment, Button, Container, Form, Image, Input, Grid, Divider, Rail } from \"semantic-ui-react\";\nimport Warnings from \"../Warnings/Warnings\";\nimport DividerC from \"./../../components/Divider/Divider\";\nconst DEFAULT_STATE = {\n  lastName: \"\",\n  firstName: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  cpassword: \"\"\n};\nconst DEFAULT_ERRORS = {\n  w_lastname: '',\n  w_firstname: '',\n  w_email: '',\n  w_username: '',\n  w_password: '',\n  w_cpassword: ''\n};\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.send = () => {\n      const warnings = [];\n      this.setState({\n        warnings: []\n      });\n      const _this$state = this.state,\n            lastName = _this$state.lastName,\n            firstName = _this$state.firstName,\n            email = _this$state.email,\n            username = _this$state.username,\n            password = _this$state.password,\n            cpassword = _this$state.cpassword;\n\n      if (!email || email.length === 0 || !password || password.length === 0 || !cpassword || cpassword.length === 0 || !username || username.length === 0 || !lastName || lastName.length === 0 || !firstName || firstName.length === 0) {\n        if (!email || email.length === 0) this.warnings.w_email = \"Please fill email field\";\n        if (!password || password.length === 0) this.warnings.w_password = \"Please fill password field\";\n        if (cpassword.localeCompare(password) !== 0) this.warnings.w_cpassword = \"Passwords does not match\";\n        if (!username || username.length === 0) this.warnings.w_username = \"Please fill username field\";\n        if (!firstName || firstName.length === 0) this.warnings.w_firstname = \"Please fill First Name field\";\n        if (!lastName || lastName.length === 0) this.warnings.w_lastname = \"Please fill Last Name field\";\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n\n      try {\n        API.signup(lastName, firstName, email, username, password, cpassword).then(res => {\n          if (res.status === 200) {\n            this.props.history.push('/');\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        }).catch(err => {\n          this.setState({\n            warnings: [\"Error\"]\n          });\n        });\n        this.setState({\n          send: true\n        });\n      } catch (error) {\n        console.error(error);\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this.warnings = _objectSpread({}, DEFAULT_ERRORS);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      className: \"signupModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"shapeSignup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Image, {\n      className: \"img-fluid\",\n      src: \"/img/MatchApp-Logo.png\",\n      alt: \"Responsive image\",\n      size: \"medium\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"signupWarnings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Warnings, {\n      data: this.state.warnings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Container, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"signuph1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Create an account\")), React.createElement(DividerC, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Form, {\n      className: \"signupForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      label: \"First Name\",\n      id: \"firstName\",\n      icon: \"user\",\n      iconPosition: \"left\",\n      autoFocus: true,\n      onChange: this.handleChange,\n      size: \"huge\",\n      placeholder: \"First Name\",\n      autoComplete: \"off\",\n      maxLength: \"13\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Last Name\",\n      id: \"lastName\",\n      icon: \"user\",\n      iconPosition: \"left\",\n      autoFocus: true,\n      onChange: this.handleChange,\n      size: \"huge\",\n      placeholder: \"Last Name\",\n      autoComplete: \"off\",\n      maxLength: \"13\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      label: \"Email\",\n      id: \"email\",\n      icon: \"mail\",\n      iconPosition: \"left\",\n      autoFocus: true,\n      type: \"email\",\n      onChange: this.handleChange,\n      size: \"huge\",\n      placeholder: \"Email\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Choose a username\",\n      id: \"username\",\n      icon: \"user circle\",\n      iconPosition: \"left\",\n      autoFocus: true,\n      onChange: this.handleChange,\n      size: \"huge\",\n      placeholder: \"Choose a username\",\n      autoComplete: \"off\",\n      required: true,\n      maxLength: \"23\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      label: \"Password\",\n      icon: \"lock\",\n      iconPosition: \"left\",\n      id: \"password\",\n      onChange: this.handleChange,\n      type: \"password\",\n      size: \"huge\",\n      placeholder: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Confirm Password\",\n      icon: \"lock\",\n      iconPosition: \"left\",\n      id: \"cpassword\",\n      onChange: this.handleChange,\n      type: \"password\",\n      size: \"huge\",\n      placeholder: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(DividerC, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"signupButton\",\n      loading: this.state.loading,\n      size: \"huge\",\n      onClick: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Register\")), React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signupNoAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Have an account ? \", React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Log in\"))))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/Signup/Signup.js"],"names":["React","API","Segment","Button","Container","Form","Image","Input","Grid","Divider","Rail","Warnings","DividerC","DEFAULT_STATE","lastName","firstName","email","username","password","cpassword","DEFAULT_ERRORS","w_lastname","w_firstname","w_email","w_username","w_password","w_cpassword","Signup","Component","constructor","props","send","warnings","setState","state","length","localeCompare","loading","signup","then","res","status","history","push","error","Error","catch","err","console","handleChange","event","target","id","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../../utils/API\";\nimport {Segment, Button, Container, Form, Image, Input, Grid, Divider, Rail} from \"semantic-ui-react\";\nimport Warnings from \"../Warnings/Warnings\";\nimport DividerC from \"./../../components/Divider/Divider\";\n\nconst DEFAULT_STATE = {\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    cpassword: \"\"\n};\n\nconst DEFAULT_ERRORS = {\n    w_lastname: '',\n    w_firstname: '',\n    w_email: '',\n    w_username: '',\n    w_password: '',\n    w_cpassword: '',\n};\n\nclass Signup extends React.Component {\n    constructor (props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.warnings = {...DEFAULT_ERRORS};\n    }\n\n    send = () => {\n        const warnings = [];\n        this.setState({warnings: []});\n        const {lastName, firstName, email, username, password, cpassword } = this.state;\n        if ((!email || email.length === 0) ||\n            (!password || password.length === 0) ||\n            (!cpassword || cpassword.length === 0) ||\n            (!username || username.length === 0) ||\n            (!lastName || lastName.length === 0) ||\n            (!firstName || firstName.length === 0)) {\n            if (!email || email.length === 0)\n                this.warnings.w_email = \"Please fill email field\";\n            if (!password || password.length === 0)\n                this.warnings.w_password = \"Please fill password field\";\n            if (cpassword.localeCompare(password) !== 0)\n                this.warnings.w_cpassword = \"Passwords does not match\";\n            if (!username || username.length === 0)\n                this.warnings.w_username = \"Please fill username field\";\n            if (!firstName || firstName.length === 0)\n                this.warnings.w_firstname = \"Please fill First Name field\";\n            if (!lastName || lastName.length === 0)\n                this.warnings.w_lastname = \"Please fill Last Name field\";\n            return;\n        }\n        this.setState({loading: true});\n        try {\n            API.signup(lastName, firstName, email, username, password, cpassword)\n                .then(res => {\n                    if (res.status === 200) {\n                        this.props.history.push('/');\n                    } else {\n                        const error = new Error(res.error);\n                        throw error;\n                    }\n                })\n                .catch(err => {\n                    this.setState({warnings: [\"Error\"]});\n                });\n            this.setState({send: true});\n        } catch (error) {\n            console.error(error);\n        }\n        this.setState({loading: false});\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    };\n\n\n    render() {\n        return (\n            <Container className=\"signupModal\">\n                <div className=\"shapeSignup\"></div>\n                <Divider hidden />\n                <Image className=\"img-fluid\"\n                       src=\"/img/MatchApp-Logo.png\"\n                       alt=\"Responsive image\"\n                       size=\"medium\"\n                       centered/>\n                <div className=\"signupWarnings\">\n                    <Warnings data={this.state.warnings} />\n                </div>\n                <Divider hidden />\n                <Container textAlign='center'>\n                    <h1 className=\"signuph1\">Create an account</h1>\n                </Container>\n                <DividerC />\n                <Form className=\"signupForm\">\n                    <Form.Group widths='equal'>\n                            <Form.Input\n                                   label=\"First Name\"\n                                   id=\"firstName\"\n                                   icon='user'\n                                   iconPosition='left'\n                                   autoFocus\n                                   onChange={this.handleChange}\n                                   size=\"huge\"\n                                   placeholder=\"First Name\"\n                                   autoComplete=\"off\"\n                                   maxLength=\"13\"\n                                   required\n                            />\n                            <Form.Input\n                                   label=\"Last Name\"\n                                   id=\"lastName\"\n                                   icon='user'\n                                   iconPosition='left'\n                                   autoFocus\n                                   onChange={this.handleChange}\n                                   size=\"huge\"\n                                   placeholder=\"Last Name\"\n                                   autoComplete=\"off\"\n                                   maxLength=\"13\"\n                                   required\n                            />\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input\n                                   label=\"Email\"\n                                   id=\"email\"\n                                   icon='mail'\n                                   iconPosition='left'\n                                   autoFocus\n                                   type=\"email\"\n                                   onChange={this.handleChange}\n                                   size=\"huge\"\n                                   placeholder=\"Email\"\n                                   autoComplete=\"off\"\n                                   maxLength=\"30\"\n                                   required\n                         />\n                        <Form.Input\n                               label=\"Choose a username\"\n                               id=\"username\"\n                               icon='user circle'\n                               iconPosition='left'\n                               autoFocus\n                               onChange={this.handleChange}\n                               size=\"huge\"\n                               placeholder=\"Choose a username\"\n                               autoComplete=\"off\"\n                               required\n                               maxLength=\"23\"\n                        />\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input\n                               label=\"Password\"\n                               icon='lock'\n                               iconPosition='left'\n                               id=\"password\"\n                               onChange={this.handleChange}\n                               type=\"password\"\n                               size=\"huge\"\n                               placeholder=\"Password\"\n                               required/>\n                        <Form.Input\n                               label=\"Confirm Password\"\n                               icon='lock'\n                               iconPosition='left'\n                               id=\"cpassword\"\n                               onChange={this.handleChange}\n                               type=\"password\"\n                               size=\"huge\"\n                               placeholder=\"Confirm Password\"\n                               required\n                        />\n                    </Form.Group>\n                    </Form>\n                <DividerC />\n                <Grid textAlign=\"center\">\n                    <Grid.Row centered>\n                        <Button className=\"signupButton\"\n                                loading={this.state.loading}\n                                size='huge'\n                                onClick={this.send}>\n                            Register\n                        </Button>\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <div className=\"signupNoAccount\">\n                            <p>Have an account ? <a href=\"/login\">Log in</a></p>\n                        </div>\n                    </Grid.Row>\n                </Grid>\n                <Divider hidden />\n            </Container>\n        );\n    }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}