{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/containers/Chat/Chat.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition, Grid, Divider } from 'semantic-ui-react';\nimport API from './../../utils/API';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getMatchedUsers().then(res => {\n        if (res.status === 200) {\n          console.log(res.data.matchedusers);\n          ;\n          this._mounted && this.setState({\n            matchedusers: res.data.matchedusers\n          });\n        }\n      });\n    };\n\n    this.state = {\n      matchedusers: []\n    };\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  render() {\n    const {\n      matchedusers\n    } = this.state;\n    return React.createElement(Grid, {\n      columns: 1,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      textAlign: 'left',\n      mobile: 16,\n      tablet: 8,\n      computer: 8,\n      largeScreen: 8,\n      widescreen: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Matched users chat\"))), React.createElement(\"div\", {\n      className: \"ChatHistoric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Transition.Group, {\n      as: List,\n      duration: 200,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, matchedusers.length < 1 ? React.createElement(\"div\", {\n      className: 'nothingtoshow',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"No matched users\")) : null, matchedusers.map((obj, i) => React.createElement(List.Item, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.handleDismiss(i, obj.user_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Open chat\")), React.createElement(Image, {\n      avatar: true,\n      src: obj.img_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      as: \"a\",\n      className: \"ChatFirstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, ' ', \" \", obj.firstname), React.createElement(List.Description, {\n      className: \"ChatDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Chat description\")), i < matchedusers.length - 1 ? React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : null)))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/containers/Chat/Chat.js"],"names":["React","List","Image","Button","Transition","Grid","Divider","API","Chat","Component","constructor","props","componentDidMount","_mounted","getMatchedUsers","then","res","status","console","log","data","matchedusers","setState","state","componentWillUnmount","render","length","map","obj","i","handleDismiss","user_id","img_link","firstname"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {List, Image, Button, Transition, Grid, Divider} from 'semantic-ui-react';\nimport API from './../../utils/API';\n\n\nclass Chat extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n           matchedusers: []\n        };\n        this._mounted = false;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getMatchedUsers()\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(res.data.matchedusers);;\n                    this._mounted && this.setState({matchedusers: res.data.matchedusers})\n                }\n            });\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n\n    render(){\n        const { matchedusers } = this.state;\n        return (\n            <Grid columns={1} textAlign={'center'}>\n                <Grid.Column textAlign={'left'} mobile={16} tablet={8} computer={8} largeScreen={8} widescreen={8}>\n                    <div className='ChatTitle'>\n                        <Grid.Row>\n                            <h1>Matched users chat</h1>\n                        </Grid.Row>\n                    </div>\n                    <div className={\"ChatHistoric\"}>\n                        <Grid.Row>\n                            <Transition.Group\n                                as={List}\n                                duration={200}\n                                verticalAlign='middle'\n                            >\n                                {matchedusers.length < 1 ?\n                                    <div className={'nothingtoshow'}>\n                                        <p>No matched users</p>\n                                    </div> :\n                                    null\n                                }\n                                {matchedusers.map((obj, i) => (\n                                    <List.Item key={i}>\n                                        <List.Content>\n                                            <List.Content floated='right'>\n                                                <Button\n                                                    onClick={() => this.handleDismiss(i, obj.user_id)}>\n                                                    Open chat\n                                                </Button>\n                                            </List.Content>\n                                            <Image avatar src={obj.img_link}/>\n                                            <List.Content\n                                                as='a'\n                                                className={\"ChatFirstname\"}>\n                                                {' '} {obj.firstname}</List.Content>\n                                            <List.Description className={\"ChatDesc\"}>\n                                                Chat description\n                                            </List.Description>\n                                        </List.Content>\n                                        {i < matchedusers.length - 1? <Divider /> : null}\n                                    </List.Item>\n                                ))}\n                            </Transition.Group>\n                        </Grid.Row>\n                    </div>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}