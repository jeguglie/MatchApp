{"ast":null,"code":"export default {\n  countries: [{\n    value: 'Afghanistan',\n    countryCode: 'af'\n  }, {\n    value: 'Aland Islands',\n    countryCode: 'ax'\n  }, {\n    value: 'Albania',\n    countryCode: 'al'\n  }, {\n    value: 'Algeria',\n    countryCode: 'dz'\n  }, {\n    value: 'American Samoa',\n    countryCode: 'as'\n  }, {\n    value: 'Andorra',\n    countryCode: 'ad'\n  }, {\n    value: 'Angola',\n    countryCode: 'ao'\n  }, {\n    value: 'Anguilla',\n    countryCode: 'ai'\n  }, {\n    value: 'Antigua',\n    countryCode: 'ag'\n  }, {\n    value: 'Argentina',\n    countryCode: 'ar'\n  }, {\n    value: 'Armenia',\n    countryCode: 'am'\n  }, {\n    value: 'Aruba',\n    countryCode: 'aw'\n  }, {\n    value: 'Australia',\n    countryCode: 'au'\n  }, {\n    value: 'Austria',\n    countryCode: 'at'\n  }, {\n    value: 'Azerbaijan',\n    countryCode: 'az'\n  }, {\n    value: 'Bahamas',\n    countryCode: 'bs'\n  }, {\n    value: 'Bahrain',\n    countryCode: 'bh'\n  }, {\n    value: 'Bangladesh',\n    countryCode: 'bd'\n  }, {\n    value: 'Barbados',\n    countryCode: 'bb'\n  }, {\n    value: 'Belarus',\n    countryCode: 'by'\n  }, {\n    value: 'Belgium',\n    countryCode: 'be'\n  }, {\n    value: 'Belize',\n    countryCode: 'bz'\n  }, {\n    value: 'Benin',\n    countryCode: 'bj'\n  }, {\n    value: 'Bermuda',\n    countryCode: 'bm'\n  }, {\n    value: 'Bhutan',\n    countryCode: 'bt'\n  }, {\n    value: 'Bolivia',\n    countryCode: 'bo'\n  }, {\n    value: 'Bosnia',\n    countryCode: 'ba'\n  }, {\n    value: 'Botswana',\n    countryCode: 'bw'\n  }, {\n    value: 'Bouvet Island',\n    countryCode: 'bv'\n  }, {\n    value: 'Brazil',\n    countryCode: 'br'\n  }, {\n    value: 'British Virgin Islands',\n    countryCode: 'vg'\n  }, {\n    value: 'Brunei',\n    countryCode: 'bn'\n  }, {\n    value: 'Bulgaria',\n    countryCode: 'bg'\n  }, {\n    value: 'Burkina Faso',\n    countryCode: 'bf'\n  }, {\n    value: 'Burma',\n    countryCode: 'mm',\n    alias: 'Myanmar'\n  }, {\n    value: 'Burundi',\n    countryCode: 'bi'\n  }, {\n    value: 'Caicos Islands',\n    countryCode: 'tc'\n  }, {\n    value: 'Cambodia',\n    countryCode: 'kh'\n  }, {\n    value: 'Cameroon',\n    countryCode: 'cm'\n  }, {\n    value: 'Canada',\n    countryCode: 'ca'\n  }, {\n    value: 'Cape Verde',\n    countryCode: 'cv'\n  }, {\n    value: 'Cayman Islands',\n    countryCode: 'ky'\n  }, {\n    value: 'Central African Republic',\n    countryCode: 'cf'\n  }, {\n    value: 'Chad',\n    countryCode: 'td'\n  }, {\n    value: 'Chile',\n    countryCode: 'cl'\n  }, {\n    value: 'China',\n    countryCode: 'cn'\n  }, {\n    value: 'Christmas Island',\n    countryCode: 'cx'\n  }, {\n    value: 'Cocos Islands',\n    countryCode: 'cc'\n  }, {\n    value: 'Colombia',\n    countryCode: 'co'\n  }, {\n    value: 'Comoros',\n    countryCode: 'km'\n  }, {\n    value: 'Congo',\n    countryCode: 'cd'\n  }, {\n    value: 'Congo Brazzaville',\n    countryCode: 'cg'\n  }, {\n    value: 'Cook Islands',\n    countryCode: 'ck'\n  }, {\n    value: 'Costa Rica',\n    countryCode: 'cr'\n  }, {\n    value: 'Cote Divoire',\n    countryCode: 'ci'\n  }, {\n    value: 'Croatia',\n    countryCode: 'hr'\n  }, {\n    value: 'Cuba',\n    countryCode: 'cu'\n  }, {\n    value: 'Cyprus',\n    countryCode: 'cy'\n  }, {\n    value: 'Czech Republic',\n    countryCode: 'cz'\n  }, {\n    value: 'Denmark',\n    countryCode: 'dk'\n  }, {\n    value: 'Djibouti',\n    countryCode: 'dj'\n  }, {\n    value: 'Dominica',\n    countryCode: 'dm'\n  }, {\n    value: 'Dominican Republic',\n    countryCode: 'do'\n  }, {\n    value: 'Ecuador',\n    countryCode: 'ec'\n  }, {\n    value: 'Egypt',\n    countryCode: 'eg'\n  }, {\n    value: 'El Salvador',\n    countryCode: 'sv'\n  }, {\n    value: 'Equatorial Guinea',\n    countryCode: 'gq'\n  }, {\n    value: 'Eritrea',\n    countryCode: 'er'\n  }, {\n    value: 'Estonia',\n    countryCode: 'ee'\n  }, {\n    value: 'Ethiopia',\n    countryCode: 'et'\n  }, {\n    value: 'Europeanunion',\n    countryCode: 'eu'\n  }, {\n    value: 'Falkland Islands',\n    countryCode: 'fk'\n  }, {\n    value: 'Faroe Islands',\n    countryCode: 'fo'\n  }, {\n    value: 'Fiji',\n    countryCode: 'fj'\n  }, {\n    value: 'Finland',\n    countryCode: 'fi'\n  }, {\n    value: 'France',\n    countryCode: 'fr'\n  }, {\n    value: 'French Guiana',\n    countryCode: 'gf'\n  }, {\n    value: 'French Polynesia',\n    countryCode: 'pf'\n  }, {\n    value: 'French Territories',\n    countryCode: 'tf'\n  }, {\n    value: 'Gabon',\n    countryCode: 'ga'\n  }, {\n    value: 'Gambia',\n    countryCode: 'gm'\n  }, {\n    value: 'Georgia',\n    countryCode: 'ge'\n  }, {\n    value: 'Germany',\n    countryCode: 'de'\n  }, {\n    value: 'Ghana',\n    countryCode: 'gh'\n  }, {\n    value: 'Gibraltar',\n    countryCode: 'gi'\n  }, {\n    value: 'Greece',\n    countryCode: 'gr'\n  }, {\n    value: 'Greenland',\n    countryCode: 'gl'\n  }, {\n    value: 'Grenada',\n    countryCode: 'gd'\n  }, {\n    value: 'Guadeloupe',\n    countryCode: 'gp'\n  }, {\n    value: 'Guam',\n    countryCode: 'gu'\n  }, {\n    value: 'Guatemala',\n    countryCode: 'gt'\n  }, {\n    value: 'Guinea',\n    countryCode: 'gn'\n  }, {\n    value: 'Guinea-Bissau',\n    countryCode: 'gw'\n  }, {\n    value: 'Guyana',\n    countryCode: 'gy'\n  }, {\n    value: 'Haiti',\n    countryCode: 'ht'\n  }, {\n    value: 'Heard Island',\n    countryCode: 'hm'\n  }, {\n    value: 'Honduras',\n    countryCode: 'hn'\n  }, {\n    value: 'Hong Kong',\n    countryCode: 'hk'\n  }, {\n    value: 'Hungary',\n    countryCode: 'hu'\n  }, {\n    value: 'Iceland',\n    countryCode: 'is'\n  }, {\n    value: 'India',\n    countryCode: 'in'\n  }, {\n    value: 'Indian Ocean Territory',\n    countryCode: 'io'\n  }, {\n    value: 'Indonesia',\n    countryCode: 'id'\n  }, {\n    value: 'Iran',\n    countryCode: 'ir'\n  }, {\n    value: 'Iraq',\n    countryCode: 'iq'\n  }, {\n    value: 'Ireland',\n    countryCode: 'ie'\n  }, {\n    value: 'Israel',\n    countryCode: 'il'\n  }, {\n    value: 'Italy',\n    countryCode: 'it'\n  }, {\n    value: 'Jamaica',\n    countryCode: 'jm'\n  }, {\n    value: 'Jan Mayen',\n    countryCode: 'sj',\n    alias: 'Svalbard'\n  }, {\n    value: 'Japan',\n    countryCode: 'jp'\n  }, {\n    value: 'Jordan',\n    countryCode: 'jo'\n  }, {\n    value: 'Kazakhstan',\n    countryCode: 'kz'\n  }, {\n    value: 'Kenya',\n    countryCode: 'ke'\n  }, {\n    value: 'Kiribati',\n    countryCode: 'ki'\n  }, {\n    value: 'Kuwait',\n    countryCode: 'kw'\n  }, {\n    value: 'Kyrgyzstan',\n    countryCode: 'kg'\n  }, {\n    value: 'Laos',\n    countryCode: 'la'\n  }, {\n    value: 'Latvia',\n    countryCode: 'lv'\n  }, {\n    value: 'Lebanon',\n    countryCode: 'lb'\n  }, {\n    value: 'Lesotho',\n    countryCode: 'ls'\n  }, {\n    value: 'Liberia',\n    countryCode: 'lr'\n  }, {\n    value: 'Libya',\n    countryCode: 'ly'\n  }, {\n    value: 'Liechtenstein',\n    countryCode: 'li'\n  }, {\n    value: 'Lithuania',\n    countryCode: 'lt'\n  }, {\n    value: 'Luxembourg',\n    countryCode: 'lu'\n  }, {\n    value: 'Macau',\n    countryCode: 'mo'\n  }, {\n    value: 'Macedonia',\n    countryCode: 'mk'\n  }, {\n    value: 'Madagascar',\n    countryCode: 'mg'\n  }, {\n    value: 'Malawi',\n    countryCode: 'mw'\n  }, {\n    value: 'Malaysia',\n    countryCode: 'my'\n  }, {\n    value: 'Maldives',\n    countryCode: 'mv'\n  }, {\n    value: 'Mali',\n    countryCode: 'ml'\n  }, {\n    value: 'Malta',\n    countryCode: 'mt'\n  }, {\n    value: 'Marshall Islands',\n    countryCode: 'mh'\n  }, {\n    value: 'Martinique',\n    countryCode: 'mq'\n  }, {\n    value: 'Mauritania',\n    countryCode: 'mr'\n  }, {\n    value: 'Mauritius',\n    countryCode: 'mu'\n  }, {\n    value: 'Mayotte',\n    countryCode: 'yt'\n  }, {\n    value: 'Mexico',\n    countryCode: 'mx'\n  }, {\n    value: 'Micronesia',\n    countryCode: 'fm'\n  }, {\n    value: 'Moldova',\n    countryCode: 'md'\n  }, {\n    value: 'Monaco',\n    countryCode: 'mc'\n  }, {\n    value: 'Mongolia',\n    countryCode: 'mn'\n  }, {\n    value: 'Montenegro',\n    countryCode: 'me'\n  }, {\n    value: 'Montserrat',\n    countryCode: 'ms'\n  }, {\n    value: 'Morocco',\n    countryCode: 'ma'\n  }, {\n    value: 'Mozambique',\n    countryCode: 'mz'\n  }, {\n    value: 'Namibia',\n    countryCode: 'na'\n  }, {\n    value: 'Nauru',\n    countryCode: 'nr'\n  }, {\n    value: 'Nepal',\n    countryCode: 'np'\n  }, {\n    value: 'Netherlands',\n    countryCode: 'nl'\n  }, {\n    value: 'Netherlandsantilles',\n    countryCode: 'an'\n  }, {\n    value: 'New Caledonia',\n    countryCode: 'nc'\n  }, {\n    value: 'New Guinea',\n    countryCode: 'pg'\n  }, {\n    value: 'New Zealand',\n    countryCode: 'nz'\n  }, {\n    value: 'Nicaragua',\n    countryCode: 'ni'\n  }, {\n    value: 'Niger',\n    countryCode: 'ne'\n  }, {\n    value: 'Nigeria',\n    countryCode: 'ng'\n  }, {\n    value: 'Niue',\n    countryCode: 'nu'\n  }, {\n    value: 'Norfolk Island',\n    countryCode: 'nf'\n  }, {\n    value: 'North Korea',\n    countryCode: 'kp'\n  }, {\n    value: 'Northern Mariana Islands',\n    countryCode: 'mp'\n  }, {\n    value: 'Norway',\n    countryCode: 'no'\n  }, {\n    value: 'Oman',\n    countryCode: 'om'\n  }, {\n    value: 'Pakistan',\n    countryCode: 'pk'\n  }, {\n    value: 'Palau',\n    countryCode: 'pw'\n  }, {\n    value: 'Palestine',\n    countryCode: 'ps'\n  }, {\n    value: 'Panama',\n    countryCode: 'pa'\n  }, {\n    value: 'Paraguay',\n    countryCode: 'py'\n  }, {\n    value: 'Peru',\n    countryCode: 'pe'\n  }, {\n    value: 'Philippines',\n    countryCode: 'ph'\n  }, {\n    value: 'Pitcairn Islands',\n    countryCode: 'pn'\n  }, {\n    value: 'Poland',\n    countryCode: 'pl'\n  }, {\n    value: 'Portugal',\n    countryCode: 'pt'\n  }, {\n    value: 'Puerto Rico',\n    countryCode: 'pr'\n  }, {\n    value: 'Qatar',\n    countryCode: 'qa'\n  }, {\n    value: 'Reunion',\n    countryCode: 're'\n  }, {\n    value: 'Romania',\n    countryCode: 'ro'\n  }, {\n    value: 'Russia',\n    countryCode: 'ru'\n  }, {\n    value: 'Rwanda',\n    countryCode: 'rw'\n  }, {\n    value: 'Saint Helena',\n    countryCode: 'sh'\n  }, {\n    value: 'Saint Kitts and Nevis',\n    countryCode: 'kn'\n  }, {\n    value: 'Saint Lucia',\n    countryCode: 'lc'\n  }, {\n    value: 'Saint Pierre',\n    countryCode: 'pm'\n  }, {\n    value: 'Saint Vincent',\n    countryCode: 'vc'\n  }, {\n    value: 'Samoa',\n    countryCode: 'ws'\n  }, {\n    value: 'San Marino',\n    countryCode: 'sm'\n  }, {\n    value: 'Sandwich Islands',\n    countryCode: 'gs'\n  }, {\n    value: 'Sao Tome',\n    countryCode: 'st'\n  }, {\n    value: 'Saudi Arabia',\n    countryCode: 'sa'\n  }, {\n    value: 'Scotland',\n    countryCode: 'gb sct'\n  }, {\n    value: 'Senegal',\n    countryCode: 'sn'\n  }, {\n    value: 'Serbia',\n    countryCode: 'cs'\n  }, {\n    value: 'Serbia',\n    countryCode: 'rs'\n  }, {\n    value: 'Seychelles',\n    countryCode: 'sc'\n  }, {\n    value: 'Sierra Leone',\n    countryCode: 'sl'\n  }, {\n    value: 'Singapore',\n    countryCode: 'sg'\n  }, {\n    value: 'Slovakia',\n    countryCode: 'sk'\n  }, {\n    value: 'Slovenia',\n    countryCode: 'si'\n  }, {\n    value: 'Solomon Islands',\n    countryCode: 'sb'\n  }, {\n    value: 'Somalia',\n    countryCode: 'so'\n  }, {\n    value: 'South Africa',\n    countryCode: 'za'\n  }, {\n    value: 'South Korea',\n    countryCode: 'kr'\n  }, {\n    value: 'Spain',\n    countryCode: 'es'\n  }, {\n    value: 'Sri Lanka',\n    countryCode: 'lk'\n  }, {\n    value: 'Sudan',\n    countryCode: 'sd'\n  }, {\n    value: 'Suriname',\n    countryCode: 'sr'\n  }, {\n    value: 'Swaziland',\n    countryCode: 'sz'\n  }, {\n    value: 'Sweden',\n    countryCode: 'se'\n  }, {\n    value: 'Switzerland',\n    countryCode: 'ch'\n  }, {\n    value: 'Syria',\n    countryCode: 'sy'\n  }, {\n    value: 'Taiwan',\n    countryCode: 'tw'\n  }, {\n    value: 'Tajikistan',\n    countryCode: 'tj'\n  }, {\n    value: 'Tanzania',\n    countryCode: 'tz'\n  }, {\n    value: 'Thailand',\n    countryCode: 'th'\n  }, {\n    value: 'Timorleste',\n    countryCode: 'tl'\n  }, {\n    value: 'Togo',\n    countryCode: 'tg'\n  }, {\n    value: 'Tokelau',\n    countryCode: 'tk'\n  }, {\n    value: 'Tonga',\n    countryCode: 'to'\n  }, {\n    value: 'Trinidad',\n    countryCode: 'tt'\n  }, {\n    value: 'Tunisia',\n    countryCode: 'tn'\n  }, {\n    value: 'Turkey',\n    countryCode: 'tr'\n  }, {\n    value: 'Turkmenistan',\n    countryCode: 'tm'\n  }, {\n    value: 'Tuvalu',\n    countryCode: 'tv'\n  }, {\n    value: 'U.A.E.',\n    countryCode: 'ae',\n    alias: 'United Arab Emirates'\n  }, {\n    value: 'Uganda',\n    countryCode: 'ug'\n  }, {\n    value: 'Ukraine',\n    countryCode: 'ua'\n  }, {\n    value: 'United Kingdom',\n    countryCode: 'gb',\n    alias: 'uk'\n  }, {\n    value: 'United States',\n    countryCode: 'us',\n    alias: 'America'\n  }, {\n    value: 'Uruguay',\n    countryCode: 'uy'\n  }, {\n    value: 'US Minor Islands',\n    countryCode: 'um'\n  }, {\n    value: 'US Virgin Islands',\n    countryCode: 'vi'\n  }, {\n    value: 'Uzbekistan',\n    countryCode: 'uz'\n  }, {\n    value: 'Vanuatu',\n    countryCode: 'vu'\n  }, {\n    value: 'Vatican City',\n    countryCode: 'va'\n  }, {\n    value: 'Venezuela',\n    countryCode: 've'\n  }, {\n    value: 'Vietnam',\n    countryCode: 'vn'\n  }, {\n    value: 'Wales',\n    countryCode: 'gb wls'\n  }, {\n    value: 'Wallis and Futuna',\n    countryCode: 'wf'\n  }, {\n    value: 'Western Sahara',\n    countryCode: 'eh'\n  }, {\n    value: 'Yemen',\n    countryCode: 'ye'\n  }, {\n    value: 'Zambia',\n    countryCode: 'zm'\n  }, {\n    value: 'Zimbabwe',\n    countryCode: 'zw'\n  }],\n  validateEmail: function (email) {\n    let re = /^(([^<>()[\\]\\\\.,;:\\s@]+(\\.[^<>()[\\]\\\\.,;:\\s@]+)*)|(.+))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  },\n  validatePassword: function (password) {\n    let re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    return re.test(password);\n  },\n  validateUsername: function (username) {\n    let re = /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/;\n    return re.test(username);\n  },\n  validateFirstName: function (name) {\n    let re = /^(?=.{1,20}$)[a-z]+(?:['_.\\s][a-z]+)*$/i;\n    return re.test(name);\n  },\n  sleepLoader: function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  },\n  checkWarnings: function (data) {\n    let warnings = false;\n    Object.entries(data).forEach(([key, value]) => {\n      if (value.length > 0) warnings = true;\n    });\n    return warnings;\n  }\n};","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/client/src/utils/validation.js"],"names":["countries","value","countryCode","alias","validateEmail","email","re","test","validatePassword","password","validateUsername","username","validateFirstName","name","sleepLoader","sleep","ms","Promise","resolve","setTimeout","checkWarnings","data","warnings","Object","entries","forEach","key","length"],"mappings":"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","sourcesContent":["export default {\n    countries: [\n    {value: 'Afghanistan', countryCode: 'af'},\n    {value: 'Aland Islands', countryCode: 'ax'},\n    {value: 'Albania', countryCode: 'al'},\n    {value: 'Algeria', countryCode: 'dz'},\n    {value: 'American Samoa', countryCode: 'as'},\n    {value: 'Andorra', countryCode: 'ad'},\n    {value: 'Angola', countryCode: 'ao'},\n    {value: 'Anguilla', countryCode: 'ai'},\n    {value: 'Antigua', countryCode: 'ag'},\n    {value: 'Argentina', countryCode: 'ar'},\n    {value: 'Armenia', countryCode: 'am'},\n    {value: 'Aruba', countryCode: 'aw'},\n    {value: 'Australia', countryCode: 'au'},\n    {value: 'Austria', countryCode: 'at'},\n    {value: 'Azerbaijan', countryCode: 'az'},\n    {value: 'Bahamas', countryCode: 'bs'},\n    {value: 'Bahrain', countryCode: 'bh'},\n    {value: 'Bangladesh', countryCode: 'bd'},\n    {value: 'Barbados', countryCode: 'bb'},\n    {value: 'Belarus', countryCode: 'by'},\n    {value: 'Belgium', countryCode: 'be'},\n    {value: 'Belize', countryCode: 'bz'},\n    {value: 'Benin', countryCode: 'bj'},\n    {value: 'Bermuda', countryCode: 'bm'},\n    {value: 'Bhutan', countryCode: 'bt'},\n    {value: 'Bolivia', countryCode: 'bo'},\n    {value: 'Bosnia', countryCode: 'ba'},\n    {value: 'Botswana', countryCode: 'bw'},\n    {value: 'Bouvet Island', countryCode: 'bv'},\n    {value: 'Brazil', countryCode: 'br'},\n    {value: 'British Virgin Islands', countryCode: 'vg'},\n    {value: 'Brunei', countryCode: 'bn'},\n    {value: 'Bulgaria', countryCode: 'bg'},\n    {value: 'Burkina Faso', countryCode: 'bf'},\n    {value: 'Burma', countryCode: 'mm', alias: 'Myanmar'},\n    {value: 'Burundi', countryCode: 'bi'},\n    {value: 'Caicos Islands', countryCode: 'tc'},\n    {value: 'Cambodia', countryCode: 'kh'},\n    {value: 'Cameroon', countryCode: 'cm'},\n    {value: 'Canada', countryCode: 'ca'},\n    {value: 'Cape Verde', countryCode: 'cv'},\n    {value: 'Cayman Islands', countryCode: 'ky'},\n    {value: 'Central African Republic', countryCode: 'cf'},\n    {value: 'Chad', countryCode: 'td'},\n    {value: 'Chile', countryCode: 'cl'},\n    {value: 'China', countryCode: 'cn'},\n    {value: 'Christmas Island', countryCode: 'cx'},\n    {value: 'Cocos Islands', countryCode: 'cc'},\n    {value: 'Colombia', countryCode: 'co'},\n    {value: 'Comoros', countryCode: 'km'},\n    {value: 'Congo', countryCode: 'cd'},\n    {value: 'Congo Brazzaville', countryCode: 'cg'},\n    {value: 'Cook Islands', countryCode: 'ck'},\n    {value: 'Costa Rica', countryCode: 'cr'},\n    {value: 'Cote Divoire', countryCode: 'ci'},\n    {value: 'Croatia', countryCode: 'hr'},\n    {value: 'Cuba', countryCode: 'cu'},\n    {value: 'Cyprus', countryCode: 'cy'},\n    {value: 'Czech Republic', countryCode: 'cz'},\n    {value: 'Denmark', countryCode: 'dk'},\n    {value: 'Djibouti', countryCode: 'dj'},\n    {value: 'Dominica', countryCode: 'dm'},\n    {value: 'Dominican Republic', countryCode: 'do'},\n    {value: 'Ecuador', countryCode: 'ec'},\n    {value: 'Egypt', countryCode: 'eg'},\n    {value: 'El Salvador', countryCode: 'sv'},\n    {value: 'Equatorial Guinea', countryCode: 'gq'},\n    {value: 'Eritrea', countryCode: 'er'},\n    {value: 'Estonia', countryCode: 'ee'},\n    {value: 'Ethiopia', countryCode: 'et'},\n    {value: 'Europeanunion', countryCode: 'eu'},\n    {value: 'Falkland Islands', countryCode: 'fk'},\n    {value: 'Faroe Islands', countryCode: 'fo'},\n    {value: 'Fiji', countryCode: 'fj'},\n    {value: 'Finland', countryCode: 'fi'},\n    {value: 'France', countryCode: 'fr'},\n    {value: 'French Guiana', countryCode: 'gf'},\n    {value: 'French Polynesia', countryCode: 'pf'},\n    {value: 'French Territories', countryCode: 'tf'},\n    {value: 'Gabon', countryCode: 'ga'},\n    {value: 'Gambia', countryCode: 'gm'},\n    {value: 'Georgia', countryCode: 'ge'},\n    {value: 'Germany', countryCode: 'de'},\n    {value: 'Ghana', countryCode: 'gh'},\n    {value: 'Gibraltar', countryCode: 'gi'},\n    {value: 'Greece', countryCode: 'gr'},\n    {value: 'Greenland', countryCode: 'gl'},\n    {value: 'Grenada', countryCode: 'gd'},\n    {value: 'Guadeloupe', countryCode: 'gp'},\n    {value: 'Guam', countryCode: 'gu'},\n    {value: 'Guatemala', countryCode: 'gt'},\n    {value: 'Guinea', countryCode: 'gn'},\n    {value: 'Guinea-Bissau', countryCode: 'gw'},\n    {value: 'Guyana', countryCode: 'gy'},\n    {value: 'Haiti', countryCode: 'ht'},\n    {value: 'Heard Island', countryCode: 'hm'},\n    {value: 'Honduras', countryCode: 'hn'},\n    {value: 'Hong Kong', countryCode: 'hk'},\n    {value: 'Hungary', countryCode: 'hu'},\n    {value: 'Iceland', countryCode: 'is'},\n    {value: 'India', countryCode: 'in'},\n    {value: 'Indian Ocean Territory', countryCode: 'io'},\n    {value: 'Indonesia', countryCode: 'id'},\n    {value: 'Iran', countryCode: 'ir'},\n    {value: 'Iraq', countryCode: 'iq'},\n    {value: 'Ireland', countryCode: 'ie'},\n    {value: 'Israel', countryCode: 'il'},\n    {value: 'Italy', countryCode: 'it'},\n    {value: 'Jamaica', countryCode: 'jm'},\n    {value: 'Jan Mayen', countryCode: 'sj', alias: 'Svalbard'},\n    {value: 'Japan', countryCode: 'jp'},\n    {value: 'Jordan', countryCode: 'jo'},\n    {value: 'Kazakhstan', countryCode: 'kz'},\n    {value: 'Kenya', countryCode: 'ke'},\n    {value: 'Kiribati', countryCode: 'ki'},\n    {value: 'Kuwait', countryCode: 'kw'},\n    {value: 'Kyrgyzstan', countryCode: 'kg'},\n    {value: 'Laos', countryCode: 'la'},\n    {value: 'Latvia', countryCode: 'lv'},\n    {value: 'Lebanon', countryCode: 'lb'},\n    {value: 'Lesotho', countryCode: 'ls'},\n    {value: 'Liberia', countryCode: 'lr'},\n    {value: 'Libya', countryCode: 'ly'},\n    {value: 'Liechtenstein', countryCode: 'li'},\n    {value: 'Lithuania', countryCode: 'lt'},\n    {value: 'Luxembourg', countryCode: 'lu'},\n    {value: 'Macau', countryCode: 'mo'},\n    {value: 'Macedonia', countryCode: 'mk'},\n    {value: 'Madagascar', countryCode: 'mg'},\n    {value: 'Malawi', countryCode: 'mw'},\n    {value: 'Malaysia', countryCode: 'my'},\n    {value: 'Maldives', countryCode: 'mv'},\n    {value: 'Mali', countryCode: 'ml'},\n    {value: 'Malta', countryCode: 'mt'},\n    {value: 'Marshall Islands', countryCode: 'mh'},\n    {value: 'Martinique', countryCode: 'mq'},\n    {value: 'Mauritania', countryCode: 'mr'},\n    {value: 'Mauritius', countryCode: 'mu'},\n    {value: 'Mayotte', countryCode: 'yt'},\n    {value: 'Mexico', countryCode: 'mx'},\n    {value: 'Micronesia', countryCode: 'fm'},\n    {value: 'Moldova', countryCode: 'md'},\n    {value: 'Monaco', countryCode: 'mc'},\n    {value: 'Mongolia', countryCode: 'mn'},\n    {value: 'Montenegro', countryCode: 'me'},\n    {value: 'Montserrat', countryCode: 'ms'},\n    {value: 'Morocco', countryCode: 'ma'},\n    {value: 'Mozambique', countryCode: 'mz'},\n    {value: 'Namibia', countryCode: 'na'},\n    {value: 'Nauru', countryCode: 'nr'},\n    {value: 'Nepal', countryCode: 'np'},\n    {value: 'Netherlands', countryCode: 'nl'},\n    {value: 'Netherlandsantilles', countryCode: 'an'},\n    {value: 'New Caledonia', countryCode: 'nc'},\n    {value: 'New Guinea', countryCode: 'pg'},\n    {value: 'New Zealand', countryCode: 'nz'},\n    {value: 'Nicaragua', countryCode: 'ni'},\n    {value: 'Niger', countryCode: 'ne'},\n    {value: 'Nigeria', countryCode: 'ng'},\n    {value: 'Niue', countryCode: 'nu'},\n    {value: 'Norfolk Island', countryCode: 'nf'},\n    {value: 'North Korea', countryCode: 'kp'},\n    {value: 'Northern Mariana Islands', countryCode: 'mp'},\n    {value: 'Norway', countryCode: 'no'},\n    {value: 'Oman', countryCode: 'om'},\n    {value: 'Pakistan', countryCode: 'pk'},\n    {value: 'Palau', countryCode: 'pw'},\n    {value: 'Palestine', countryCode: 'ps'},\n    {value: 'Panama', countryCode: 'pa'},\n    {value: 'Paraguay', countryCode: 'py'},\n    {value: 'Peru', countryCode: 'pe'},\n    {value: 'Philippines', countryCode: 'ph'},\n    {value: 'Pitcairn Islands', countryCode: 'pn'},\n    {value: 'Poland', countryCode: 'pl'},\n    {value: 'Portugal', countryCode: 'pt'},\n    {value: 'Puerto Rico', countryCode: 'pr'},\n    {value: 'Qatar', countryCode: 'qa'},\n    {value: 'Reunion', countryCode: 're'},\n    {value: 'Romania', countryCode: 'ro'},\n    {value: 'Russia', countryCode: 'ru'},\n    {value: 'Rwanda', countryCode: 'rw'},\n    {value: 'Saint Helena', countryCode: 'sh'},\n    {value: 'Saint Kitts and Nevis', countryCode: 'kn'},\n    {value: 'Saint Lucia', countryCode: 'lc'},\n    {value: 'Saint Pierre', countryCode: 'pm'},\n    {value: 'Saint Vincent', countryCode: 'vc'},\n    {value: 'Samoa', countryCode: 'ws'},\n    {value: 'San Marino', countryCode: 'sm'},\n    {value: 'Sandwich Islands', countryCode: 'gs'},\n    {value: 'Sao Tome', countryCode: 'st'},\n    {value: 'Saudi Arabia', countryCode: 'sa'},\n    {value: 'Scotland', countryCode: 'gb sct'},\n    {value: 'Senegal', countryCode: 'sn'},\n    {value: 'Serbia', countryCode: 'cs'},\n    {value: 'Serbia', countryCode: 'rs'},\n    {value: 'Seychelles', countryCode: 'sc'},\n    {value: 'Sierra Leone', countryCode: 'sl'},\n    {value: 'Singapore', countryCode: 'sg'},\n    {value: 'Slovakia', countryCode: 'sk'},\n    {value: 'Slovenia', countryCode: 'si'},\n    {value: 'Solomon Islands', countryCode: 'sb'},\n    {value: 'Somalia', countryCode: 'so'},\n    {value: 'South Africa', countryCode: 'za'},\n    {value: 'South Korea', countryCode: 'kr'},\n    {value: 'Spain', countryCode: 'es'},\n    {value: 'Sri Lanka', countryCode: 'lk'},\n    {value: 'Sudan', countryCode: 'sd'},\n    {value: 'Suriname', countryCode: 'sr'},\n    {value: 'Swaziland', countryCode: 'sz'},\n    {value: 'Sweden', countryCode: 'se'},\n    {value: 'Switzerland', countryCode: 'ch'},\n    {value: 'Syria', countryCode: 'sy'},\n    {value: 'Taiwan', countryCode: 'tw'},\n    {value: 'Tajikistan', countryCode: 'tj'},\n    {value: 'Tanzania', countryCode: 'tz'},\n    {value: 'Thailand', countryCode: 'th'},\n    {value: 'Timorleste', countryCode: 'tl'},\n    {value: 'Togo', countryCode: 'tg'},\n    {value: 'Tokelau', countryCode: 'tk'},\n    {value: 'Tonga', countryCode: 'to'},\n    {value: 'Trinidad', countryCode: 'tt'},\n    {value: 'Tunisia', countryCode: 'tn'},\n    {value: 'Turkey', countryCode: 'tr'},\n    {value: 'Turkmenistan', countryCode: 'tm'},\n    {value: 'Tuvalu', countryCode: 'tv'},\n    {value: 'U.A.E.', countryCode: 'ae', alias: 'United Arab Emirates'},\n    {value: 'Uganda', countryCode: 'ug'},\n    {value: 'Ukraine', countryCode: 'ua'},\n    {value: 'United Kingdom', countryCode: 'gb', alias: 'uk'},\n    {value: 'United States', countryCode: 'us', alias: 'America'},\n    {value: 'Uruguay', countryCode: 'uy'},\n    {value: 'US Minor Islands', countryCode: 'um'},\n    {value: 'US Virgin Islands', countryCode: 'vi'},\n    {value: 'Uzbekistan', countryCode: 'uz'},\n    {value: 'Vanuatu', countryCode: 'vu'},\n    {value: 'Vatican City', countryCode: 'va'},\n    {value: 'Venezuela', countryCode: 've'},\n    {value: 'Vietnam', countryCode: 'vn'},\n    {value: 'Wales', countryCode: 'gb wls'},\n    {value: 'Wallis and Futuna', countryCode: 'wf'},\n    {value: 'Western Sahara', countryCode: 'eh'},\n    {value: 'Yemen', countryCode: 'ye'},\n    {value: 'Zambia', countryCode: 'zm'},\n    {value: 'Zimbabwe', countryCode: 'zw'}\n],\n    validateEmail: function(email)\n    {\n        let re = /^(([^<>()[\\]\\\\.,;:\\s@]+(\\.[^<>()[\\]\\\\.,;:\\s@]+)*)|(.+))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    },\n    validatePassword: function(password) {\n        let re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n        return re.test(password);\n    },\n    validateUsername: function(username) {\n        let re = /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/;\n        return re.test(username)\n    },\n    validateFirstName: function(name) {\n        let re = /^(?=.{1,20}$)[a-z]+(?:['_.\\s][a-z]+)*$/i;\n        return re.test(name);\n    },\n    sleepLoader: function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    },\n    checkWarnings: function(data) {\n        let warnings = false;\n        Object.entries(data).forEach(([key, value]) => {\n            if (value.length > 0)\n                warnings = true;\n        });\n        return warnings;\n    }\n}"]},"metadata":{},"sourceType":"module"}