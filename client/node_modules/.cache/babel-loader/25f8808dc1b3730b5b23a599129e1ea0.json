{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _Dimmer = _interopRequireDefault(require(\"../../modules/Dimmer\"));\n\nvar _Label = _interopRequireDefault(require(\"../Label/Label\"));\n\nvar _ImageGroup = _interopRequireDefault(require(\"./ImageGroup\"));\n/**\n * An image is a graphic representation of something.\n * @see Icon\n */\n\n\nfunction Image(props) {\n  var avatar = props.avatar,\n      bordered = props.bordered,\n      centered = props.centered,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      content = props.content,\n      dimmer = props.dimmer,\n      disabled = props.disabled,\n      floated = props.floated,\n      fluid = props.fluid,\n      hidden = props.hidden,\n      href = props.href,\n      inline = props.inline,\n      label = props.label,\n      rounded = props.rounded,\n      size = props.size,\n      spaced = props.spaced,\n      verticalAlign = props.verticalAlign,\n      wrapped = props.wrapped,\n      ui = props.ui;\n  var classes = (0, _classnames[\"default\"])((0, _lib.useKeyOnly)(ui, 'ui'), size, (0, _lib.useKeyOnly)(avatar, 'avatar'), (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(rounded, 'rounded'), (0, _lib.useKeyOrValueAndKey)(spaced, 'spaced'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign, 'aligned'), 'image', className);\n  var rest = (0, _lib.getUnhandledProps)(Image, props);\n\n  var _partitionHTMLProps = (0, _lib.partitionHTMLProps)(rest, {\n    htmlProps: _lib.htmlImageProps\n  }),\n      _partitionHTMLProps2 = (0, _slicedToArray2[\"default\"])(_partitionHTMLProps, 2),\n      imgTagProps = _partitionHTMLProps2[0],\n      rootProps = _partitionHTMLProps2[1];\n\n  var ElementType = (0, _lib.getElementType)(Image, props, function () {\n    if (!(0, _isNil2[\"default\"])(dimmer) || !(0, _isNil2[\"default\"])(label) || !(0, _isNil2[\"default\"])(wrapped) || !_lib.childrenUtils.isNil(children)) {\n      return 'div';\n    }\n  });\n\n  if (!_lib.childrenUtils.isNil(children)) {\n    return _react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!_lib.childrenUtils.isNil(content)) {\n    return _react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  if (ElementType === 'img') {\n    return _react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({}, rootProps, imgTagProps, {\n      className: classes\n    }));\n  }\n\n  return _react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({}, rootProps, {\n    className: classes,\n    href: href\n  }), _Dimmer[\"default\"].create(dimmer, {\n    autoGenerateKey: false\n  }), _Label[\"default\"].create(label, {\n    autoGenerateKey: false\n  }), _react[\"default\"].createElement(\"img\", imgTagProps));\n}\n\nImage.handledProps = [\"as\", \"avatar\", \"bordered\", \"centered\", \"children\", \"circular\", \"className\", \"content\", \"dimmer\", \"disabled\", \"floated\", \"fluid\", \"hidden\", \"href\", \"inline\", \"label\", \"rounded\", \"size\", \"spaced\", \"ui\", \"verticalAlign\", \"wrapped\"];\nImage.Group = _ImageGroup[\"default\"];\nImage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _propTypes[\"default\"].elementType,\n\n  /** An image may be formatted to appear inline with text as an avatar. */\n  avatar: _propTypes[\"default\"].bool,\n\n  /** An image may include a border to emphasize the edges of white or transparent content. */\n  bordered: _propTypes[\"default\"].bool,\n\n  /** An image can appear centered in a content block. */\n  centered: _propTypes[\"default\"].bool,\n\n  /** Primary content. */\n  children: _propTypes[\"default\"].node,\n\n  /** An image may appear circular. */\n  circular: _propTypes[\"default\"].bool,\n\n  /** Additional classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** An image can show that it is disabled and cannot be selected. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Shorthand for Dimmer. */\n  dimmer: _lib.customPropTypes.itemShorthand,\n\n  /** An image can sit to the left or right of other content. */\n  floated: _propTypes[\"default\"].oneOf(_lib.SUI.FLOATS),\n\n  /** An image can take up the width of its container. */\n  fluid: _lib.customPropTypes.every([_propTypes[\"default\"].bool, _lib.customPropTypes.disallow(['size'])]),\n\n  /** An image can be hidden. */\n  hidden: _propTypes[\"default\"].bool,\n\n  /** Renders the Image as an <a> tag with this href. */\n  href: _propTypes[\"default\"].string,\n\n  /** An image may appear inline. */\n  inline: _propTypes[\"default\"].bool,\n\n  /** Shorthand for Label. */\n  label: _lib.customPropTypes.itemShorthand,\n\n  /** An image may appear rounded. */\n  rounded: _propTypes[\"default\"].bool,\n\n  /** An image may appear at different sizes. */\n  size: _propTypes[\"default\"].oneOf(_lib.SUI.SIZES),\n\n  /** An image can specify that it needs an additional spacing to separate it from nearby content. */\n  spaced: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].oneOf(['left', 'right'])]),\n\n  /** Whether or not to add the ui className. */\n  ui: _propTypes[\"default\"].bool,\n\n  /** An image can specify its vertical alignment. */\n  verticalAlign: _propTypes[\"default\"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),\n\n  /** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */\n  wrapped: _propTypes[\"default\"].bool\n} : {};\nImage.defaultProps = {\n  as: 'img',\n  ui: true\n};\nImage.create = (0, _lib.createShorthandFactory)(Image, function (value) {\n  return {\n    src: value\n  };\n});\nvar _default = Image;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}