{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/containers/Wall/Filter/Filter.js\";\nimport React from 'react';\nimport { Button, Checkbox, Divider, Grid, Segment } from \"semantic-ui-react\";\nimport InputRange from \"react-input-range\";\nimport SearchTags from \"../SearchTags/SearchTags\";\nimport 'react-input-range/lib/css/index.css';\nimport Aux from \"../../../hoc/Aux\";\nconst DEFAULT_STATE = {\n  distanceRange: 250,\n  ageRange: {\n    min: 18,\n    max: 27\n  },\n  popularityRange: {\n    min: 0,\n    max: 50\n  },\n  loading: false,\n  checked: true\n};\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async (value, id) => {\n      if (id === \"distanceRange\") this._mounted && this.setState({\n        distanceRange: value\n      });else if (id === \"ageRange\") this._mounted && this.setState({\n        ageRange: value\n      });else if (id === \"popularityRange\") this._mounted && this.setState({\n        popularityRange: value\n      });\n    };\n\n    this.handleClick = () => {\n      let interests = [];\n      if (this.innerRef.current && this.innerRef.current.state.value && this.innerRef.current.state.value.length > 0) interests = this.innerRef.current.state.value.length;\n      console.log(interests);\n      this.props.searchMatch(this.state.distanceRange, this.state.ageRange, this.state.popularityRange, interests);\n    };\n\n    this.activeCheckBox = () => {\n      if (this.state.checked === false) {\n        this.innerRef.current.clearValue();\n        this.setState({\n          checked: true\n        });\n      }\n    };\n\n    this.disableCheckBox = () => {\n      if (this.state.checked === true) {\n        this.setState({\n          checked: false\n        });\n      }\n    };\n\n    this.state = { ...DEFAULT_STATE\n    };\n    this._mounted = false;\n    this.state.loading = true;\n    this.innerRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  } // Filter\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.loading !== prevState.loading) return {\n      loading: nextProps.loading\n    };\n    return null;\n  }\n\n  render() {\n    const {\n      distanceRange,\n      loading,\n      checked,\n      ageRange,\n      popularityRange\n    } = this.state;\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      mobile: 16,\n      tablet: 6,\n      computer: 6,\n      largeScreen: 4,\n      widescreen: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      inverted: true,\n      className: \"SegmentFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Distance\"), React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"0 - \", distanceRange, \" km\")))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      maxValue: 5000,\n      minValue: 0,\n      onChange: value => this.setState({\n        distanceRange: value\n      }),\n      value: distanceRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Age\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \", ageRange.min, \" - \", ageRange.max)))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      maxValue: 99,\n      minValue: 18,\n      onChange: value => this.setState({\n        ageRange: value\n      }),\n      value: ageRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DistanceRangeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DistanceRangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Popularity\"), \" \", React.createElement(\"span\", {\n      className: \"RangeTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", popularityRange.min, \" - \", popularityRange.max)))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      maxValue: 500,\n      minValue: 0,\n      onChange: value => this.setState({\n        popularityRange: value\n      }),\n      value: popularityRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      className: 'bottomFilter',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 'equal',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: checked,\n      onClick: checked ? this.disableCheckBox : this.activeCheckBox,\n      toggle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: 'includeMyInterests',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Use my interests\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(SearchTags, {\n      activeCheckBox: this.activeCheckBox,\n      disableCheckBox: this.disableCheckBox,\n      ref: this.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      centered: true,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'searchButton',\n      id: \"search\",\n      size: \"large\",\n      fluid: true,\n      loading: loading,\n      floated: 'right',\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Search\"))))))))));\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/containers/Wall/Filter/Filter.js"],"names":["React","Button","Checkbox","Divider","Grid","Segment","InputRange","SearchTags","Aux","DEFAULT_STATE","distanceRange","ageRange","min","max","popularityRange","loading","checked","Filter","Component","constructor","props","handleChange","value","id","_mounted","setState","handleClick","interests","innerRef","current","state","length","console","log","searchMatch","activeCheckBox","clearValue","disableCheckBox","createRef","componentDidMount","getDerivedStateFromProps","nextProps","prevState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Checkbox, Divider, Grid, Segment} from \"semantic-ui-react\";\nimport InputRange from \"react-input-range\";\nimport SearchTags from \"../SearchTags/SearchTags\";\nimport 'react-input-range/lib/css/index.css';\nimport Aux from \"../../../hoc/Aux\";\n\nconst DEFAULT_STATE = {\n    distanceRange: 250,\n    ageRange: {\n        min: 18,\n        max: 27,\n    },\n    popularityRange: {\n        min: 0,\n        max: 50,\n    },\n    loading: false,\n    checked: true,\n};\n\nclass Filter extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n        this.state.loading = true;\n        this.innerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    // Filter\n    handleChange = async(value, id) => {\n        if (id === \"distanceRange\")\n            this._mounted && this.setState({distanceRange: value});\n        else if (id === \"ageRange\")\n            this._mounted && this.setState({ageRange: value});\n        else if (id === \"popularityRange\")\n            this._mounted && this.setState({popularityRange: value});\n    };\n\n    // Search click\n    handleClick = () => {\n        let interests = [];\n        if (this.innerRef.current && this.innerRef.current.state.value && this.innerRef.current.state.value.length > 0)\n            interests = this.innerRef.current.state.value.length;\n        console.log(interests);\n        this.props.searchMatch(\n            this.state.distanceRange,\n            this.state.ageRange,\n            this.state.popularityRange,\n            interests\n        );\n    };\n\n    activeCheckBox = () => {\n        if (this.state.checked === false) {\n            this.innerRef.current.clearValue();\n            this.setState({checked: true})\n        }\n    };\n    disableCheckBox = () => {\n        if (this.state.checked === true) {\n            this.setState({checked: false})\n        }\n    };\n    static getDerivedStateFromProps(nextProps, prevState){\n        if (nextProps.loading !== prevState.loading)\n            return {loading: nextProps.loading};\n        return null\n    }\n    render(){\n        const {distanceRange, loading, checked, ageRange, popularityRange} = this.state;\n        return (\n            <Aux>\n                <Grid.Column mobile={16} tablet={6} computer={6} largeScreen={4} widescreen={3}>\n                    <Segment inverted className=\"SegmentFilter\">\n                        <div className=\"filterContainer\">\n                            <Grid.Row>\n                                <div className=\"DistanceRangeContainer\">\n                                    <h1 className=\"DistanceRangeTitle\"><strong>Distance</strong>\n                                        <span className=\"RangeTitle\">\n                                            0 - {distanceRange} km\n                                        </span></h1>\n                                </div>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <InputRange\n                                    maxValue={5000}\n                                    minValue={0}\n                                    onChange={(value) => this.setState({distanceRange: value})}\n                                    value={distanceRange} />\n                            </Grid.Row>\n                            <Divider hidden/>\n                            <Grid.Row>\n                                <div className=\"DistanceRangeContainer\">\n                                    <h1 className=\"DistanceRangeTitle\"><strong>Age</strong> <span className=\"RangeTitle\"> {ageRange.min} - {ageRange.max}</span></h1>\n                                </div>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <InputRange\n                                    maxValue={99}\n                                    minValue={18}\n                                    onChange={(value) => this.setState({ageRange: value})}\n                                    value={ageRange} />\n                            </Grid.Row>\n                            <Divider hidden/>\n                            <Grid.Row>\n                                <div className=\"DistanceRangeContainer\">\n                                    <h1 className=\"DistanceRangeTitle\"><strong>Popularity</strong> <span className=\"RangeTitle\"> {popularityRange.min} - {popularityRange.max}</span></h1>\n                                </div>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <InputRange\n                                    maxValue={500}\n                                    minValue={0}\n                                    onChange={(value) => this.setState({popularityRange: value})}\n                                    value={popularityRange} />\n                            </Grid.Row>\n                            <Divider hidden/>\n                            <Segment className={'bottomFilter'}>\n                                <Grid columns={'equal'}>\n                                    <Grid.Row  >\n                                        <Grid.Column width={6}>\n                                                <Grid.Row centered>\n                                                    <Checkbox checked={checked} onClick={checked ? this.disableCheckBox : this.activeCheckBox} toggle />\n                                                    <p id={'includeMyInterests'}>Use my interests</p>\n                                                </Grid.Row>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Grid.Row>\n                                                <SearchTags activeCheckBox={this.activeCheckBox} disableCheckBox={this.disableCheckBox} ref={this.innerRef} />\n                                            </Grid.Row>\n                                            <Grid.Row centered textAlign={'center'}>\n                                                <Button\n                                                    className={'searchButton'}\n                                                    id=\"search\"\n                                                    size='large'\n                                                    fluid\n                                                    loading={loading}\n                                                    floated={'right'}\n                                                    onClick={this.handleClick}>\n                                                    Search\n                                                </Button>\n                                            </Grid.Row>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            </Segment>\n                        </div>\n                    </Segment>\n                </Grid.Column>\n            </Aux>\n        )\n    }\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}