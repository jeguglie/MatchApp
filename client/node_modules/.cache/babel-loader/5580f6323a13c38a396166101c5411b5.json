{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/UserMiniCard/UserMiniCard.js\";\nimport React from 'react';\nimport { Card, Grid, Image, Icon } from 'semantic-ui-react';\nimport equal from 'fast-deep-equal';\nconst DEFAULT_STATE = {\n  users: []\n};\n\nclass UserMiniCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ageFilter = order => {\n      let users = this.state.users;\n\n      if (order === true) {\n        users.sort(function (a, b) {\n          if (b.age === a.age) return b.points - a.points;\n          return b.age - a.age;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n        return;\n      } else {\n        users.sort(function (a, b) {\n          if (b.age === a.age) return b.points - a.points;\n          return a.age - b.age;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n      }\n    };\n\n    this.distanceFilter = order => {\n      let users = this.state.users;\n\n      if (order) {\n        users.sort(function (a, b) {\n          if (b.distance === a.distance) return b.points - a.points;\n          return b.distance - a.distance;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n        return;\n      } else {\n        users.sort(function (a, b) {\n          if (b.distance === a.distance) return b.points - a.points;\n          return a.distance - b.distance;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n      }\n    };\n\n    this.state = { ...DEFAULT_STATE\n    };\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.users, prevProps.users)) {\n      this._mounted && this.setState({\n        users: this.props.users\n      });\n    }\n  } // Filters\n\n\n  render() {\n    const {\n      users\n    } = this.state;\n\n    if (users && users.length) {\n      return users.map((user, i) => {\n        const {\n          user_id,\n          img_link,\n          firstname,\n          likes,\n          distance,\n          age\n        } = user;\n        return React.createElement(Grid.Column, {\n          key: i,\n          mobile: 4,\n          tablet: 8,\n          computer: 4,\n          largeScreen: 4,\n          widescreen: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Card, {\n          key: i,\n          className: \"userMinCard\",\n          onClick: () => this.props.clickedUser(user_id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: img_link,\n          wrapped: true,\n          ui: false,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, firstname, React.createElement(\"span\", {\n          className: \"MinCardAge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \", \", age)), React.createElement(Card.Meta, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, Math.round(distance), \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"km\")), React.createElement(\"span\", {\n          className: 'likesSpan',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"*/}\", React.createElement(Icon, {\n          name: \"heart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), likes, \" Likes\")))));\n      });\n    }\n\n    return null;\n  }\n\n}\n\nexport default UserMiniCard;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/UserMiniCard/UserMiniCard.js"],"names":["React","Card","Grid","Image","Icon","equal","DEFAULT_STATE","users","UserMiniCard","Component","constructor","props","ageFilter","order","state","sort","a","b","age","points","_mounted","setState","distanceFilter","distance","componentDidMount","componentDidUpdate","prevProps","render","length","map","user","i","user_id","img_link","firstname","likes","clickedUser","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Grid, Image, Icon } from 'semantic-ui-react';\nimport equal from 'fast-deep-equal';\n\nconst DEFAULT_STATE = {\n    users: [],\n};\n\n\nclass UserMiniCard extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    componentDidUpdate(prevProps) {\n        if(!equal(this.props.users, prevProps.users)) {\n            this._mounted && this.setState({users: this.props.users});\n        }\n    }\n\n    // Filters\n    ageFilter = (order) => {\n        let users = this.state.users;\n        if (order === true) {\n            users.sort(function (a, b) {\n                if (b.age === a.age)\n                    return b.points - a.points;\n                return b.age - a.age;\n            });\n            this._mounted && this.setState({users: users});\n            return ;\n        }\n        else{\n            users.sort(function (a, b) {\n                if (b.age === a.age)\n                    return b.points - a.points;\n                return a.age - b.age;\n            });\n            this._mounted && this.setState({users: users});\n        }\n    };\n\n    distanceFilter = (order) => {\n        let users = this.state.users;\n        if (order) {\n            users.sort(function (a, b) {\n                if (b.distance === a.distance)\n                    return b.points - a.points;\n                return b.distance - a.distance;\n            });\n            this._mounted && this.setState({users: users});\n            return ;\n        }\n        else {\n            users.sort(function (a, b) {\n                if (b.distance === a.distance)\n                    return b.points - a.points;\n                return a.distance - b.distance;\n            });\n            this._mounted && this.setState({users: users});\n        }\n    };\n\n    render() {\n        const { users} = this.state;\n        if (users && users.length) {\n            return users.map((user, i) => {\n                const {user_id, img_link, firstname, likes, distance,  age} = user;\n                return (\n                    <Grid.Column key={i} mobile={4} tablet={8} computer={4} largeScreen={4} widescreen={2}>\n\n                        <Card\n                            key={i}\n                            className=\"userMinCard\"\n                            onClick={() => this.props.clickedUser(user_id)}>\n                            <Image\n                                src={img_link}\n                                wrapped\n                                ui={false}\n                                size='large' />\n                            <Card.Content>\n                                <Card.Header>{firstname}<span className=\"MinCardAge\">, {age}</span></Card.Header>\n                                <Card.Meta>\n                                    <span className='date'>{Math.round(distance)} <strong>km</strong></span>\n                                    <span className={'likesSpan'}>*/}\n                                                <Icon name='heart' />\n                                                {likes} Likes\n                                            </span>\n                                </Card.Meta>\n                            </Card.Content>\n                            {/*<Card.Content extra>*/}\n                            {/*    <span className={'likesSpan'}>*/}\n                            {/*        <Icon name='heart' />*/}\n                            {/*        {likes} Likes*/}\n                            {/*    </span>*/}\n                            {/*</Card.Content>*/}\n                        </Card>\n                    </Grid.Column>\n                )\n            });\n        }\n        return null;\n    }\n}\nexport default UserMiniCard;"]},"metadata":{},"sourceType":"module"}