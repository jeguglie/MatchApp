{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/UserMiniCard/UserMiniCard.js\";\nimport React from 'react';\nimport { Card, Grid, Image, Icon, Loader, Dimmer } from 'semantic-ui-react';\nimport equal from 'fast-deep-equal';\nconst DEFAULT_STATE = {\n  users: [],\n  loading: false\n};\n\nclass UserMiniCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ageFilter = order => {\n      console.log(1);\n      let users = this.state.users;\n      this.setState({\n        loading: true\n      });\n\n      if (order === true) {\n        users.sort(function (a, b) {\n          if (b.age === a.age) return b.points - a.points;\n          return b.age - a.age;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n        return;\n      } else {\n        users.sort(function (a, b) {\n          if (b.age === a.age) return b.points - a.points;\n          return a.age - b.age;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n      }\n    };\n\n    this.distanceFilter = order => {\n      let users = this.state.users;\n\n      if (order) {\n        users.sort(function (a, b) {\n          if (b.distance === a.distance) return b.points - a.points;\n          return b.distance - a.distance;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n        return;\n      } else {\n        users.sort(function (a, b) {\n          if (b.distance === a.distance) return b.points - a.points;\n          return a.distance - b.distance;\n        });\n        this._mounted && this.setState({\n          users: users\n        });\n      }\n    };\n\n    this.state = { ...DEFAULT_STATE\n    };\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.users, prevProps.users)) {\n      this._mounted && this.setState({\n        users: this.props.users\n      });\n    }\n\n    if (!equal(this.props.loading, prevProps.loading)) {\n      this._mounted && this.setState({\n        loading: this.props.loading\n      });\n    }\n  } // Filters\n\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n\n    if (users && users.length) {\n      return users.map((user, i) => {\n        const {\n          user_id,\n          img_link,\n          firstname,\n          likes,\n          distance,\n          age\n        } = user;\n        return React.createElement(Grid.Column, {\n          key: i,\n          mobile: 4,\n          tablet: 8,\n          computer: 4,\n          largeScreen: 4,\n          widescreen: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Card, {\n          key: i,\n          className: \"userMinCard\",\n          onClick: () => this.props.clickedUser(user_id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, this.props.userIdFocus && this.props.userIdFocus === user_id ? React.createElement(Dimmer, {\n          id: 'DimmerUserMinCard',\n          active: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })) : null, React.createElement(Image, {\n          src: img_link,\n          wrapped: true,\n          ui: false,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, firstname, React.createElement(\"span\", {\n          className: \"MinCardAge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \", \", age)), React.createElement(Card.Meta, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, Math.round(distance), \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"km\")))), React.createElement(Card.Content, {\n          extra: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: 'likesSpan',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"heart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), likes, \" Likes\"))));\n      });\n    }\n\n    return null;\n  }\n\n}\n\nexport default UserMiniCard;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/UserMiniCard/UserMiniCard.js"],"names":["React","Card","Grid","Image","Icon","Loader","Dimmer","equal","DEFAULT_STATE","users","loading","UserMiniCard","Component","constructor","props","ageFilter","order","console","log","state","setState","sort","a","b","age","points","_mounted","distanceFilter","distance","componentDidMount","componentDidUpdate","prevProps","render","length","map","user","i","user_id","img_link","firstname","likes","clickedUser","userIdFocus","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Grid, Image, Icon, Loader, Dimmer } from 'semantic-ui-react';\nimport equal from 'fast-deep-equal';\n\nconst DEFAULT_STATE = {\n    users: [],\n    loading: false,\n};\n\n\nclass UserMiniCard extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    componentDidUpdate(prevProps) {\n        if(!equal(this.props.users, prevProps.users)) {\n            this._mounted && this.setState({users: this.props.users});\n        }\n        if(!equal(this.props.loading, prevProps.loading)) {\n            this._mounted && this.setState({loading: this.props.loading});\n        }\n    }\n\n    // Filters\n    ageFilter = (order) => {\n        console.log(1);\n        let users = this.state.users;\n        this.setState({loading: true});\n        if (order === true) {\n            users.sort(function (a, b) {\n                if (b.age === a.age)\n                    return b.points - a.points;\n                return b.age - a.age;\n            });\n            this._mounted && this.setState({users: users});\n            return ;\n        }\n        else{\n            users.sort(function (a, b) {\n                if (b.age === a.age)\n                    return b.points - a.points;\n                return a.age - b.age;\n            });\n            this._mounted && this.setState({users: users});\n        }\n    };\n\n    distanceFilter = (order) => {\n        let users = this.state.users;\n        if (order) {\n            users.sort(function (a, b) {\n                if (b.distance === a.distance)\n                    return b.points - a.points;\n                return b.distance - a.distance;\n            });\n            this._mounted && this.setState({users: users});\n            return ;\n        }\n        else {\n            users.sort(function (a, b) {\n                if (b.distance === a.distance)\n                    return b.points - a.points;\n                return a.distance - b.distance;\n            });\n            this._mounted && this.setState({users: users});\n        }\n    };\n\n    render() {\n        const { users, loading } = this.state;\n        if (users && users.length) {\n            return users.map((user, i) => {\n                const {user_id, img_link, firstname, likes, distance,  age} = user;\n                return (\n                    <Grid.Column key={i} mobile={4} tablet={8} computer={4} largeScreen={4} widescreen={2}>\n\n                        <Card\n                            key={i}\n                            className=\"userMinCard\"\n                            onClick={() => this.props.clickedUser(user_id)}>\n                            {\n                                this.props.userIdFocus && this.props.userIdFocus === user_id ?\n                                    <Dimmer id={'DimmerUserMinCard'} active={loading}>\n                                        <Loader />\n                                    </Dimmer> : null\n                            }\n                            <Image\n                                src={img_link}\n                                wrapped\n                                ui={false}\n                                size='large' />\n                            <Card.Content>\n                                <Card.Header>{firstname}<span className=\"MinCardAge\">, {age}</span></Card.Header>\n                                <Card.Meta>\n                                    <span className='date'>{Math.round(distance)} <strong>km</strong></span>\n                                </Card.Meta>\n                            </Card.Content>\n                            <Card.Content extra>\n                                <span className={'likesSpan'}>\n                                    <Icon name='heart' />\n                                    {likes} Likes\n                                </span>\n                            </Card.Content>\n                        </Card>\n                    </Grid.Column>\n                )\n            });\n        }\n        return null;\n    }\n}\nexport default UserMiniCard;"]},"metadata":{},"sourceType":"module"}