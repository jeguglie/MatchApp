{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/EditProfil/Location/Location.js\";\nimport React from 'react';\nimport { Button, Segment, Grid, Progress, Icon, Loader, Dimmer, Divider } from 'semantic-ui-react';\nimport VALIDATE from \"../../../utils/validation\";\nimport LocationComponent from \"./LocationComponent/LocationComponent\";\nimport SimpleMap from \"./Map/Map\";\nimport API from '../../../utils/API';\nimport { store } from 'react-notifications-component'; // import PlacesWithStandaloneSearchBox from \"./SearchBoxGoogleMap/SearchBoxGoogleMap\";\n\nconst DEFAULT_STATE = {\n  loading: false,\n  complete: 0,\n  innerRef: null\n};\n\nclass Location extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.componentDidUpdate = async (props, state) => {\n      if (props.complete !== state.complete) this._mounted && this.setState({\n        complete: props.complete\n      });\n      if (props.loading !== state.loading) this._mounted && this.setState({\n        loading: props.loading\n      });\n    };\n\n    this.getInnerRef = ref => {\n      this.innerRef = ref;\n    };\n\n    this.prevSection = () => {\n      this._mounted && this.setState({\n        loading: true\n      });\n      this.props.prevsection();\n    };\n\n    this.getLocation = async () => {\n      this.innerRef && this.innerRef.getLocation();\n\n      if (this.innerRef && this._mounted && this.innerRef.state && this.innerRef.state.coords) {\n        this.innerRef && this._mounted && this.setState({\n          innerRef: this.innerRef\n        });\n        await API.updategeolocate(this.innerRef.state.coords.latitude, this.innerRef.state.coords.longitude).then(response => {\n          if (response.status === 200) {\n            store.addNotification({\n              title: 'Your position was successfully updated',\n              message: \"Start to match !\",\n              type: \"success\",\n              insert: \"top\",\n              container: \"top-right\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: {\n                duration: 10000,\n                onScreen: true\n              }\n            });\n          }\n        }).catch(e => console.log(e));\n      }\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this.state.complete = this.props.complete; // Bind for location REF\n\n    this.getInnerRef = this.getInnerRef.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this._mounted = false;\n  }\n\n  async componentDidMount() {\n    this._mounted = true;\n    this._mounted && this.setState({\n      loading: true\n    });\n    await VALIDATE.sleepLoader(200);\n    this._mounted && this.setState({\n      complete: this.props.complete\n    });\n    this._mounted && this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const getInnerRef = this.getInnerRef,\n          getLocation = this.getLocation,\n          prevSection = this.prevSection;\n    const _this$state = this.state,\n          complete = _this$state.complete,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      className: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"massive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Progress, {\n      percent: complete,\n      progress: true,\n      indicating: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CompleteTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Add your location\"))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(LocationComponent, {\n      ref: getInnerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shapeLastStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"WrapMap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapAddLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(SimpleMap, {\n      innerRef: this.state.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))), React.createElement(Segment, {\n      basic: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: getLocation,\n      className: \"buttonLastStep\",\n      size: \"big\",\n      content: \"Geolocate my position\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      horizontal: true,\n      id: \"ordivider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Or\"), React.createElement(Button, {\n      onClick: this.props.useCustomAddress,\n      className: \"buttonLastStep\",\n      size: \"big\",\n      content: \"Use a custom address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow circle left\",\n      size: \"huge\",\n      onClick: prevSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/EditProfil/Location/Location.js"],"names":["React","Button","Segment","Grid","Progress","Icon","Loader","Dimmer","Divider","VALIDATE","LocationComponent","SimpleMap","API","store","DEFAULT_STATE","loading","complete","innerRef","Location","Component","constructor","props","componentDidUpdate","state","_mounted","setState","getInnerRef","ref","prevSection","prevsection","getLocation","coords","updategeolocate","latitude","longitude","then","response","status","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","catch","e","console","log","bind","componentDidMount","sleepLoader","render","useCustomAddress"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Segment, Grid, Progress, Icon, Loader, Dimmer, Divider} from 'semantic-ui-react';\nimport VALIDATE from \"../../../utils/validation\";\nimport LocationComponent from \"./LocationComponent/LocationComponent\";\nimport SimpleMap from \"./Map/Map\";\nimport API from '../../../utils/API';\nimport { store } from 'react-notifications-component';\n\n// import PlacesWithStandaloneSearchBox from \"./SearchBoxGoogleMap/SearchBoxGoogleMap\";\n\nconst DEFAULT_STATE = {\n    loading: false,\n    complete: 0,\n    innerRef: null,\n\n};\nclass Location extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.state.complete = this.props.complete;\n        // Bind for location REF\n        this.getInnerRef = this.getInnerRef.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n        this._mounted = false;\n    }\n\n    async componentDidMount() {\n        this._mounted = true;\n        this._mounted && this.setState({loading: true});\n        await VALIDATE.sleepLoader(200);\n        this._mounted && this.setState({complete: this.props.complete});\n        this._mounted && this.setState({loading: false});\n    }\n\n    componentDidUpdate = async(props, state) =>{\n        if (props.complete !== state.complete)\n            this._mounted && this.setState({complete: props.complete})\n        if (props.loading !== state.loading)\n            this._mounted && this.setState({loading: props.loading})\n    };\n\n    // React geolocate\n    innerRef;\n    getInnerRef = (ref) => {\n        this.innerRef = ref;\n\n    };\n    prevSection = () => {\n        this._mounted && this.setState({loading: true});\n        this.props.prevsection();\n    };\n\n    getLocation = async() => {\n        this.innerRef && this.innerRef.getLocation();\n        if (this.innerRef && this._mounted &&  this.innerRef.state && this.innerRef.state.coords) {\n            this.innerRef && this._mounted && this.setState({innerRef: this.innerRef});\n            await API.updategeolocate(this.innerRef.state.coords.latitude, this.innerRef.state.coords.longitude)\n                .then(response => {\n                    if (response.status === 200) {\n                        store.addNotification({\n                            title: 'Your position was successfully updated',\n                            message: \"Start to match !\",\n                            type: \"success\",\n                            insert: \"top\",\n                            container: \"top-right\",\n                            animationIn: [\"animated\", \"fadeIn\"],\n                            animationOut: [\"animated\", \"fadeOut\"],\n                            dismiss: {\n                                duration: 10000,\n                                onScreen: true\n                            }\n                        });\n                    }\n                })\n                .catch(e => console.log(e));\n        }\n    };\n\n\n\n    render() {\n        const {getInnerRef, getLocation, prevSection } = this;\n        const {complete, loading} = this.state;\n        return (\n                <div className=\"Location\">\n                    <Dimmer active={loading}>\n                        <Loader size='massive'/>\n                    </Dimmer>\n                    <Progress\n                        percent={complete}\n                        progress\n                        indicating\n                        size=\"medium\"\n                    />\n                    <Grid textAlign=\"center\">\n                        <Grid.Row centered>\n                            <h1 className=\"CompleteTitle\">\n                                Add your location\n                            </h1>\n                        </Grid.Row>\n                    </Grid>\n                    <Divider hidden />\n                    <Divider hidden />\n                    <LocationComponent\n                        ref={getInnerRef}\n                    />\n                    <div className=\"shapeLastStep\"></div>\n                    <div className=\"WrapMap\">\n                    <Segment>\n                        <div className=\"mapAddLocation\">\n                            <SimpleMap innerRef={this.state.innerRef} />\n                        </div>\n                    </Segment>\n                    </div>\n                    <Segment basic textAlign='center'>\n                        <Button\n                            onClick={getLocation}\n                            className=\"buttonLastStep\"\n                            size=\"big\"\n                            content='Geolocate my position' />\n                        <Divider horizontal id={\"ordivider\"}>Or</Divider>\n                        <Button\n                            onClick={this.props.useCustomAddress}\n                            className=\"buttonLastStep\"\n                            size=\"big\"\n                            content='Use a custom address' />\n                    </Segment>\n                    <Grid>\n                        <Divider hidden />\n                        <Grid.Row centered >\n                            <Icon\n                                className=\"EditProfilArrow\"\n                                name='arrow circle left'\n                                size=\"huge\"\n                                onClick={prevSection}/>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n\n        )\n    }\n}\nexport default Location;"]},"metadata":{},"sourceType":"module"}