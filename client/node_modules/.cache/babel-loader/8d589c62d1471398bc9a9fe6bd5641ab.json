{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition, Grid, Divider } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nimport ModalUser from \"../../ModalUser/ModalUser\";\n\nconst moment = require('moment');\n\nexport default class NotificationsHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      this.setState({\n        notifications: this.props.notifications\n      });\n    };\n\n    this.handleDismiss = async (i, notif_id) => {\n      if (this._mounted) {\n        this.state.notifications.splice(i, 1);\n        this.setState({\n          notifications: this.state.notifications\n        });\n        await API.deletenotif(notif_id).catch(error => console.log(error));\n      }\n    };\n\n    this.userLike = async userIdFocus => {\n      await API.userLike(userIdFocus).then(response => {\n        if (response.status === 200 && typeof response.data.liked != 'undefined') {\n          this._mounted && this.setState({\n            liked: response.data.liked\n          }); // Socket\n\n          if (response.data.liked === true) this.props.s_like(userIdFocus);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleClose = () => {\n      this._mounted && this.setState({\n        userIdFocus: null,\n        showModal: false,\n        liked: false\n      });\n    };\n\n    this.clickedUser = async userIdFocus => {\n      // Send notification\n      this.props.sWallVisit(userIdFocus);\n      await API.checkUserLike(userIdFocus).then(response => {\n        if (response.status === 200 && typeof response.data.liked != 'undefined') {\n          API.wallvisit(userIdFocus);\n          this._mounted && this.setState({\n            liked: response.data.liked\n          });\n        }\n      }).catch(e => console.log(e));\n    };\n\n    this.state = {\n      notifications: [],\n      liked: false,\n      showModal: false,\n      interests: []\n    };\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'Visited your profile  ';\n\n      case 2:\n        return 'Send you a message  ';\n\n      case 3:\n        return 'Liked you back  ';\n\n      case 4:\n        return 'Remove his like  ';\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          userIdFocus = _this$state.userIdFocus,\n          liked = _this$state.liked,\n          showModal = _this$state.showModal,\n          interests = _this$state.interests,\n          notifications = _this$state.notifications;\n    return React.createElement(Grid, {\n      columns: 1,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ModalUser, {\n      showModal: showModal,\n      userid: userIdFocus,\n      liked: liked,\n      userLike: this.userLike,\n      handleClose: this.handleClose,\n      userInterests: interests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      textAlign: 'left',\n      mobile: 16,\n      tablet: 8,\n      computer: 8,\n      largeScreen: 8,\n      widescreen: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NotificationsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Notifications history\"))), React.createElement(\"div\", {\n      className: \"NotificationsHistoric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Transition.Group, {\n      as: List,\n      duration: 200,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, notifications.length < 1 ? React.createElement(\"div\", {\n      className: 'nothingtoshow',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Nothing to show\")) : null, notifications.map((obj, i) => React.createElement(List.Item, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.handleDismiss(i, obj.notif_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(Image, {\n      avatar: true,\n      src: obj.img_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      as: \"a\",\n      className: \"NotifFirstname\",\n      onClick: () => this.clickedUser(obj.user_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, ' ', \" \", obj.firstname), React.createElement(List.Description, {\n      className: \"NotifDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.renderSwitchType(obj.type), \"on \", moment(obj.date).fromNow())), i < notifications.length - 1 ? React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }) : null)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","Transition","Grid","Divider","API","ModalUser","moment","require","NotificationsHistory","Component","constructor","props","componentDidMount","_mounted","setState","notifications","handleDismiss","i","notif_id","state","splice","deletenotif","catch","error","console","log","userLike","userIdFocus","then","response","status","data","liked","s_like","err","handleClose","showModal","clickedUser","sWallVisit","checkUserLike","wallvisit","e","interests","componentWillUnmount","renderSwitchType","type","render","length","map","obj","img_link","user_id","firstname","date","fromNow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {List, Image, Button, Transition, Grid, Divider} from 'semantic-ui-react';\nimport API from '../../../utils/API';\nimport ModalUser from \"../../ModalUser/ModalUser\";\nconst moment = require('moment');\nexport default class NotificationsHistory extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            notifications: [],\n            liked: false,\n            showModal: false,\n            interests: [],\n        };\n        this._mounted = false;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        this.setState({notifications: this.props.notifications});\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'Visited your profile  ';\n            case 2:\n                return 'Send you a message  ';\n            case 3:\n                return 'Liked you back  ';\n            case 4:\n                return 'Remove his like  ';\n        }\n    };\n\n    handleDismiss = async(i, notif_id) => {\n        if (this._mounted) {\n            this.state.notifications.splice(i, 1);\n            this.setState({notifications: this.state.notifications});\n            await API.deletenotif(notif_id)\n                .catch(error => console.log(error));\n        }\n    };\n\n    userLike = async(userIdFocus) => {\n        await API.userLike(userIdFocus)\n            .then(response => {\n                if (response.status === 200 && typeof response.data.liked != 'undefined') {\n                    this._mounted && this.setState({liked: response.data.liked});\n                    // Socket\n                    if (response.data.liked === true)\n                        this.props.s_like(userIdFocus);\n                }\n            })\n            .catch(err => console.log(err));\n    };\n    handleClose = () => {\n        this._mounted && this.setState({ userIdFocus: null, showModal: false, liked: false})\n    };\n\n    clickedUser = async(userIdFocus) => {\n        // Send notification\n        this.props.sWallVisit(userIdFocus);\n        await API.checkUserLike(userIdFocus)\n            .then(response => {\n                if (response.status === 200 && typeof response.data.liked != 'undefined') {\n                    API.wallvisit(userIdFocus);\n                    this._mounted && this.setState({liked: response.data.liked});\n                }\n            })\n            .catch(e => console.log(e));\n\n    };\n    render(){\n        const { userIdFocus, liked, showModal, interests, notifications } = this.state;\n        return (\n            <Grid columns={1} textAlign={'center'}>\n                <ModalUser showModal={showModal} userid={userIdFocus} liked={liked} userLike={this.userLike} handleClose={this.handleClose} userInterests={interests} />\n                <Grid.Column textAlign={'left'} mobile={16} tablet={8} computer={8} largeScreen={8} widescreen={8}>\n                    <div className='NotificationsTitle'>\n                        <Grid.Row >\n                            <h1>Notifications history</h1>\n                        </Grid.Row>\n                    </div>\n                    <div className={\"NotificationsHistoric\"}>\n                        <Grid.Row>\n                            <Transition.Group\n                                as={List}\n                                duration={200}\n                                verticalAlign='middle'\n                            >\n                                {notifications.length < 1 ?\n                                    <div className={'nothingtoshow'}>\n                                        <p>Nothing to show</p>\n                                    </div> :\n                                    null\n                                }\n                                {notifications.map((obj, i) => (\n                                    <List.Item key={i}>\n                                        <List.Content>\n                                            <List.Content floated='right'>\n                                                <Button\n                                                    onClick={() => this.handleDismiss(i, obj.notif_id)}>\n                                                    Dismiss\n                                                </Button>\n                                            </List.Content>\n                                            <Image avatar src={obj.img_link}/>\n                                            <List.Content\n                                                as='a'\n                                                className={\"NotifFirstname\"}\n                                                onClick={() => this.clickedUser(obj.user_id)}\n                                            >\n                                                {' '} {obj.firstname}</List.Content>\n                                            <List.Description className={\"NotifDesc\"}>\n                                                {this.renderSwitchType(obj.type)}\n                                                on {moment(obj.date).fromNow()}\n                                            </List.Description>\n                                        </List.Content>\n                                        {i < notifications.length  - 1? <Divider /> : null}\n                                    </List.Item>\n                                ))}\n                            </Transition.Group>\n                        </Grid.Row>\n                    </div>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}