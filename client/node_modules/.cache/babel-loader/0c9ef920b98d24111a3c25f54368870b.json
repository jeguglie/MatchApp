{"ast":null,"code":"import axios from \"axios\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\nconst burl = process.env === \"production\" ? `https://matchappli.herokuapp.com/api` : `http://localhost:5000/api`;\nexport default {\n  reportuser: function (user_id_reported) {\n    return axios.post(`${burl}/reportuser`, {\n      user_id_reported\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  deletenotif: function (id_notif) {\n    return axios.post(`${burl}/deletenotif`, {\n      id_notif\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  reportuserhide: function (user_id_reported) {\n    return axios.post(`${burl}/reportuserhide`, {\n      user_id_reported\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  reportuserfake: function (user_id_reported) {\n    return axios.post(`${burl}/reportuserfake`, {\n      user_id_reported\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  updategeolocate: function (latitude, longitude) {\n    return axios.post(`${burl}/updategeolocate`, {\n      latitude,\n      longitude\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  changemyemail: function (email, emailconfirm) {\n    return axios.post(`${burl}/changemyemail`, {\n      email,\n      emailconfirm\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  activeaccount: function (token) {\n    return axios.post(`${burl}/activeaccount`, {\n      token\n    });\n  },\n  changepassword: function (token, password, passwordconfirm) {\n    return axios.post(`${burl}/changepassword`, {\n      token,\n      password,\n      passwordconfirm\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  userforgot: function (email) {\n    return axios.post(`${burl}/userforgot`, {\n      email\n    });\n  },\n  login: function (email, password) {\n    return axios.post(`${burl}/login`, {\n      email,\n      password\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  signup: function (lastname, firstname, email, username, password, cpassword) {\n    return axios.post(`${burl}/signup`, {\n      lastname,\n      firstname,\n      email,\n      username,\n      password,\n      cpassword\n    }, {\n      headers: headers\n    });\n  },\n  updateEditProfilValues: function (state) {\n    return axios.post(`${burl}/updateEditProfilValues`, {\n      state\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getEditProfilValues: function (user_id) {\n    return axios.post(`${burl}/getEditProfilValues`, {\n      user_id\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getPhotos: function () {\n    return axios.post(`${burl}/getPhotos`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  addInterests: function (interest) {\n    return axios.post(`${burl}/addInterests`, {\n      interest\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getInterests: () => {\n    return axios.post(`${burl}/getInterests`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getUserInterests: () => {\n    return axios.post(`${burl}/getUserInterests`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getComplete: () => {\n    return axios.post(`${burl}/getComplete`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  withAuth: () => {\n    return axios.get(`${burl}/checkToken`, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  withAuthAdmin: () => {\n    return axios.get(`${burl}/checkTokenAdmin`, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  admin: () => {\n    return axios.post(`${burl}/admin`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  kickuser: user_id => {\n    return axios.post(`${burl}/kickuser`, {\n      user_id\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  deleteInterest: data => {\n    return axios.post(`${burl}/deleteInterest`, {\n      data\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  deleteImage: imgID => {\n    return axios.post(`${burl}/deleteImage`, {\n      imgID\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getUsers: (distanceRange, ageRange, popularityRange, interests) => {\n    return axios.post(`${burl}/getUsers`, {\n      distanceRange,\n      ageRange,\n      popularityRange,\n      interests\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  checkUserView: () => {\n    return axios.post(`${burl}/checkUserView`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getUserIdProfile: userId => {\n    return axios.post(`${burl}/getUserIdProfile`, {\n      userId\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  userLike: userLikedID => {\n    return axios.post(`${burl}/userLike`, {\n      userLikedID\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getNotifications: () => {\n    return axios.post(`${burl}/getNotifications`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getNotifNb: () => {\n    return axios.post(`${burl}/getNotifNb`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  logout: () => {\n    return axios.post(`${burl}/logout`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getMatchedUsers: () => {\n    return axios.post(`${burl}/getMatchedUsers`, {}, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  sendMessage: (user_id, message) => {\n    return axios.post(`${burl}/sendMessage`, {\n      user_id,\n      message\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  },\n  getMessages: user_id_2 => {\n    return axios.post(`${burl}/getMessages`, {\n      user_id_2\n    }, {\n      withCredentials: 'true',\n      headers: headers\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/utils/API.js"],"names":["axios","headers","burl","process","env","reportuser","user_id_reported","post","withCredentials","deletenotif","id_notif","reportuserhide","reportuserfake","updategeolocate","latitude","longitude","changemyemail","email","emailconfirm","activeaccount","token","changepassword","password","passwordconfirm","userforgot","login","signup","lastname","firstname","username","cpassword","updateEditProfilValues","state","getEditProfilValues","user_id","getPhotos","addInterests","interest","getInterests","getUserInterests","getComplete","withAuth","get","withAuthAdmin","admin","kickuser","deleteInterest","data","deleteImage","imgID","getUsers","distanceRange","ageRange","popularityRange","interests","checkUserView","getUserIdProfile","userId","userLike","userLikedID","getNotifications","getNotifNb","logout","getMatchedUsers","sendMessage","message","getMessages","user_id_2"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG;AACZ,kBAAgB;AADJ,CAAhB;AAGA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,KAAgB,YAAhB,GAAgC,sCAAhC,GAAwE,2BAArF;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,UAASC,gBAAT,EAA0B;AAClC,WAAON,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,aADL,EAEH;AACII,MAAAA;AADJ,KAFG,EAKH;AACIE,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GAZU;AAaXQ,EAAAA,WAAW,EAAE,UAASC,QAAT,EAAkB;AAC3B,WAAOV,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,cADL,EAEH;AACIQ,MAAAA;AADJ,KAFG,EAKH;AACIF,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GAxBU;AAyBXU,EAAAA,cAAc,EAAE,UAASL,gBAAT,EAA0B;AACtC,WAAON,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,iBADL,EAEH;AACII,MAAAA;AADJ,KAFG,EAKH;AACIE,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GApCU;AAqCXW,EAAAA,cAAc,EAAE,UAASN,gBAAT,EAA0B;AACtC,WAAON,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,iBADL,EAEH;AACII,MAAAA;AADJ,KAFG,EAKH;AACIE,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GAhDU;AAiDXY,EAAAA,eAAe,EAAE,UAASC,QAAT,EAAmBC,SAAnB,EAA6B;AAC1C,WAAOf,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,kBADL,EAEH;AACIY,MAAAA,QADJ;AACcC,MAAAA;AADd,KAFG,EAKH;AACIP,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GA5DU;AA6DXe,EAAAA,aAAa,EAAE,UAASC,KAAT,EAAgBC,YAAhB,EAA6B;AACxC,WAAOlB,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,gBADL,EAEH;AACIe,MAAAA,KADJ;AACWC,MAAAA;AADX,KAFG,EAKH;AACIV,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GAxEU;AAyEXkB,EAAAA,aAAa,EAAE,UAASC,KAAT,EAAe;AAC1B,WAAOpB,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,gBADL,EAEH;AACIkB,MAAAA;AADJ,KAFG,CAAP;AAMH,GAhFU;AAiFXC,EAAAA,cAAc,EAAE,UAASD,KAAT,EAAgBE,QAAhB,EAA0BC,eAA1B,EAA0C;AACtD,WAAOvB,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,iBADL,EAEH;AACIkB,MAAAA,KADJ;AACWE,MAAAA,QADX;AACqBC,MAAAA;AADrB,KAFG,EAKP;AACQf,MAAAA,eAAe,EAAE,MADzB;AAEQP,MAAAA,OAAO,EAAEA;AAFjB,KALO,CAAP;AAUH,GA5FU;AA6FXuB,EAAAA,UAAU,EAAE,UAASP,KAAT,EAAgB;AACxB,WAAOjB,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,aADL,EAEH;AACIe,MAAAA;AADJ,KAFG,CAAP;AAMH,GApGU;AAqGXQ,EAAAA,KAAK,EAAE,UAASR,KAAT,EAAgBK,QAAhB,EAA0B;AAC7B,WAAOtB,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,QADL,EAEH;AACIe,MAAAA,KADJ;AAEIK,MAAAA;AAFJ,KAFG,EAMH;AACId,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KANG,CAAP;AAWH,GAjHU;AAkHXyB,EAAAA,MAAM,EAAE,UAASC,QAAT,EAAmBC,SAAnB,EAA8BX,KAA9B,EAAqCY,QAArC,EAA+CP,QAA/C,EAAyDQ,SAAzD,EAAoE;AACxE,WAAO9B,KAAK,CAACO,IAAN,CACF,GAAGL,IAAK,SADN,EAEH;AAACyB,MAAAA,QAAD;AAAWC,MAAAA,SAAX;AAAsBX,MAAAA,KAAtB;AAA6BY,MAAAA,QAA7B;AAAuCP,MAAAA,QAAvC;AAAiDQ,MAAAA;AAAjD,KAFG,EAGH;AACI7B,MAAAA,OAAO,EAAEA;AADb,KAHG,CAAP;AAOH,GA1HU;AA2HX8B,EAAAA,sBAAsB,EAAE,UAASC,KAAT,EAAgB;AACpC,WAAOhC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,yBADL,EAEH;AACI8B,MAAAA;AADJ,KAFG,EAKH;AACIxB,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GAtIU;AAuIXgC,EAAAA,mBAAmB,EAAE,UAASC,OAAT,EAAkB;AACnC,WAAOlC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,sBADL,EAEH;AACIgC,MAAAA;AADJ,KAFG,EAKH;AACI1B,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KALG,CAAP;AAUH,GAlJU;AAmJXkC,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAOnC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,YADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GA5JU;AA6JXmC,EAAAA,YAAY,EAAE,UAASC,QAAT,EAAkB;AAC5B,WAAOrC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,eADL,EAEH;AAACmC,MAAAA;AAAD,KAFG,EAGH;AACI7B,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAtKU;AAuKXqC,EAAAA,YAAY,EAAE,MAAM;AAChB,WAAOtC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,eADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAhLU;AAiLXsC,EAAAA,gBAAgB,EAAE,MAAM;AACpB,WAAOvC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,mBADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GA1LU;AA2LXuC,EAAAA,WAAW,EAAE,MAAM;AACf,WAAOxC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,cADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GApMU;AAqMXwC,EAAAA,QAAQ,EAAE,MAAM;AACZ,WAAOzC,KAAK,CAAC0C,GAAN,CACF,GAAExC,IAAK,aADL,EAEH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAFG,CAAP;AAOH,GA7MU;AA8MX0C,EAAAA,aAAa,EAAE,MAAM;AACjB,WAAO3C,KAAK,CAAC0C,GAAN,CACF,GAAExC,IAAK,kBADL,EAEH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAFG,CAAP;AAOH,GAtNU;AAuNX2C,EAAAA,KAAK,EAAE,MAAM;AACT,WAAO5C,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,QADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAhOU;AAiOX4C,EAAAA,QAAQ,EAAGX,OAAD,IAAa;AACnB,WAAOlC,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,WADL,EAEH;AAACgC,MAAAA;AAAD,KAFG,EAGH;AACI1B,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GA1OU;AA2OX6C,EAAAA,cAAc,EAAGC,IAAD,IAAU;AACtB,WAAO/C,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,iBADL,EAEH;AAAC6C,MAAAA;AAAD,KAFG,EAGH;AACIvC,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GApPU;AAqPX+C,EAAAA,WAAW,EAAGC,KAAD,IAAW;AACpB,WAAOjD,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,cADL,EAEH;AAAC+C,MAAAA;AAAD,KAFG,EAGH;AACIzC,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GA9PU;AA+PXiD,EAAAA,QAAQ,EAAE,CAACC,aAAD,EAAgBC,QAAhB,EAA0BC,eAA1B,EAA2CC,SAA3C,KAAyD;AAC/D,WAAOtD,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,WADL,EAEH;AAACiD,MAAAA,aAAD;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA,eAA1B;AAA2CC,MAAAA;AAA3C,KAFG,EAGH;AACI9C,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAxQU;AAyQXsD,EAAAA,aAAa,EAAE,MAAM;AACjB,WAAOvD,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,gBADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAlRU;AAmRXuD,EAAAA,gBAAgB,EAAGC,MAAD,IAAY;AAC1B,WAAOzD,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,mBADL,EAEH;AAACuD,MAAAA;AAAD,KAFG,EAGH;AACIjD,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GA5RU;AA6RXyD,EAAAA,QAAQ,EAAGC,WAAD,IAAiB;AACvB,WAAO3D,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,WADL,EAEH;AAACyD,MAAAA;AAAD,KAFG,EAGH;AACInD,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAtSU;AAuSX2D,EAAAA,gBAAgB,EAAE,MAAM;AACpB,WAAO5D,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,mBADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAhTU;AAiTX4D,EAAAA,UAAU,EAAE,MAAM;AACd,WAAO7D,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,aADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GA1TU;AA2TX6D,EAAAA,MAAM,EAAE,MAAM;AACV,WAAO9D,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,SADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GApUU;AAqUX8D,EAAAA,eAAe,EAAE,MAAM;AACnB,WAAO/D,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,kBADL,EAEH,EAFG,EAGH;AACIM,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GA9UU;AA+UX+D,EAAAA,WAAW,EAAE,CAAC9B,OAAD,EAAU+B,OAAV,KAAsB;AAC/B,WAAOjE,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,cADL,EAEH;AAACgC,MAAAA,OAAD;AAAU+B,MAAAA;AAAV,KAFG,EAGH;AACIzD,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH,GAxVU;AAyVXiE,EAAAA,WAAW,EAAGC,SAAD,IAAe;AACxB,WAAOnE,KAAK,CAACO,IAAN,CACF,GAAEL,IAAK,cADL,EAEH;AAACiE,MAAAA;AAAD,KAFG,EAGH;AACI3D,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,OAAO,EAAEA;AAFb,KAHG,CAAP;AAQH;AAlWU,CAAf","sourcesContent":["import axios from \"axios\";\nconst headers = {\n    \"Content-Type\": \"application/json\"\n};\nconst burl = process.env === \"production\" ? `https://matchappli.herokuapp.com/api`: `http://localhost:5000/api` ;\n\nexport default {\n    reportuser: function(user_id_reported){\n        return axios.post(\n            `${burl}/reportuser`,\n            {\n                user_id_reported\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    deletenotif: function(id_notif){\n        return axios.post(\n            `${burl}/deletenotif`,\n            {\n                id_notif\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    reportuserhide: function(user_id_reported){\n        return axios.post(\n            `${burl}/reportuserhide`,\n            {\n                user_id_reported\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    reportuserfake: function(user_id_reported){\n        return axios.post(\n            `${burl}/reportuserfake`,\n            {\n                user_id_reported\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    updategeolocate: function(latitude, longitude){\n        return axios.post(\n            `${burl}/updategeolocate`,\n            {\n                latitude, longitude\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    changemyemail: function(email, emailconfirm){\n        return axios.post(\n            `${burl}/changemyemail`,\n            {\n                email, emailconfirm\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    activeaccount: function(token){\n        return axios.post(\n            `${burl}/activeaccount`,\n            {\n                token\n            },\n        );\n    },\n    changepassword: function(token, password, passwordconfirm){\n        return axios.post(\n            `${burl}/changepassword`,\n            {\n                token, password, passwordconfirm\n            },\n        {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    userforgot: function(email) {\n        return axios.post(\n            `${burl}/userforgot`,\n            {\n                email,\n            },\n        );\n    },\n    login: function(email, password) {\n        return axios.post(\n            `${burl}/login`,\n            {\n                email,\n                password\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    signup: function(lastname, firstname, email, username, password, cpassword) {\n        return axios.post(\n            `${ burl}/signup`,\n            {lastname, firstname, email, username, password, cpassword},\n            {\n                headers: headers\n            }\n        );\n    },\n    updateEditProfilValues: function(state) {\n        return axios.post(\n            `${burl}/updateEditProfilValues`,\n            {\n                state\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getEditProfilValues: function(user_id) {\n        return axios.post(\n            `${burl}/getEditProfilValues`,\n            {\n                user_id,\n            },\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getPhotos: function() {\n        return axios.post(\n            `${burl}/getPhotos`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    addInterests: function(interest){\n        return axios.post(\n            `${burl}/addInterests`,\n            {interest},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getInterests: () => {\n        return axios.post(\n            `${burl}/getInterests`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        );\n    },\n    getUserInterests: () => {\n        return axios.post(\n            `${burl}/getUserInterests`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getComplete: () => {\n        return axios.post(\n            `${burl}/getComplete`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    withAuth: () => {\n        return axios.get(\n            `${burl}/checkToken`,\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    withAuthAdmin: () => {\n        return axios.get(\n            `${burl}/checkTokenAdmin`,\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    admin: () => {\n        return axios.post(\n            `${burl}/admin`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    kickuser: (user_id) => {\n        return axios.post(\n            `${burl}/kickuser`,\n            {user_id},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    deleteInterest: (data) => {\n        return axios.post(\n            `${burl}/deleteInterest`,\n            {data},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    deleteImage: (imgID) => {\n        return axios.post(\n            `${burl}/deleteImage`,\n            {imgID},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getUsers: (distanceRange, ageRange, popularityRange, interests) => {\n        return axios.post(\n            `${burl}/getUsers`,\n            {distanceRange, ageRange, popularityRange, interests},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    checkUserView: () => {\n        return axios.post(\n            `${burl}/checkUserView`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getUserIdProfile: (userId) => {\n        return axios.post(\n            `${burl}/getUserIdProfile`,\n            {userId},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    userLike: (userLikedID) => {\n        return axios.post(\n            `${burl}/userLike`,\n            {userLikedID},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getNotifications: () => {\n        return axios.post(\n            `${burl}/getNotifications`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getNotifNb: () => {\n        return axios.post(\n            `${burl}/getNotifNb`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    logout: () => {\n        return axios.post(\n            `${burl}/logout`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getMatchedUsers: () => {\n        return axios.post(\n            `${burl}/getMatchedUsers`,\n            {},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    sendMessage: (user_id, message) => {\n        return axios.post(\n            `${burl}/sendMessage`,\n            {user_id, message},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    },\n    getMessages: (user_id_2) => {\n        return axios.post(\n            `${burl}/getMessages`,\n            {user_id_2},\n            {\n                withCredentials: 'true',\n                headers: headers\n            }\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}