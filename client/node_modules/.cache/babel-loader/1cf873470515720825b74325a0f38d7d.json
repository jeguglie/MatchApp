{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/Notifications.js\";\nimport React from 'react';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { store } from 'react-notifications-component';\nimport io from 'socket.io-client';\n\nclass Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.s_like = userIdFocus => {\n      this.socket.connected && this.socket.emit(\"like\", userIdFocus);\n    };\n\n    this.s_userlogin = token => {\n      this.socket.connected && this.socket.emit(\"userlogin\", token);\n    };\n\n    this.s_logout = () => {\n      this.socket.connected && this.socket.emit(\"disconnect\");\n    };\n\n    this.state = {\n      userID: null\n    };\n    this.socket = io('http://localhost:8000');\n    this._mounted = false;\n  }\n\n  // Sockets chat\n  s_message_send(to_user_id, message) {\n    this.socket.connected && this.socket.emit(\"message:send\", to_user_id, message);\n  }\n\n  // Sockets\n  s_wallvisit(userIdFocus) {\n    this.socket.connected && this.socket.emit(\"wall:visit\", userIdFocus);\n  }\n\n  s_like_likedback(userIdFocus) {\n    this.socket.connected && this.socket.emit(\"like:likedback\", userIdFocus);\n  }\n\n  s_like_likedbackreturn(userIdFocus) {\n    this.socket.connected && this.socket.emit(\"like:likedbackreturn\", userIdFocus);\n  }\n\n  s_like_unliked(userIdFocus) {\n    this.socket.connected && this.socket.emit(\"like:unlike\", userIdFocus);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    if (window.location !== '/chat') this.socket.on(\"message:receive\", data => {\n      store.addNotification({\n        message: data.useremitter + \" send you a message\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n      this.props.s_message_receive(data.message, data.user_id_emitter, data.user_id_receiver);\n    });\n    this.socket.on(\"like:receive like\", data => {\n      this.props.updateNotifs();\n      store.addNotification({\n        message: data.useremitter + \" liked your profile\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    });\n    this.socket.on(\"wall:visit\", data => {\n      this.props.updateNotifs();\n      store.addNotification({\n        message: data.useremitter + \" visited your profile\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    });\n    this.socket.on(\"like:likedback\", data => {\n      this.props.updateNotifs();\n      this.s_like_likedbackreturn(parseInt(data.userIDemitter));\n      store.addNotification({\n        message: data.useremitter + \" like your profile back. It's a Match !\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    });\n    this.socket.on(\"like:likedbackreturn\", data => {\n      this.props.updateNotifs();\n      store.addNotification({\n        title: \"It's a Match!\",\n        message: \"You and \" + data.useremitter + \" like each others.\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    });\n    this.socket.on(\"like:unlike\", data => {\n      this.props.updateNotifs();\n      store.addNotification({\n        message: data.useremitter + \" unlike your profile\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Notifications\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Notifications;","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/Notifications.js"],"names":["React","ReactNotification","store","io","Notifications","Component","constructor","props","s_like","userIdFocus","socket","connected","emit","s_userlogin","token","s_logout","state","userID","_mounted","s_message_send","to_user_id","message","s_wallvisit","s_like_likedback","s_like_likedbackreturn","s_like_unliked","componentWillUnmount","componentDidMount","window","location","on","data","addNotification","useremitter","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","s_message_receive","user_id_emitter","user_id_receiver","updateNotifs","parseInt","userIDemitter","title","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAO,8CAAP;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AACA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAclBC,MAdkB,GAcRC,WAAD,IAAiB;AAAC,WAAKC,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,MAAjB,EAAyBH,WAAzB,CAAzB;AAA+D,KAdxE;;AAAA,SAelBI,WAfkB,GAeHC,KAAD,IAAW;AAAC,WAAKJ,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,WAAjB,EAA8BE,KAA9B,CAAzB;AAA8D,KAftE;;AAAA,SAgBlBC,QAhBkB,GAgBP,MAAM;AAAC,WAAKL,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,YAAjB,CAAzB;AAAwD,KAhBxD;;AAEd,SAAKI,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKP,MAAL,GAAcP,EAAE,CAAC,uBAAD,CAAhB;AACA,SAAKe,QAAL,GAAgB,KAAhB;AACH;;AAED;AACAC,EAAAA,cAAc,CAACC,UAAD,EAAaC,OAAb,EAAqB;AAAC,SAAKX,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,cAAjB,EAAiCQ,UAAjC,EAA6CC,OAA7C,CAAzB;AAA+E;;AACnH;AACAC,EAAAA,WAAW,CAACb,WAAD,EAAa;AAAC,SAAKC,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,YAAjB,EAA+BH,WAA/B,CAAzB;AAAqE;;AAC9Fc,EAAAA,gBAAgB,CAACd,WAAD,EAAa;AAAC,SAAKC,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,gBAAjB,EAAmCH,WAAnC,CAAzB;AAAyE;;AACvGe,EAAAA,sBAAsB,CAACf,WAAD,EAAa;AAAC,SAAKC,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,sBAAjB,EAAyCH,WAAzC,CAAzB;AAA+E;;AACnHgB,EAAAA,cAAc,CAAChB,WAAD,EAAa;AAAC,SAAKC,MAAL,CAAYC,SAAZ,IAAyB,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,aAAjB,EAAgCH,WAAhC,CAAzB;AAAsE;;AAKlGiB,EAAAA,oBAAoB,GAAG;AACnB,SAAKR,QAAL,GAAgB,KAAhB;AACH;;AAEDS,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,QAAL,GAAgB,IAAhB;AACA,QAAIU,MAAM,CAACC,QAAP,KAAoB,OAAxB,EACI,KAAKnB,MAAL,CAAYoB,EAAZ,CAAe,iBAAf,EAAmCC,IAAD,IAAU;AACxC7B,MAAAA,KAAK,CAAC8B,eAAN,CAAsB;AAClBX,QAAAA,OAAO,EAAEU,IAAI,CAACE,WAAL,GAAmB,qBADV;AAElBC,QAAAA,IAAI,EAAE,SAFY;AAGlBC,QAAAA,MAAM,EAAE,KAHU;AAIlBC,QAAAA,SAAS,EAAE,WAJO;AAKlBC,QAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CALK;AAMlBC,QAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CANI;AAOlBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELC,UAAAA,QAAQ,EAAE;AAFL;AAPS,OAAtB;AAYJ,WAAKlC,KAAL,CAAWmC,iBAAX,CAA6BX,IAAI,CAACV,OAAlC,EAA2CU,IAAI,CAACY,eAAhD,EAAiEZ,IAAI,CAACa,gBAAtE;AACH,KAdG;AAeJ,SAAKlC,MAAL,CAAYoB,EAAZ,CAAe,mBAAf,EAAqCC,IAAD,IAAU;AAC1C,WAAKxB,KAAL,CAAWsC,YAAX;AACA3C,MAAAA,KAAK,CAAC8B,eAAN,CAAsB;AAClBX,QAAAA,OAAO,EAAEU,IAAI,CAACE,WAAL,GAAmB,qBADV;AAElBC,QAAAA,IAAI,EAAE,SAFY;AAGlBC,QAAAA,MAAM,EAAE,KAHU;AAIlBC,QAAAA,SAAS,EAAE,WAJO;AAKlBC,QAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CALK;AAMlBC,QAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CANI;AAOlBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELC,UAAAA,QAAQ,EAAE;AAFL;AAPS,OAAtB;AAYH,KAdD;AAeA,SAAK/B,MAAL,CAAYoB,EAAZ,CAAe,YAAf,EAA8BC,IAAD,IAAU;AACnC,WAAKxB,KAAL,CAAWsC,YAAX;AACA3C,MAAAA,KAAK,CAAC8B,eAAN,CAAsB;AAClBX,QAAAA,OAAO,EAAEU,IAAI,CAACE,WAAL,GAAmB,uBADV;AAElBC,QAAAA,IAAI,EAAE,SAFY;AAGlBC,QAAAA,MAAM,EAAE,KAHU;AAIlBC,QAAAA,SAAS,EAAE,WAJO;AAKlBC,QAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CALK;AAMlBC,QAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CANI;AAOlBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELC,UAAAA,QAAQ,EAAE;AAFL;AAPS,OAAtB;AAYH,KAdD;AAeA,SAAK/B,MAAL,CAAYoB,EAAZ,CAAe,gBAAf,EAAkCC,IAAD,IAAU;AACvC,WAAKxB,KAAL,CAAWsC,YAAX;AACA,WAAKrB,sBAAL,CAA4BsB,QAAQ,CAACf,IAAI,CAACgB,aAAN,CAApC;AACA7C,MAAAA,KAAK,CAAC8B,eAAN,CAAsB;AAClBX,QAAAA,OAAO,EAAEU,IAAI,CAACE,WAAL,GAAmB,yCADV;AAElBC,QAAAA,IAAI,EAAE,SAFY;AAGlBC,QAAAA,MAAM,EAAE,KAHU;AAIlBC,QAAAA,SAAS,EAAE,WAJO;AAKlBC,QAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CALK;AAMlBC,QAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CANI;AAOlBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELC,UAAAA,QAAQ,EAAE;AAFL;AAPS,OAAtB;AAaH,KAhBD;AAiBA,SAAK/B,MAAL,CAAYoB,EAAZ,CAAe,sBAAf,EAAwCC,IAAD,IAAU;AAC7C,WAAKxB,KAAL,CAAWsC,YAAX;AACA3C,MAAAA,KAAK,CAAC8B,eAAN,CAAsB;AAClBgB,QAAAA,KAAK,EAAE,eADW;AAElB3B,QAAAA,OAAO,EAAE,aAAaU,IAAI,CAACE,WAAlB,GAAgC,oBAFvB;AAGlBC,QAAAA,IAAI,EAAE,SAHY;AAIlBC,QAAAA,MAAM,EAAE,KAJU;AAKlBC,QAAAA,SAAS,EAAE,WALO;AAMlBC,QAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CANK;AAOlBC,QAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CAPI;AAQlBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELC,UAAAA,QAAQ,EAAE;AAFL;AARS,OAAtB;AAaH,KAfD;AAgBA,SAAK/B,MAAL,CAAYoB,EAAZ,CAAe,aAAf,EAA+BC,IAAD,IAAU;AACpC,WAAKxB,KAAL,CAAWsC,YAAX;AACA3C,MAAAA,KAAK,CAAC8B,eAAN,CAAsB;AAClBX,QAAAA,OAAO,EAAEU,IAAI,CAACE,WAAL,GAAmB,sBADV;AAElBC,QAAAA,IAAI,EAAE,SAFY;AAGlBC,QAAAA,MAAM,EAAE,KAHU;AAIlBC,QAAAA,SAAS,EAAE,WAJO;AAKlBC,QAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CALK;AAMlBC,QAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CANI;AAOlBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELC,UAAAA,QAAQ,EAAE;AAFL;AAPS,OAAtB;AAYH,KAdD;AAeH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAhIuC;;AAmI5C,eAAe7C,aAAf","sourcesContent":["import React from 'react';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { store } from 'react-notifications-component';\nimport io from 'socket.io-client';\nclass Notifications extends React.Component {\n\n    constructor(props){\n     super(props);\n        this.state = { userID: null };\n        this.socket = io('http://localhost:8000');\n        this._mounted = false;\n    };\n\n    // Sockets chat\n    s_message_send(to_user_id, message){this.socket.connected && this.socket.emit(\"message:send\", to_user_id, message)};\n    // Sockets\n    s_wallvisit(userIdFocus){this.socket.connected && this.socket.emit(\"wall:visit\", userIdFocus)};\n    s_like_likedback(userIdFocus){this.socket.connected && this.socket.emit(\"like:likedback\", userIdFocus)};\n    s_like_likedbackreturn(userIdFocus){this.socket.connected && this.socket.emit(\"like:likedbackreturn\", userIdFocus)};\n    s_like_unliked(userIdFocus){this.socket.connected && this.socket.emit(\"like:unlike\", userIdFocus)};\n    s_like = (userIdFocus) => {this.socket.connected && this.socket.emit(\"like\", userIdFocus)};\n    s_userlogin = (token) => {this.socket.connected && this.socket.emit(\"userlogin\", token)};\n    s_logout = () => {this.socket.connected && this.socket.emit(\"disconnect\")};\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n        if (window.location !== '/chat')\n            this.socket.on(\"message:receive\", (data) => {\n                store.addNotification({\n                    message: data.useremitter + \" send you a message\",\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-right\",\n                    animationIn: [\"animated\", \"fadeIn\"],\n                    animationOut: [\"animated\", \"fadeOut\"],\n                    dismiss: {\n                        duration: 5000,\n                        onScreen: true\n                    }\n                });\n            this.props.s_message_receive(data.message, data.user_id_emitter, data.user_id_receiver)\n        });\n        this.socket.on(\"like:receive like\", (data) => {\n            this.props.updateNotifs();\n            store.addNotification({\n                message: data.useremitter + \" liked your profile\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                    duration: 5000,\n                    onScreen: true\n                }\n            });\n        });\n        this.socket.on(\"wall:visit\", (data) => {\n            this.props.updateNotifs();\n            store.addNotification({\n                message: data.useremitter + \" visited your profile\",\n                type: \"warning\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                    duration: 5000,\n                    onScreen: true\n                }\n            });\n        });\n        this.socket.on(\"like:likedback\", (data) => {\n            this.props.updateNotifs();\n            this.s_like_likedbackreturn(parseInt(data.userIDemitter));\n            store.addNotification({\n                message: data.useremitter + \" like your profile back. It's a Match !\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                    duration: 5000,\n                    onScreen: true\n                }\n            });\n\n        });\n        this.socket.on(\"like:likedbackreturn\", (data) => {\n            this.props.updateNotifs();\n            store.addNotification({\n                title: \"It's a Match!\",\n                message: \"You and \" + data.useremitter + \" like each others.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                    duration: 5000,\n                    onScreen: true\n                }\n            });\n        });\n        this.socket.on(\"like:unlike\", (data) => {\n            this.props.updateNotifs();\n            store.addNotification({\n                message: data.useremitter + \" unlike your profile\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                    duration: 5000,\n                    onScreen: true\n                }\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Notifications\">\n                <ReactNotification />\n            </div>\n        )\n    }\n}\n\nexport default Notifications;"]},"metadata":{},"sourceType":"module"}