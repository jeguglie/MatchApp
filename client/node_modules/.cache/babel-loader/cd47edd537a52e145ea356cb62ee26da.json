{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition, Grid, Divider } from 'semantic-ui-react';\nimport API from '../../../utils/API';\n\nconst moment = require('moment');\n\nexport default class NotificationsHistory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notifications: []\n    };\n    this._mounted = false;\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) {\n          this._mounted && this.setState({\n            notifications: response.data.notifications\n          }, () => console.log(this.state.notifications));\n        }\n      }).catch(e => console.log(e));\n    };\n\n    this.handleDismiss = i => {\n      if (this._mounted) {\n        let notifications = this.state.notifications;\n        let removed = notifications.splice(i, 1);\n        this.setState({\n          notifications: notifications\n        }, () => console.log(this.state.notifications));\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'visited your profile  ';\n\n      case 2:\n        return 'send you a message  ';\n\n      case 3:\n        return 'liked you back  ';\n\n      case 4:\n        return 'remove his like  ';\n    }\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      columns: 1,\n      textAlign: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      textAlign: 'left',\n      mobile: 16,\n      tablet: 12,\n      computer: 12,\n      largeScreen: 12,\n      widescreen: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NotificationsHistoric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Transition.Group, {\n      as: List,\n      duration: 200,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.notifications.map((obj, i) => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.handleDismiss(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(Image, {\n      avatar: true,\n      src: obj.img_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, obj.firstname), React.createElement(List.Description, {\n      className: \"NotifDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.renderSwitchType(obj.type), \"on \", moment(obj.date).fromNow())), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","Transition","Grid","Divider","API","moment","require","NotificationsHistory","Component","state","notifications","_mounted","componentDidMount","getNotifications","then","response","status","setState","data","console","log","catch","e","handleDismiss","i","removed","splice","componentWillUnmount","renderSwitchType","type","render","map","obj","img_link","firstname","date","fromNow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,UAA7B,EAAyCC,IAAzC,EAA+CC,OAA/C,QAA6D,mBAA7D;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,eAAe,MAAMC,oBAAN,SAAmCV,KAAK,CAACW,SAAzC,CAAkD;AAAA;AAAA;AAAA,SAE7DC,KAF6D,GAErD;AACJC,MAAAA,aAAa,EAAE;AADX,KAFqD;AAAA,SAK7DC,QAL6D,GAKlD,KALkD;;AAAA,SAM7DC,iBAN6D,GAMzC,YAAW;AAC3B,WAAKD,QAAL,GAAgB,IAAhB;AACA,YAAMP,GAAG,CAACS,gBAAJ,GACDC,IADC,CACIC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAKL,QAAL,IAAiB,KAAKM,QAAL,CAAc;AAACP,YAAAA,aAAa,EAAEK,QAAQ,CAACG,IAAT,CAAcR;AAA9B,WAAd,EAA4D,MAAMS,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,aAAvB,CAAlE,CAAjB;AACH;AACJ,OALC,EAMDW,KANC,CAMKC,CAAC,IAAIH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CANV,CAAN;AAOH,KAf4D;;AAAA,SAkC7DC,aAlC6D,GAkC5CC,CAAD,IAAO;AACnB,UAAI,KAAKb,QAAT,EAAmB;AACf,YAAID,aAAa,GAAG,KAAKD,KAAL,CAAWC,aAA/B;AACA,YAAIe,OAAO,GAAGf,aAAa,CAACgB,MAAd,CAAqBF,CAArB,EAAwB,CAAxB,CAAd;AACA,aAAKP,QAAL,CAAc;AAACP,UAAAA,aAAa,EAAEA;AAAhB,SAAd,EAA8C,MAAMS,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,aAAvB,CAApD;AACH;AACJ,KAxC4D;AAAA;;AAiB7DiB,EAAAA,oBAAoB,GAAG;AACnB,SAAKhB,QAAL,GAAgB,KAAhB;AACH;;AAEDiB,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,YAAQA,IAAR;AACI,WAAK,CAAL;AACI,eAAO,wBAAP;;AACJ,WAAK,CAAL;AACI,eAAO,sBAAP;;AACJ,WAAK,CAAL;AACI,eAAO,kBAAP;;AACJ,WAAK,CAAL;AACI,eAAO,mBAAP;AARR;AAUH;;AAUDC,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,SAAS,EAAE,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAE,MAAxB;AAAgC,MAAA,MAAM,EAAE,EAAxC;AAA4C,MAAA,MAAM,EAAE,EAApD;AAAwD,MAAA,QAAQ,EAAE,EAAlE;AAAsE,MAAA,WAAW,EAAE,EAAnF;AAAuF,MAAA,UAAU,EAAE,EAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD,CAAY,KAAZ;AACI,MAAA,EAAE,EAAEhC,IADR;AAEI,MAAA,QAAQ,EAAE,GAFd;AAGI,MAAA,aAAa,EAAC,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKW,KAAL,CAAWC,aAAX,CAAyBqB,GAAzB,CAA6B,CAACC,GAAD,EAAMR,CAAN,KAC1B,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,OAAO,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAM,KAAKD,aAAL,CAAmBC,CAAnB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,EAOI,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAc,MAAA,GAAG,EAAEQ,GAAG,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,GAAG,CAACE,SAA1B,CARJ,EASI,oBAAC,IAAD,CAAM,WAAN;AAAkB,MAAA,SAAS,EAAE,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,gBAAL,CAAsBI,GAAG,CAACH,IAA1B,CADL,SAEQxB,MAAM,CAAC2B,GAAG,CAACG,IAAL,CAAN,CAAiBC,OAAjB,EAFR,CATJ,CADJ,EAeI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADH,CALL,CADJ,CADJ,CADJ,CADJ,CADJ;AAmCH;;AA9E4D","sourcesContent":["import React from 'react';\nimport {List, Image, Button, Transition, Grid, Divider} from 'semantic-ui-react';\nimport API from '../../../utils/API';\nconst moment = require('moment');\n\nexport default class NotificationsHistory extends React.Component{\n\n    state = {\n        notifications: [],\n    };\n    _mounted = false;\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200) {\n                    this._mounted && this.setState({notifications: response.data.notifications}, () => console.log(this.state.notifications));\n                }\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'visited your profile  ';\n            case 2:\n                return 'send you a message  ';\n            case 3:\n                return 'liked you back  ';\n            case 4:\n                return 'remove his like  ';\n        }\n    };\n\n    handleDismiss = (i) => {\n        if (this._mounted) {\n            let notifications = this.state.notifications;\n            let removed = notifications.splice(i, 1);\n            this.setState({notifications: notifications}, () => console.log(this.state.notifications));\n        }\n    };\n\n    render(){\n        return (\n            <Grid columns={1} textAlign={'center'}>\n                <Grid.Column textAlign={'left'} mobile={16} tablet={12} computer={12} largeScreen={12} widescreen={12}>\n                    <div className={\"NotificationsHistoric\"}>\n                        <Grid.Row>\n                            <Transition.Group\n                                as={List}\n                                duration={200}\n                                verticalAlign='middle'\n                            >\n                                {this.state.notifications.map((obj, i) => (\n                                    <List.Item>\n                                        <List.Content>\n                                            <List.Content floated='right'>\n                                                <Button\n                                                    onClick={() => this.handleDismiss(i)}>\n                                                    Dismiss\n                                                </Button>\n                                            </List.Content>\n                                            <Image avatar src={obj.img_link}/>\n                                            <List.Content as='a'>{obj.firstname}</List.Content>\n                                            <List.Description className={\"NotifDesc\"}>\n                                                {this.renderSwitchType(obj.type)}\n                                                on {moment(obj.date).fromNow()}\n                                            </List.Description>\n                                        </List.Content>\n                                        <Divider />\n                                    </List.Item>\n                                ))}\n                            </Transition.Group>\n                        </Grid.Row>\n                    </div>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}