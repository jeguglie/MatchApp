{"ast":null,"code":"var _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/utils/withAuth.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../utils/API';\n\nfunction withAuth(ComponentToProtect) {\n  return class extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    async componentDidMount() {\n      await API.withAuth().then(res => {\n        if (res.data.status === 200) {\n          console.log(1);\n          this.setState({\n            loading: false\n          });\n        } else throw new Error(res.error);\n      }).catch(() => {\n        this.setState({\n          loading: false,\n          redirect: true\n        });\n      });\n    }\n\n    render() {\n      const _this$state = this.state,\n            loading = _this$state.loading,\n            redirect = _this$state.redirect;\n      if (loading) return null;\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n\n  };\n}\n\nexport default withAuth; // import React from 'react';\n// import { Redirect } from 'react-router-dom';\n//\n// function withAuth(ComponentToProtect) {\n//     return class extends React.Component {\n//         constructor() {\n//             super();\n//             this.state = {\n//                 loading: true,\n//                 redirect: false,\n//             };\n//         }\n//\n//         componentDidMount() {\n//             fetch('http://localhost:3000/checkToken', {\n//                 credentials: 'include',\n//             })\n//                 .then(res => {\n//                     if (res.status === 200) {\n//                         this.setState({loading: false});\n//                     } else {\n//                         const error = new Error(res.error);\n//                         throw error;\n//                     }\n//                 })\n//                 .catch(err => {\n//                     console.error(\"ERROR: \" + err);\n//                     this.setState({loading: false, redirect: true});\n//                 });\n//         }\n//         render () {\n//             const { loading, redirect } = this.state;\n//             if (loading)\n//                 return null;\n//             if (redirect) {\n//                 return <Redirect to=\"/login\" />;\n//             }\n//             return <ComponentToProtect {...this.props} />\n//         }\n//     }\n// }","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/utils/withAuth.js"],"names":["React","Redirect","API","withAuth","ComponentToProtect","Component","constructor","state","loading","redirect","componentDidMount","then","res","data","status","console","log","setState","Error","error","catch","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AAClC,SAAO,cAAcJ,KAAK,CAACK,SAApB,CAA8B;AACjCC,IAAAA,WAAW,GAAG;AACV;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,OAAO,EAAE,IADA;AAETC,QAAAA,QAAQ,EAAE;AAFD,OAAb;AAIH;;AACD,UAAMC,iBAAN,GAA0B;AACtB,YAAMR,GAAG,CAACC,QAAJ,GACDQ,IADC,CACIC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AAC1B,eAAKC,QAAL,CAAc;AAACT,YAAAA,OAAO,EAAE;AAAV,WAAd;AACH,SAFD,MAII,MAAM,IAAIU,KAAJ,CAAUN,GAAG,CAACO,KAAd,CAAN;AACP,OAPC,EAQDC,KARC,CAQK,MAAM;AAAC,aAAKH,QAAL,CAAc;AAACT,UAAAA,OAAO,EAAE,KAAV;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B,SAAd;AAAiD,OAR7D,CAAN;AASH;;AACDY,IAAAA,MAAM,GAAI;AAAA,0BACwB,KAAKd,KAD7B;AAAA,YACEC,OADF,eACEA,OADF;AAAA,YACWC,QADX,eACWA,QADX;AAEN,UAAID,OAAJ,EACI,OAAO,IAAP;;AACJ,UAAIC,QAAJ,EAAc;AACV,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO,oBAAC,kBAAD,oBAAwB,KAAKa,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AA3BgC,GAArC;AA6BH;;AAGD,eAAenB,QAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../utils/API';\n\nfunction withAuth(ComponentToProtect) {\n    return class extends React.Component {\n        constructor() {\n            super();\n            this.state = {\n                loading: true,\n                redirect: false,\n            };\n        }\n        async componentDidMount() {\n            await API.withAuth()\n                .then(res => {\n                    if (res.data.status === 200) {console.log(1);\n                        this.setState({loading: false});\n                    }\n                    else\n                        throw new Error(res.error);\n                })\n                .catch(() => {this.setState({loading: false, redirect: true});});\n        }\n        render () {\n            const { loading, redirect } = this.state;\n            if (loading)\n                return null;\n            if (redirect) {\n                return <Redirect to=\"/login\" />;\n            }\n            return <ComponentToProtect {...this.props} />\n        }\n    }\n}\n\n\nexport default withAuth;\n// import React from 'react';\n// import { Redirect } from 'react-router-dom';\n//\n// function withAuth(ComponentToProtect) {\n//     return class extends React.Component {\n//         constructor() {\n//             super();\n//             this.state = {\n//                 loading: true,\n//                 redirect: false,\n//             };\n//         }\n//\n//         componentDidMount() {\n//             fetch('http://localhost:3000/checkToken', {\n//                 credentials: 'include',\n//             })\n//                 .then(res => {\n//                     if (res.status === 200) {\n//                         this.setState({loading: false});\n//                     } else {\n//                         const error = new Error(res.error);\n//                         throw error;\n//                     }\n//                 })\n//                 .catch(err => {\n//                     console.error(\"ERROR: \" + err);\n//                     this.setState({loading: false, redirect: true});\n//                 });\n//         }\n//         render () {\n//             const { loading, redirect } = this.state;\n//             if (loading)\n//                 return null;\n//             if (redirect) {\n//                 return <Redirect to=\"/login\" />;\n//             }\n//             return <ComponentToProtect {...this.props} />\n//         }\n//     }\n// }"]},"metadata":{},"sourceType":"module"}