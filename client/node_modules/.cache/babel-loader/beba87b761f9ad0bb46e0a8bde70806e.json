{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nconst DEFAULT_STATE = {\n  notifications: [{}]\n};\n\nfunction timeSince(date) {\n  console.log(date);\n  var newdate = date.split('T');\n  date = newdate[0];\n  var seconds = Math.floor((new Date() - date) / 1000);\n  var interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n\n  return Math.floor(seconds) + \" seconds\";\n}\n\n;\nexport default class NotificationsHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) this._mounted && this.setState({\n          notifications: response.data.notifications\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.timeSince = myDate => {\n      console.log(myDate);\n      return myDate;\n    };\n\n    this.notifmap = () => {\n      return this.state.notifications.map((obj, i) => {\n        return React.createElement(List.Item, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          floated: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Dismiss\")), React.createElement(Image, {\n          avatar: true,\n          src: obj.img_link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(List.Content, {\n          as: \"a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, obj.firstname), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.renderSwitchType(obj.type), \"on \", this.timeSince(obj.date))));\n      });\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n    this.timeSince = timeSince;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'visited your profile  ';\n\n      case 2:\n        return 'send you a message  ';\n\n      case 3:\n        return 'liked you back  ';\n\n      case 4:\n        return 'remove his like  ';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(List, {\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.notifmap()));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","API","DEFAULT_STATE","notifications","timeSince","date","console","log","newdate","split","seconds","Math","floor","Date","interval","NotificationsHistory","Component","constructor","props","componentDidMount","_mounted","getNotifications","then","response","status","setState","data","catch","e","myDate","notifmap","state","map","obj","i","img_link","firstname","renderSwitchType","type","componentWillUnmount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,aAAa,EAAE,CAAC,EAAD;AADG,CAAtB;;AAIA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIG,OAAO,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAd;AACAJ,EAAAA,IAAI,GAAGG,OAAO,CAAC,CAAD,CAAd;AACA,MAAIE,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,KAAaR,IAAd,IAAsB,IAAjC,CAAd;AAEA,MAAIS,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,QAArB,CAAf;;AAEA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,WAAOA,QAAQ,GAAG,QAAlB;AACH;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,OAArB,CAAX;;AACA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,WAAOA,QAAQ,GAAG,SAAlB;AACH;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,KAArB,CAAX;;AACA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,WAAOA,QAAQ,GAAG,OAAlB;AACH;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,IAArB,CAAX;;AACA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,WAAOA,QAAQ,GAAG,QAAlB;AACH;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,EAArB,CAAX;;AACA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,WAAOA,QAAQ,GAAG,UAAlB;AACH;;AACD,SAAOH,IAAI,CAACC,KAAL,CAAWF,OAAX,IAAsB,UAA7B;AACH;;AAAA;AAGD,eAAe,MAAMK,oBAAN,SAAmClB,KAAK,CAACmB,SAAzC,CAAkD;AAE7DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,iBAPkB,GAOE,YAAW;AAC3B,WAAKC,QAAL,GAAgB,IAAhB;AACA,YAAMnB,GAAG,CAACoB,gBAAJ,GACDC,IADC,CACIC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EACI,KAAKJ,QAAL,IAAiB,KAAKK,QAAL,CAAc;AAACtB,UAAAA,aAAa,EAAEoB,QAAQ,CAACG,IAAT,CAAcvB;AAA9B,SAAd,CAAjB;AACP,OAJC,EAKDwB,KALC,CAKKC,CAAC,IAAItB,OAAO,CAACC,GAAR,CAAYqB,CAAZ,CALV,CAAN;AAMH,KAfiB;;AAAA,SAqBlBxB,SArBkB,GAqBLyB,MAAD,IAAY;AACpBvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,MAAZ;AACA,aAAOA,MAAP;AACH,KAxBiB;;AAAA,SAqClBC,QArCkB,GAqCP,MAAM;AACb,aAAO,KAAKC,KAAL,CAAW5B,aAAX,CAAyB6B,GAAzB,CAA6B,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC5C,eACQ,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,OAAO,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,EAII,oBAAC,KAAD;AAAO,UAAA,MAAM,MAAb;AAAc,UAAA,GAAG,EAAED,GAAG,CAACE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAKI,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBF,GAAG,CAACG,SAA1B,CALJ,EAMI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKC,gBAAL,CAAsBJ,GAAG,CAACK,IAA1B,CADL,SAEQ,KAAKlC,SAAL,CAAe6B,GAAG,CAAC5B,IAAnB,CAFR,CANJ,CADJ,CADR;AAeH,OAhBM,CAAP;AAiBH,KAvDiB;;AAEd,SAAK0B,KAAL,qBAAiB7B,aAAjB;AACA,SAAKkB,QAAL,GAAgB,KAAhB;AACA,SAAKhB,SAAL,GAAiBA,SAAjB;AACH;;AAYDmC,EAAAA,oBAAoB,GAAG;AACnB,SAAKnB,QAAL,GAAgB,KAAhB;AACH;;AAMDiB,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,YAAQA,IAAR;AACI,WAAK,CAAL;AACI,eAAO,wBAAP;;AACJ,WAAK,CAAL;AACI,eAAO,sBAAP;;AACJ,WAAK,CAAL;AACI,eAAO,kBAAP;;AACJ,WAAK,CAAL;AACI,eAAO,mBAAP;AARR;AAUH;;AAqBDE,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,QAAL,EADL,CADJ,CADJ;AAOH;;AAnE4D","sourcesContent":["import React from 'react';\nimport { List, Image, Button } from 'semantic-ui-react';\nimport API from '../../../utils/API';\n\nconst DEFAULT_STATE = {\n    notifications: [{}],\n};\n\nfunction timeSince(date) {\n    console.log(date);\n    var newdate = date.split('T');\n    date = newdate[0];\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = Math.floor(seconds / 31536000);\n\n    if (interval > 1) {\n        return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n        return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n        return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n        return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval > 1) {\n        return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n};\n\n\nexport default class NotificationsHistory extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n        this.timeSince = timeSince;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200)\n                    this._mounted && this.setState({notifications: response.data.notifications});\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    timeSince = (myDate) => {\n        console.log(myDate);\n        return myDate;\n    };\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'visited your profile  ';\n            case 2:\n                return 'send you a message  ';\n            case 3:\n                return 'liked you back  ';\n            case 4:\n                return 'remove his like  ';\n        }\n    }\n    notifmap = () => {\n        return this.state.notifications.map((obj, i) => {\n            return (\n                    <List.Item key={i}>\n                        <List.Content>\n                            <List.Content floated='right'>\n                                <Button>Dismiss</Button>\n                            </List.Content>\n                            <Image avatar src={obj.img_link}/>\n                            <List.Content as='a'>{obj.firstname}</List.Content>\n                            <List.Description>\n                                {this.renderSwitchType(obj.type)}\n                                on {this.timeSince(obj.date)}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n            )\n        });\n    };\n\n    render(){\n        return (\n            <div>\n                <List verticalAlign='middle'>\n                    {this.notifmap()}\n                </List>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}