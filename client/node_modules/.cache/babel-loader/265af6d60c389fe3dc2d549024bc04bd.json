{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Menu/BootstrapMenu.js\";\nimport React from 'react';\nimport { ButtonToolbar, Navbar, Button, Nav, ButtonGroup, NavDropdown } from 'react-bootstrap';\nimport '../../Assets/global-styles/bootstrap-iso.css';\nimport { Icon } from \"semantic-ui-react\";\nimport classnames from 'classnames';\nimport { withRouter } from 'react-router';\nimport Aux from \"../../hoc/Aux\";\nimport API from '../../utils/API';\n\nclass NavbarBootstrap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.withAuth().then(async res => {\n        if (res.status === 200) this.setState({\n          connected: true\n        });\n        await API.getNotifNb().then(res => {\n          if (res.status === 200) this._mounted && this.setState({\n            notifNb: res.data.notifNb\n          });\n        });\n      });\n      this._mounted && this.setState({\n        activeItem: this.props.location.pathname\n      });\n    };\n\n    this.updateNotifNb = notifNb => {\n      // this.setState({notifNb: notifNb});\n      console.log(1);\n    };\n\n    this.handleItemClick = (e, redirect) => {\n      this.setState({\n        activeItem: redirect\n      }, () => this.redirect(redirect));\n    };\n\n    this.redirect = redirect => {\n      this.props.history.push(redirect);\n    };\n\n    this.disconnect = () => {\n      fetch('http://localhost:5000/logout', {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this._mounted && this.setState({\n            connected: false\n          });\n          this.props.history.push('/login');\n          this.props.s_logout();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        this.setState({\n          warnings: [\"Wrong username or password\"]\n        });\n      });\n    };\n\n    this.isConnected = () => {\n      const activeItem = this.state.activeItem;\n      if (this.state.connected === false) return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: activeItem === '/login' ? classnames(\"activeItemButton\") : null,\n        size: \"md\",\n        id: \"loginButton\",\n        variant: \"outline-primary\",\n        onClick: () => this.handleItemClick(null, \"/login\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(Button, {\n        className: activeItem === '/signup' ? classnames(\"activeItemButton\", \"mr-3\") : \"mr-3\",\n        id: \"signupButton\",\n        variant: \"outline-primary\",\n        onClick: () => this.handleItemClick(null, \"/signup\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Sign up\")));else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(ButtonToolbar, {\n          className: \"mr-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"md\",\n          variant: \"outline-primary\",\n          onClick: this.disconnect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Log out\")));\n      }\n    };\n\n    this.showMenu = () => {\n      const _this$state = this.state,\n            activeItem = _this$state.activeItem,\n            notifNb = _this$state.notifNb,\n            connected = _this$state.connected;\n      const navDropdownTitle = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Profile\"));\n      if (connected === true) return React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        className: activeItem === '/' ? \"activeItem\" : null,\n        onClick: () => this.handleItemClick(null, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"gratipay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Wall\")), React.createElement(NavDropdown, {\n        title: navDropdownTitle,\n        className: activeItem === '/profile' ? \"activeItem\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(NavDropdown.Item, {\n        onClick: () => this.handleItemClick(null, \"/profile\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Edit my profile\"), React.createElement(NavDropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(NavDropdown.Item, {\n        onClick: () => this.handleItemClick(null, \"/changepassword\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Edit my password\"), React.createElement(NavDropdown.Item, {\n        onClick: () => this.handleItemClick(null, \"/changemail\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Edit my mail\")), React.createElement(Nav.Link, {\n        className: activeItem === '/messages' ? \"activeItem\" : null,\n        redirect: \"messages\",\n        onClick: () => this.handleItemClick(null, \"/messages\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"conversation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Messages\")), React.createElement(Nav.Link, {\n        className: activeItem === '/notifications' ? \"activeItem\" : null,\n        id: \"/notifications\",\n        onClick: () => this.handleItemClick(null, \"/notifications\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: \"large\",\n        name: \"bell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"badgecontainernotif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"itemMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Notifications\"), notifNb > 0 ? React.createElement(\"span\", {\n        class: \"badgenotif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, notifNb) : null)));else return null;\n    };\n\n    this.state = {\n      activeItem: '',\n      redirect: '',\n      connected: false,\n      notifNb: 0\n    };\n    this._mounted = false;\n    this.updateNotifNb = this.updateNotifNb.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.isConnected !== this.props.isConnected && this.props.isConnected === true) {\n      API.getNotifNb().then(res => {\n        if (res.status === 200) this._mounted && this.setState({\n          notifNb: res.data.notifNb,\n          connected: true\n        });\n      });\n    }\n\n    if (prevProps.location.pathname !== prevState.activeItem) this.setState({\n      activeItem: this.props.location.pathname\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bootstrap-iso\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      sticky: \"top\",\n      collapseOnSelect: true,\n      expand: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      className: \"ml-3\",\n      id: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"./../../img/MatchApp-Logo.png\",\n      height: \"50\",\n      alt: \"MatchApp Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(Navbar.Toggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.showMenu(), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ConnectionNav m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.isConnected()))))));\n  }\n\n}\n\nexport default withRouter(NavbarBootstrap);","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Menu/BootstrapMenu.js"],"names":["React","ButtonToolbar","Navbar","Button","Nav","ButtonGroup","NavDropdown","Icon","classnames","withRouter","Aux","API","NavbarBootstrap","Component","constructor","props","componentDidMount","_mounted","withAuth","then","res","status","setState","connected","getNotifNb","notifNb","data","activeItem","location","pathname","updateNotifNb","console","log","handleItemClick","e","redirect","history","push","disconnect","fetch","method","credentials","headers","s_logout","error","Error","catch","err","warnings","isConnected","state","showMenu","navDropdownTitle","bind","componentDidUpdate","prevProps","prevState","snapshot","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ButtonToolbar, Navbar, Button, Nav, ButtonGroup, NavDropdown} from 'react-bootstrap';\nimport '../../Assets/global-styles/bootstrap-iso.css';\nimport { Icon } from \"semantic-ui-react\";\nimport classnames from 'classnames';\nimport { withRouter } from 'react-router';\nimport Aux from \"../../hoc/Aux\";\nimport API from '../../utils/API';\n\nclass NavbarBootstrap extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: '',\n            redirect: '',\n            connected: false,\n            notifNb: 0,\n        };\n        this._mounted = false;\n        this.updateNotifNb = this.updateNotifNb.bind(this);\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.withAuth()\n            .then(async(res) => {\n                if (res.status === 200)\n                    this.setState({connected: true});\n                await API.getNotifNb()\n                    .then(res => {\n                        if (res.status === 200)\n                            this._mounted && this.setState({notifNb: res.data.notifNb})\n                    });\n            });\n        this._mounted && this.setState({activeItem: this.props.location.pathname});\n    };\n\n    updateNotifNb = (notifNb) => {\n        // this.setState({notifNb: notifNb});\n        console.log(1);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.isConnected !== this.props.isConnected && this.props.isConnected === true){\n            API.getNotifNb()\n                .then(res => {\n                    if (res.status === 200)\n                        this._mounted && this.setState({notifNb: res.data.notifNb, connected: true})\n                });\n        }\n        if(prevProps.location.pathname !== prevState.activeItem)\n            this.setState({activeItem: this.props.location.pathname});\n    }\n\n    handleItemClick = (e, redirect) => { this.setState({ activeItem: redirect}, () => this.redirect(redirect)) };\n    redirect = (redirect) => { this.props.history.push(redirect) };\n    disconnect = () => {\n        fetch('http://localhost:5000/logout', {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    this._mounted && this.setState({connected: false});\n                    this.props.history.push('/login');\n                    this.props.s_logout();\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .catch(err => {\n                this.setState({warnings: [\"Wrong username or password\"]});\n            });\n    };\n\n    isConnected = () => {\n        const { activeItem } = this.state;\n        if (this.state.connected === false)\n            return (\n                <Aux>\n                    <ButtonGroup>\n                        <Button\n                            className={activeItem === '/login' ? classnames(\"activeItemButton\") : null}\n                            size=\"md\"\n                            id=\"loginButton\"\n                            variant=\"outline-primary\"\n                            onClick={() => this.handleItemClick(null, \"/login\")}>Log in</Button>\n                        <Button\n                            className={activeItem === '/signup' ? classnames(\"activeItemButton\", \"mr-3\") : \"mr-3\"}\n                            id=\"signupButton\"\n                            variant=\"outline-primary\"\n                            onClick={() => this.handleItemClick(null, \"/signup\")}>Sign up</Button>\n                    </ButtonGroup>\n                </Aux>\n            );\n        else {\n            return (\n                <div>\n                    <ButtonToolbar className='mr-3'>\n                            <Button\n                                size=\"md\"\n                                variant=\"outline-primary\"\n                                onClick={this.disconnect}>Log out</Button>\n                    </ButtonToolbar>\n                </div>\n            )\n        }\n    };\n\n\n\n    showMenu = () => {\n        const { activeItem, notifNb, connected } = this.state;\n        const navDropdownTitle = (\n            <Aux>\n                <Icon size='large' name='user'/>\n                <span className=\"itemMenu\">Profile</span>\n            </Aux>\n        );\n        if (connected === true)\n            return (\n                <Nav className='mr-auto'>\n                    <Nav.Link\n                        className={activeItem === '/' ? \"activeItem\" : null}\n                        onClick={() => this.handleItemClick(null, \"/\")}>\n                        <Icon size='large' name='gratipay' />\n                        <span className=\"itemMenu\">Wall</span>\n                    </Nav.Link>\n                    <NavDropdown\n                        title={navDropdownTitle}\n                        className={activeItem === '/profile' ? \"activeItem\" : null}>\n                        <NavDropdown.Item\n                            onClick={() => this.handleItemClick(null, \"/profile\")}>\n                            Edit my profile\n                        </NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item\n                            onClick={() => this.handleItemClick(null, \"/changepassword\")}>\n                            Edit my password\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => this.handleItemClick(null, \"/changemail\")}>\n                            Edit my mail\n                        </NavDropdown.Item>\n\n                    </NavDropdown>\n                    <Nav.Link\n                        className={activeItem === '/messages' ? \"activeItem\" : null}\n                        redirect='messages'\n                        onClick={() => this.handleItemClick(null, \"/messages\")}>\n                        <Icon size='large' name='conversation' />\n                        <span className=\"itemMenu\">Messages</span>\n                    </Nav.Link>\n                    <Nav.Link\n                        className={activeItem === '/notifications' ? \"activeItem\" : null}\n                        id='/notifications'\n                        onClick={() => this.handleItemClick(null, \"/notifications\")}>\n                        <Icon size='large' name='bell' />\n                        <div class=\"badgecontainernotif\">\n                            <span className=\"itemMenu\">Notifications</span>\n                            {notifNb > 0 ? <span class=\"badgenotif\">{notifNb}</span> : null}\n                        </div>\n                    </Nav.Link>\n                </Nav>\n            )\n        else\n            return null;\n    }\n    render() {\n        return (\n            <div className='bootstrap-iso'>\n                <div className=\"Menu\">\n                    <Navbar sticky=\"top\" collapseOnSelect expand=\"sm\">\n                        <Navbar.Brand\n                            className=\"ml-3\"\n                            id='/'>\n                            <img\n                                src='./../../img/MatchApp-Logo.png'\n                                height=\"50\"\n                                alt=\"MatchApp Logo\"/>\n                        </Navbar.Brand>\n                        <Navbar.Toggle/>\n                        <Navbar.Collapse>\n                            {this.showMenu()}\n                            <Nav>\n                                <div className=\"ConnectionNav m-1\">\n                                    {this.isConnected()}\n                                </div>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(NavbarBootstrap);\n"]},"metadata":{},"sourceType":"module"}