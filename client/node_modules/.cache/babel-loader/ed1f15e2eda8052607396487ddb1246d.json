{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/Location/Location.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Input, Button, Segment, Form, TextArea, Grid, Progress, Icon, Select, Loader, Dimmer, Container, Divider } from 'semantic-ui-react';\nimport VALIDATE from \"../../../utils/validation\";\nimport LocationComponent from \"./LocationComponent/LocationComponent\";\nimport SimpleMap from \"./Map/Map\";\nconst DEFAULT_STATE = {\n  loading: false,\n  complete: 0,\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};\n\nclass Location extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setCoords = props => {\n      this.setState(({\n        lat,\n        lng\n      }) => {});\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this.state.complete = this.props.complete; // Location ref\n\n    this.getInnerRef = this.getInnerRef.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n  } // React geolocate\n\n\n  getInnerRef(ref) {\n    this.innerRef = ref;\n  }\n\n  getLocation() {\n    this.innerRef && this.innerRef.getLocation();\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.complete !== prevState.complete) return {\n      complete: nextProps.complete\n    };\n    return null;\n  }\n\n  async componentDidMount() {\n    this._mounted = true;\n    this.setState({\n      loading: true\n    });\n    await VALIDATE.sleepLoader(500);\n    await this.props.getcomplete();\n    this.setState({\n      complete: this.props.complete\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const getInnerRef = this.getInnerRef,\n          getLocation = this.getLocation;\n    const complete = this.state.complete;\n\n    const ProgressBar = () => React.createElement(Progress, {\n      percent: complete,\n      progress: true,\n      indicating: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n\n    return React.createElement(\"div\", {\n      className: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"massive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(ProgressBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"CompleteTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Add your location\"))), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(LocationComponent, {\n      ref: getInnerRef,\n      setCoords: this.setCoords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shapeLastStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapAddLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(SimpleMap, {\n      default: this.state.center,\n      zoom: this.state.zoom,\n      lat: this.state.lat,\n      lng: this.state.lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(Segment, {\n      basic: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: getLocation,\n      className: \"buttonLastStep\",\n      size: \"big\",\n      content: \"Geolocate my position\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      horizontal: true,\n      className: \"DividerLastStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Or add location\")), React.createElement(Input, {\n      size: \"big\",\n      icon: \"search\",\n      iconPosition: \"left\",\n      placeholder: \"Search location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow alternate circle left outline\",\n      size: \"huge\",\n      onClick: this.props.prevsection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      className: \"EditProfilArrow\",\n      name: \"arrow alternate circle right outline\",\n      size: \"huge\",\n      onClick: this.props.nextsection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/EditProfil/Location/Location.js"],"names":["React","Input","Button","Segment","Form","TextArea","Grid","Progress","Icon","Select","Loader","Dimmer","Container","Divider","VALIDATE","LocationComponent","SimpleMap","DEFAULT_STATE","loading","complete","center","lat","lng","zoom","Location","Component","constructor","props","setCoords","setState","state","getInnerRef","bind","getLocation","ref","innerRef","componentWillUnmount","_mounted","getDerivedStateFromProps","nextProps","prevState","componentDidMount","sleepLoader","getcomplete","render","ProgressBar","prevsection","nextsection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Input, Button, Segment, Form, TextArea, Grid, Progress, Icon, Select, Loader, Dimmer, Container, Divider} from 'semantic-ui-react';\nimport VALIDATE from \"../../../utils/validation\";\nimport LocationComponent from \"./LocationComponent/LocationComponent\";\nimport SimpleMap from \"./Map/Map\";\n\nconst DEFAULT_STATE = {\n    loading: false,\n    complete: 0,\n    center: {\n        lat: 59.95,\n        lng: 30.33\n    },\n    zoom: 11\n};\nclass Location extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this.state.complete = this.props.complete;\n        // Location ref\n        this.getInnerRef = this.getInnerRef.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n    // React geolocate\n    innerRef;\n    getInnerRef(ref) {\n        this.innerRef = ref;\n    }\n\n    getLocation() {\n        this.innerRef && this.innerRef.getLocation();\n    }\n\n    setCoords = (props) => {\n       this.setState(({lat, lng}) => {\n\n        })\n    }\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.complete !== prevState.complete)\n            return { complete: nextProps.complete}\n        return null;\n    }\n\n\n\n    async componentDidMount() {\n        this._mounted = true;\n        this.setState({loading: true});\n        await VALIDATE.sleepLoader(500);\n        await this.props.getcomplete();\n        this.setState({complete: this.props.complete});\n        this.setState({loading: false});\n    }\n\n\n\n    render() {\n        const { getInnerRef, getLocation } = this;\n        const {complete} = this.state;\n        const ProgressBar = () => (\n            <Progress\n                percent={complete}\n                progress\n                indicating\n                size=\"medium\"/>\n        );\n        return (\n                <div className=\"Location\">\n                    <Dimmer active={this.state.loading}>\n                        <Loader size='massive'>Loading...</Loader>\n                    </Dimmer>\n                    <ProgressBar />\n                    <Grid textAlign=\"center\">\n                        <Grid.Row centered>\n                            <h1 className=\"CompleteTitle\">Add your location</h1>\n                        </Grid.Row>\n                    </Grid>\n                    <Divider hidden />\n                    <Divider hidden />\n                    <LocationComponent\n                        ref={getInnerRef}\n                        setCoords={this.setCoords} />\n                    <div className=\"shapeLastStep\"></div>\n                    <Segment>\n                        <div className=\"mapAddLocation\">\n                            <SimpleMap\n                                default={this.state.center}\n                                zoom={this.state.zoom}\n                                lat={this.state.lat}\n                                lng={this.state.lng}\n                            />\n                        </div>\n                    </Segment>\n                    <Segment basic textAlign='center'>\n                        <Button\n                            onClick={getLocation}\n                            className=\"buttonLastStep\"\n                            size=\"big\"\n                            content='Geolocate my position' />\n                        <Divider horizontal className=\"DividerLastStep\"><span>Or add location</span></Divider>\n                        <Input\n                            size=\"big\"\n                            icon='search'\n                            iconPosition='left'\n                            placeholder='Search location' />\n                    </Segment>\n                    <Grid>\n                        <Divider hidden />\n                        <Grid.Row centered>\n                            <Icon className=\"EditProfilArrow\"\n                                  name='arrow alternate circle left outline'\n                                  size=\"huge\"\n                                  onClick={this.props.prevsection}/>\n                            <Icon className=\"EditProfilArrow\"\n                                  name='arrow alternate circle right outline'\n                                  size=\"huge\"\n                                  onClick={this.props.nextsection}/>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n\n        )\n    }\n}\nexport default Location;"]},"metadata":{},"sourceType":"module"}