{"ast":null,"code":"import _objectSpread from \"/Users/jv/Desktop/MatchApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js\";\nimport React from 'react';\nimport { List, Image, Button, Transition } from 'semantic-ui-react';\nimport API from '../../../utils/API';\n\nconst moment = require('moment');\n\nconst DEFAULT_STATE = {\n  notifications: [{}]\n};\nexport default class NotificationsHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this._mounted = true;\n      await API.getNotifications().then(response => {\n        if (response.status === 200) this._mounted && this.setState({\n          notifications: response.data.notifications\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.handleDismiss = i => {\n      this._mounted && this.setState(prevState => ({\n        notifications: prevState.notifications.slice(0, -1)\n      }));\n    };\n\n    this.state = _objectSpread({}, DEFAULT_STATE);\n    this._mounted = false;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  renderSwitchType(type) {\n    switch (type) {\n      case 1:\n        return 'visited your profile  ';\n\n      case 2:\n        return 'send you a message  ';\n\n      case 3:\n        return 'liked you back  ';\n\n      case 4:\n        return 'remove his like  ';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Transition.Group, {\n      as: List,\n      duration: 200,\n      divided: true,\n      size: \"huge\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.notifications.map((obj, i) => React.createElement(List.Item, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleDismiss(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(Image, {\n      avatar: true,\n      src: obj.img_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, obj.firstname), React.createElement(List.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.renderSwitchType(obj.type), \"on \", moment(obj.date).fromNow()))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MatchApp/client/src/components/Notifications/NotificationsHistory/NotificationsHistory.js"],"names":["React","List","Image","Button","Transition","API","moment","require","DEFAULT_STATE","notifications","NotificationsHistory","Component","constructor","props","componentDidMount","_mounted","getNotifications","then","response","status","setState","data","catch","e","console","log","handleDismiss","i","prevState","slice","state","componentWillUnmount","renderSwitchType","type","render","map","obj","img_link","firstname","date","fromNow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { List, Image, Button, Transition } from 'semantic-ui-react';\nimport API from '../../../utils/API';\nconst moment = require('moment');\n\nconst DEFAULT_STATE = {\n    notifications: [{}],\n};\n\nexport default class NotificationsHistory extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n        this._mounted = false;\n    }\n\n    componentDidMount = async() => {\n        this._mounted = true;\n        await API.getNotifications()\n            .then(response => {\n                if (response.status === 200)\n                    this._mounted && this.setState({notifications: response.data.notifications});\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentWillUnmount() {\n        this._mounted = false;\n    }\n\n    renderSwitchType(type) {\n        switch (type) {\n            case 1:\n                return 'visited your profile  ';\n            case 2:\n                return 'send you a message  ';\n            case 3:\n                return 'liked you back  ';\n            case 4:\n                return 'remove his like  ';\n        }\n    }\n\n    handleDismiss = (i) => {\n        this._mounted && this.setState((prevState) => ({ notifications: prevState.notifications.slice(0, -1) }))\n    };\n\n    render(){\n        return (\n            <div>\n                <Transition.Group\n                    as={List}\n                    duration={200}\n                    divided\n                    size='huge'\n                    verticalAlign='middle'>\n                    {this.state.notifications.map((obj, i) => (\n                        <List.Item key={i}>\n                            <List.Content>\n                                <List.Content floated='right'>\n                                    <Button onClick={this.handleDismiss(i)}>Dismiss</Button>\n                                </List.Content>\n                                <Image avatar src={obj.img_link}/>\n                                <List.Content as='a'>{obj.firstname}</List.Content>\n                                <List.Description>\n                                    {this.renderSwitchType(obj.type)}\n                                    on {moment(obj.date).fromNow()}\n                                </List.Description>\n                            </List.Content>\n                        </List.Item>\n                    ))}\n                </Transition.Group>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}