{"ast":null,"code":"import _defineProperty from \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/UserMiniCard/UserMiniCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Card, Grid, Image, Icon } from 'semantic-ui-react';\nimport equal from 'fast-deep-equal';\nconst DEFAULT_STATE = {\n  users: []\n};\n\nconst usersMinCard = props => {};\n\nclass UserMiniCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, DEFAULT_STATE);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.users, prevProps.users)) {\n      this.setState({\n        users: this.props.users\n      });\n    }\n  }\n\n  render() {\n    const users = this.state.users;\n\n    if (users && users.length) {\n      return users.map((user, i) => {\n        const user_id = user.user_id,\n              img_link = user.img_link,\n              firstname = user.firstname,\n              likes = user.likes,\n              distance = user.distance,\n              points = user.points,\n              age = user.age;\n        return React.createElement(Grid.Column, {\n          key: i,\n          mobile: 4,\n          tablet: 8,\n          computer: 4,\n          largeScreen: 4,\n          widescreen: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"userMinCard\",\n          onClick: () => this.props.clickedUser(user_id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: img_link,\n          key: i,\n          wrapped: true,\n          ui: false,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, firstname, React.createElement(\"span\", {\n          className: \"MinCardAge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \", \", age)), React.createElement(Card.Meta, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, Math.round(distance), \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"km\")), React.createElement(\"span\", {\n          className: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, points, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Points\")))), React.createElement(Card.Content, {\n          extra: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"heart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), likes, \" Likes\"))));\n      });\n    }\n\n    return null;\n  }\n\n}\n\nexport default UserMiniCard; //\n// <div className=\"CardContainer\">\n//     <div className=\"TopCardContainer\">\n//         <Image\n//             className=\"ImageCard\"\n//             centered\n//             src={img_link}\n//             key={i}\n//         />\n//     </div>\n//     <Grid\n//         columns={2}\n//         verticalAlign='middle'\n//         centered\n//         className=\"BottomCardGrid\">\n//         <Grid.Column floated='left'>\n//             <Grid.Row>\n//                 <span className=\"LastnameUserMinCard\">{firstname.trim()}</span><br />\n//                 <span className=\"DistanceUserMinCard\">{firstname.trim()}</span>\n//             </Grid.Row>\n//         </Grid.Column>\n//         <Grid.Column  textAlign='right' floated='right' >\n//             <Grid.Row>\n//                 <Icon\n//                     circular\n//                     name='add'\n//                     color='white'\n//                     className='SeeIcon'\n//                 />\n//             </Grid.Row>\n//         </Grid.Column>\n//     </Grid>\n// </div>","map":{"version":3,"sources":["/Users/jeguglie/Desktop/MatchApp/Server.Client/client/src/components/UserMiniCard/UserMiniCard.js"],"names":["React","Card","Grid","Image","Icon","equal","DEFAULT_STATE","users","usersMinCard","props","UserMiniCard","Component","constructor","state","componentDidUpdate","prevProps","setState","render","length","map","user","i","user_id","img_link","firstname","likes","distance","points","age","clickedUser","Math","round"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,IAA5B,QAAwC,mBAAxC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE;AADW,CAAtB;;AAIA,MAAMC,YAAY,GAAIC,KAAD,IAAW,CAAE,CAAlC;;AAEA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACH,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKI,KAAL,qBAAiBP,aAAjB;AACH;;AAEDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAG,CAACV,KAAK,CAAC,KAAKI,KAAL,CAAWF,KAAZ,EAAmBQ,SAAS,CAACR,KAA7B,CAAT,EAA8C;AAC1C,WAAKS,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF;AAAnB,OAAd;AACH;AACJ;;AACDU,EAAAA,MAAM,GAAG;AAAA,UACGV,KADH,GACa,KAAKM,KADlB,CACGN,KADH;;AAEL,QAAIA,KAAK,IAAIA,KAAK,CAACW,MAAnB,EAA2B;AACvB,aAAOX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAAA,cACnBC,OADmB,GAC4CF,IAD5C,CACnBE,OADmB;AAAA,cACVC,QADU,GAC4CH,IAD5C,CACVG,QADU;AAAA,cACAC,SADA,GAC4CJ,IAD5C,CACAI,SADA;AAAA,cACWC,KADX,GAC4CL,IAD5C,CACWK,KADX;AAAA,cACkBC,QADlB,GAC4CN,IAD5C,CACkBM,QADlB;AAAA,cAC4BC,MAD5B,GAC4CP,IAD5C,CAC4BO,MAD5B;AAAA,cACqCC,GADrC,GAC4CR,IAD5C,CACqCQ,GADrC;AAE1B,eACI,oBAAC,IAAD,CAAM,MAAN;AAAa,UAAA,GAAG,EAAEP,CAAlB;AAAqB,UAAA,MAAM,EAAE,CAA7B;AAAgC,UAAA,MAAM,EAAE,CAAxC;AAA2C,UAAA,QAAQ,EAAE,CAArD;AAAwD,UAAA,WAAW,EAAE,CAArE;AAAwE,UAAA,UAAU,EAAE,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AACI,UAAA,SAAS,EAAC,aADd;AAEI,UAAA,OAAO,EAAE,MAAM,KAAKZ,KAAL,CAAWoB,WAAX,CAAuBP,OAAvB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGI,oBAAC,KAAD;AACI,UAAA,GAAG,EAAEC,QADT;AAEI,UAAA,GAAG,EAAEF,CAFT;AAGI,UAAA,OAAO,MAHX;AAII,UAAA,EAAE,EAAE,KAJR;AAKI,UAAA,IAAI,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EASI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcG,SAAd,EAAwB;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgCI,GAAhC,CAAxB,CADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBE,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAxB,OAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9C,CADJ,EAEI;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBC,MAAxB,OAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhC,CAFJ,CAFJ,CATJ,EAgBI,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEKF,KAFL,WADJ,CAhBJ,CADJ,CADJ;AA2BH,OA7BM,CAAP;AA8BH;;AACD,WAAO,IAAP;AACH;;AA/CsC;;AAiD3C,eAAef,YAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Card, Grid, Image, Icon } from 'semantic-ui-react';\nimport equal from 'fast-deep-equal';\n\nconst DEFAULT_STATE = {\n    users: []\n};\n\nconst usersMinCard = (props) => {}\n\nclass UserMiniCard extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {...DEFAULT_STATE};\n    }\n\n    componentDidUpdate(prevProps) {\n        if(!equal(this.props.users, prevProps.users)) {\n            this.setState({users: this.props.users});\n        }\n    }\n    render() {\n        const { users } = this.state;\n        if (users && users.length) {\n            return users.map((user, i) => {\n                const {user_id, img_link, firstname, likes, distance, points,  age} = user;\n                return (\n                    <Grid.Column key={i} mobile={4} tablet={8} computer={4} largeScreen={4} widescreen={4}>\n                        <Card\n                            className=\"userMinCard\"\n                            onClick={() => this.props.clickedUser(user_id)}>\n                            <Image\n                                src={img_link}\n                                key={i}\n                                wrapped\n                                ui={false}\n                                size='large' />\n                            <Card.Content>\n                                <Card.Header>{firstname}<span className=\"MinCardAge\">, {age}</span></Card.Header>\n                                <Card.Meta>\n                                    <span className='date'>{Math.round(distance)} <strong>km</strong></span>\n                                    <span className='date'>{points} <strong>Points</strong></span>\n                                </Card.Meta>\n                            </Card.Content>\n                            <Card.Content extra>\n                                <a>\n                                    <Icon name='heart' />\n                                    {likes} Likes\n                                </a>\n                            </Card.Content>\n                        </Card>\n                    </Grid.Column>\n                )\n            });\n        }\n        return null;\n    }\n}\nexport default UserMiniCard;\n//\n// <div className=\"CardContainer\">\n//     <div className=\"TopCardContainer\">\n//         <Image\n//             className=\"ImageCard\"\n//             centered\n//             src={img_link}\n//             key={i}\n//         />\n//     </div>\n//     <Grid\n//         columns={2}\n//         verticalAlign='middle'\n//         centered\n//         className=\"BottomCardGrid\">\n//         <Grid.Column floated='left'>\n//             <Grid.Row>\n//                 <span className=\"LastnameUserMinCard\">{firstname.trim()}</span><br />\n//                 <span className=\"DistanceUserMinCard\">{firstname.trim()}</span>\n//             </Grid.Row>\n//         </Grid.Column>\n//         <Grid.Column  textAlign='right' floated='right' >\n//             <Grid.Row>\n//                 <Icon\n//                     circular\n//                     name='add'\n//                     color='white'\n//                     className='SeeIcon'\n//                 />\n//             </Grid.Row>\n//         </Grid.Column>\n//     </Grid>\n// </div>"]},"metadata":{},"sourceType":"module"}